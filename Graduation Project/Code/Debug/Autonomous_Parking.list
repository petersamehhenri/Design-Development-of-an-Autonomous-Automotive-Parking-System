
Autonomous_Parking.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000308c  08000130  08000130  00010130  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080031bc  080031bc  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080031bc  080031bc  00020008  2**0
                  CONTENTS
  4 .ARM          00000000  080031bc  080031bc  00020008  2**0
                  CONTENTS
  5 .preinit_array 00000000  080031bc  080031bc  00020008  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080031bc  080031bc  000131bc  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080031c0  080031c0  000131c0  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000008  20000000  080031c4  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000000c8  20000008  080031cc  00020008  2**3
                  ALLOC
 10 ._user_heap_stack 00000600  200000d0  080031cc  000200d0  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020008  2**0
                  CONTENTS, READONLY
 12 .debug_info   00006425  00000000  00000000  00020031  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000012fb  00000000  00000000  00026456  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000320  00000000  00000000  00027758  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000288  00000000  00000000  00027a78  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0000359f  00000000  00000000  00027d00  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00004068  00000000  00000000  0002b29f  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0000a5fc  00000000  00000000  0002f307  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00039903  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000bdc  00000000  00000000  00039980  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000008 	.word	0x20000008
 800014c:	00000000 	.word	0x00000000
 8000150:	080031a4 	.word	0x080031a4

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	2000000c 	.word	0x2000000c
 800016c:	080031a4 	.word	0x080031a4

08000170 <__aeabi_drsub>:
 8000170:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000174:	e002      	b.n	800017c <__adddf3>
 8000176:	bf00      	nop

08000178 <__aeabi_dsub>:
 8000178:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800017c <__adddf3>:
 800017c:	b530      	push	{r4, r5, lr}
 800017e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000182:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8000186:	ea94 0f05 	teq	r4, r5
 800018a:	bf08      	it	eq
 800018c:	ea90 0f02 	teqeq	r0, r2
 8000190:	bf1f      	itttt	ne
 8000192:	ea54 0c00 	orrsne.w	ip, r4, r0
 8000196:	ea55 0c02 	orrsne.w	ip, r5, r2
 800019a:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800019e:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80001a2:	f000 80e2 	beq.w	800036a <__adddf3+0x1ee>
 80001a6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80001aa:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80001ae:	bfb8      	it	lt
 80001b0:	426d      	neglt	r5, r5
 80001b2:	dd0c      	ble.n	80001ce <__adddf3+0x52>
 80001b4:	442c      	add	r4, r5
 80001b6:	ea80 0202 	eor.w	r2, r0, r2
 80001ba:	ea81 0303 	eor.w	r3, r1, r3
 80001be:	ea82 0000 	eor.w	r0, r2, r0
 80001c2:	ea83 0101 	eor.w	r1, r3, r1
 80001c6:	ea80 0202 	eor.w	r2, r0, r2
 80001ca:	ea81 0303 	eor.w	r3, r1, r3
 80001ce:	2d36      	cmp	r5, #54	; 0x36
 80001d0:	bf88      	it	hi
 80001d2:	bd30      	pophi	{r4, r5, pc}
 80001d4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80001d8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80001dc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80001e0:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80001e4:	d002      	beq.n	80001ec <__adddf3+0x70>
 80001e6:	4240      	negs	r0, r0
 80001e8:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80001ec:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80001f0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80001f4:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80001f8:	d002      	beq.n	8000200 <__adddf3+0x84>
 80001fa:	4252      	negs	r2, r2
 80001fc:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000200:	ea94 0f05 	teq	r4, r5
 8000204:	f000 80a7 	beq.w	8000356 <__adddf3+0x1da>
 8000208:	f1a4 0401 	sub.w	r4, r4, #1
 800020c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000210:	db0d      	blt.n	800022e <__adddf3+0xb2>
 8000212:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000216:	fa22 f205 	lsr.w	r2, r2, r5
 800021a:	1880      	adds	r0, r0, r2
 800021c:	f141 0100 	adc.w	r1, r1, #0
 8000220:	fa03 f20e 	lsl.w	r2, r3, lr
 8000224:	1880      	adds	r0, r0, r2
 8000226:	fa43 f305 	asr.w	r3, r3, r5
 800022a:	4159      	adcs	r1, r3
 800022c:	e00e      	b.n	800024c <__adddf3+0xd0>
 800022e:	f1a5 0520 	sub.w	r5, r5, #32
 8000232:	f10e 0e20 	add.w	lr, lr, #32
 8000236:	2a01      	cmp	r2, #1
 8000238:	fa03 fc0e 	lsl.w	ip, r3, lr
 800023c:	bf28      	it	cs
 800023e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000242:	fa43 f305 	asr.w	r3, r3, r5
 8000246:	18c0      	adds	r0, r0, r3
 8000248:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800024c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000250:	d507      	bpl.n	8000262 <__adddf3+0xe6>
 8000252:	f04f 0e00 	mov.w	lr, #0
 8000256:	f1dc 0c00 	rsbs	ip, ip, #0
 800025a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800025e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000262:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000266:	d31b      	bcc.n	80002a0 <__adddf3+0x124>
 8000268:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800026c:	d30c      	bcc.n	8000288 <__adddf3+0x10c>
 800026e:	0849      	lsrs	r1, r1, #1
 8000270:	ea5f 0030 	movs.w	r0, r0, rrx
 8000274:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000278:	f104 0401 	add.w	r4, r4, #1
 800027c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000280:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000284:	f080 809a 	bcs.w	80003bc <__adddf3+0x240>
 8000288:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 800028c:	bf08      	it	eq
 800028e:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000292:	f150 0000 	adcs.w	r0, r0, #0
 8000296:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800029a:	ea41 0105 	orr.w	r1, r1, r5
 800029e:	bd30      	pop	{r4, r5, pc}
 80002a0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80002a4:	4140      	adcs	r0, r0
 80002a6:	eb41 0101 	adc.w	r1, r1, r1
 80002aa:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80002ae:	f1a4 0401 	sub.w	r4, r4, #1
 80002b2:	d1e9      	bne.n	8000288 <__adddf3+0x10c>
 80002b4:	f091 0f00 	teq	r1, #0
 80002b8:	bf04      	itt	eq
 80002ba:	4601      	moveq	r1, r0
 80002bc:	2000      	moveq	r0, #0
 80002be:	fab1 f381 	clz	r3, r1
 80002c2:	bf08      	it	eq
 80002c4:	3320      	addeq	r3, #32
 80002c6:	f1a3 030b 	sub.w	r3, r3, #11
 80002ca:	f1b3 0220 	subs.w	r2, r3, #32
 80002ce:	da0c      	bge.n	80002ea <__adddf3+0x16e>
 80002d0:	320c      	adds	r2, #12
 80002d2:	dd08      	ble.n	80002e6 <__adddf3+0x16a>
 80002d4:	f102 0c14 	add.w	ip, r2, #20
 80002d8:	f1c2 020c 	rsb	r2, r2, #12
 80002dc:	fa01 f00c 	lsl.w	r0, r1, ip
 80002e0:	fa21 f102 	lsr.w	r1, r1, r2
 80002e4:	e00c      	b.n	8000300 <__adddf3+0x184>
 80002e6:	f102 0214 	add.w	r2, r2, #20
 80002ea:	bfd8      	it	le
 80002ec:	f1c2 0c20 	rsble	ip, r2, #32
 80002f0:	fa01 f102 	lsl.w	r1, r1, r2
 80002f4:	fa20 fc0c 	lsr.w	ip, r0, ip
 80002f8:	bfdc      	itt	le
 80002fa:	ea41 010c 	orrle.w	r1, r1, ip
 80002fe:	4090      	lslle	r0, r2
 8000300:	1ae4      	subs	r4, r4, r3
 8000302:	bfa2      	ittt	ge
 8000304:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000308:	4329      	orrge	r1, r5
 800030a:	bd30      	popge	{r4, r5, pc}
 800030c:	ea6f 0404 	mvn.w	r4, r4
 8000310:	3c1f      	subs	r4, #31
 8000312:	da1c      	bge.n	800034e <__adddf3+0x1d2>
 8000314:	340c      	adds	r4, #12
 8000316:	dc0e      	bgt.n	8000336 <__adddf3+0x1ba>
 8000318:	f104 0414 	add.w	r4, r4, #20
 800031c:	f1c4 0220 	rsb	r2, r4, #32
 8000320:	fa20 f004 	lsr.w	r0, r0, r4
 8000324:	fa01 f302 	lsl.w	r3, r1, r2
 8000328:	ea40 0003 	orr.w	r0, r0, r3
 800032c:	fa21 f304 	lsr.w	r3, r1, r4
 8000330:	ea45 0103 	orr.w	r1, r5, r3
 8000334:	bd30      	pop	{r4, r5, pc}
 8000336:	f1c4 040c 	rsb	r4, r4, #12
 800033a:	f1c4 0220 	rsb	r2, r4, #32
 800033e:	fa20 f002 	lsr.w	r0, r0, r2
 8000342:	fa01 f304 	lsl.w	r3, r1, r4
 8000346:	ea40 0003 	orr.w	r0, r0, r3
 800034a:	4629      	mov	r1, r5
 800034c:	bd30      	pop	{r4, r5, pc}
 800034e:	fa21 f004 	lsr.w	r0, r1, r4
 8000352:	4629      	mov	r1, r5
 8000354:	bd30      	pop	{r4, r5, pc}
 8000356:	f094 0f00 	teq	r4, #0
 800035a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800035e:	bf06      	itte	eq
 8000360:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000364:	3401      	addeq	r4, #1
 8000366:	3d01      	subne	r5, #1
 8000368:	e74e      	b.n	8000208 <__adddf3+0x8c>
 800036a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800036e:	bf18      	it	ne
 8000370:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000374:	d029      	beq.n	80003ca <__adddf3+0x24e>
 8000376:	ea94 0f05 	teq	r4, r5
 800037a:	bf08      	it	eq
 800037c:	ea90 0f02 	teqeq	r0, r2
 8000380:	d005      	beq.n	800038e <__adddf3+0x212>
 8000382:	ea54 0c00 	orrs.w	ip, r4, r0
 8000386:	bf04      	itt	eq
 8000388:	4619      	moveq	r1, r3
 800038a:	4610      	moveq	r0, r2
 800038c:	bd30      	pop	{r4, r5, pc}
 800038e:	ea91 0f03 	teq	r1, r3
 8000392:	bf1e      	ittt	ne
 8000394:	2100      	movne	r1, #0
 8000396:	2000      	movne	r0, #0
 8000398:	bd30      	popne	{r4, r5, pc}
 800039a:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800039e:	d105      	bne.n	80003ac <__adddf3+0x230>
 80003a0:	0040      	lsls	r0, r0, #1
 80003a2:	4149      	adcs	r1, r1
 80003a4:	bf28      	it	cs
 80003a6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80003aa:	bd30      	pop	{r4, r5, pc}
 80003ac:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80003b0:	bf3c      	itt	cc
 80003b2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80003b6:	bd30      	popcc	{r4, r5, pc}
 80003b8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80003bc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80003c0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80003c4:	f04f 0000 	mov.w	r0, #0
 80003c8:	bd30      	pop	{r4, r5, pc}
 80003ca:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80003ce:	bf1a      	itte	ne
 80003d0:	4619      	movne	r1, r3
 80003d2:	4610      	movne	r0, r2
 80003d4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80003d8:	bf1c      	itt	ne
 80003da:	460b      	movne	r3, r1
 80003dc:	4602      	movne	r2, r0
 80003de:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80003e2:	bf06      	itte	eq
 80003e4:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80003e8:	ea91 0f03 	teqeq	r1, r3
 80003ec:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80003f0:	bd30      	pop	{r4, r5, pc}
 80003f2:	bf00      	nop

080003f4 <__aeabi_ui2d>:
 80003f4:	f090 0f00 	teq	r0, #0
 80003f8:	bf04      	itt	eq
 80003fa:	2100      	moveq	r1, #0
 80003fc:	4770      	bxeq	lr
 80003fe:	b530      	push	{r4, r5, lr}
 8000400:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000404:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000408:	f04f 0500 	mov.w	r5, #0
 800040c:	f04f 0100 	mov.w	r1, #0
 8000410:	e750      	b.n	80002b4 <__adddf3+0x138>
 8000412:	bf00      	nop

08000414 <__aeabi_i2d>:
 8000414:	f090 0f00 	teq	r0, #0
 8000418:	bf04      	itt	eq
 800041a:	2100      	moveq	r1, #0
 800041c:	4770      	bxeq	lr
 800041e:	b530      	push	{r4, r5, lr}
 8000420:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000424:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000428:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800042c:	bf48      	it	mi
 800042e:	4240      	negmi	r0, r0
 8000430:	f04f 0100 	mov.w	r1, #0
 8000434:	e73e      	b.n	80002b4 <__adddf3+0x138>
 8000436:	bf00      	nop

08000438 <__aeabi_f2d>:
 8000438:	0042      	lsls	r2, r0, #1
 800043a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800043e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000442:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000446:	bf1f      	itttt	ne
 8000448:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800044c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000450:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000454:	4770      	bxne	lr
 8000456:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800045a:	bf08      	it	eq
 800045c:	4770      	bxeq	lr
 800045e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000462:	bf04      	itt	eq
 8000464:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000468:	4770      	bxeq	lr
 800046a:	b530      	push	{r4, r5, lr}
 800046c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000470:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000474:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000478:	e71c      	b.n	80002b4 <__adddf3+0x138>
 800047a:	bf00      	nop

0800047c <__aeabi_ul2d>:
 800047c:	ea50 0201 	orrs.w	r2, r0, r1
 8000480:	bf08      	it	eq
 8000482:	4770      	bxeq	lr
 8000484:	b530      	push	{r4, r5, lr}
 8000486:	f04f 0500 	mov.w	r5, #0
 800048a:	e00a      	b.n	80004a2 <__aeabi_l2d+0x16>

0800048c <__aeabi_l2d>:
 800048c:	ea50 0201 	orrs.w	r2, r0, r1
 8000490:	bf08      	it	eq
 8000492:	4770      	bxeq	lr
 8000494:	b530      	push	{r4, r5, lr}
 8000496:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800049a:	d502      	bpl.n	80004a2 <__aeabi_l2d+0x16>
 800049c:	4240      	negs	r0, r0
 800049e:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80004a2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004a6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004aa:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80004ae:	f43f aed8 	beq.w	8000262 <__adddf3+0xe6>
 80004b2:	f04f 0203 	mov.w	r2, #3
 80004b6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004ba:	bf18      	it	ne
 80004bc:	3203      	addne	r2, #3
 80004be:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80004c2:	bf18      	it	ne
 80004c4:	3203      	addne	r2, #3
 80004c6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80004ca:	f1c2 0320 	rsb	r3, r2, #32
 80004ce:	fa00 fc03 	lsl.w	ip, r0, r3
 80004d2:	fa20 f002 	lsr.w	r0, r0, r2
 80004d6:	fa01 fe03 	lsl.w	lr, r1, r3
 80004da:	ea40 000e 	orr.w	r0, r0, lr
 80004de:	fa21 f102 	lsr.w	r1, r1, r2
 80004e2:	4414      	add	r4, r2
 80004e4:	e6bd      	b.n	8000262 <__adddf3+0xe6>
 80004e6:	bf00      	nop

080004e8 <__aeabi_dmul>:
 80004e8:	b570      	push	{r4, r5, r6, lr}
 80004ea:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80004ee:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80004f2:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80004f6:	bf1d      	ittte	ne
 80004f8:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80004fc:	ea94 0f0c 	teqne	r4, ip
 8000500:	ea95 0f0c 	teqne	r5, ip
 8000504:	f000 f8de 	bleq	80006c4 <__aeabi_dmul+0x1dc>
 8000508:	442c      	add	r4, r5
 800050a:	ea81 0603 	eor.w	r6, r1, r3
 800050e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000512:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000516:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800051a:	bf18      	it	ne
 800051c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000520:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000524:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000528:	d038      	beq.n	800059c <__aeabi_dmul+0xb4>
 800052a:	fba0 ce02 	umull	ip, lr, r0, r2
 800052e:	f04f 0500 	mov.w	r5, #0
 8000532:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000536:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800053a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800053e:	f04f 0600 	mov.w	r6, #0
 8000542:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000546:	f09c 0f00 	teq	ip, #0
 800054a:	bf18      	it	ne
 800054c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000550:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000554:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000558:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800055c:	d204      	bcs.n	8000568 <__aeabi_dmul+0x80>
 800055e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000562:	416d      	adcs	r5, r5
 8000564:	eb46 0606 	adc.w	r6, r6, r6
 8000568:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800056c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000570:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000574:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000578:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800057c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000580:	bf88      	it	hi
 8000582:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000586:	d81e      	bhi.n	80005c6 <__aeabi_dmul+0xde>
 8000588:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 800058c:	bf08      	it	eq
 800058e:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000592:	f150 0000 	adcs.w	r0, r0, #0
 8000596:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800059a:	bd70      	pop	{r4, r5, r6, pc}
 800059c:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80005a0:	ea46 0101 	orr.w	r1, r6, r1
 80005a4:	ea40 0002 	orr.w	r0, r0, r2
 80005a8:	ea81 0103 	eor.w	r1, r1, r3
 80005ac:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80005b0:	bfc2      	ittt	gt
 80005b2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80005b6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80005ba:	bd70      	popgt	{r4, r5, r6, pc}
 80005bc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005c0:	f04f 0e00 	mov.w	lr, #0
 80005c4:	3c01      	subs	r4, #1
 80005c6:	f300 80ab 	bgt.w	8000720 <__aeabi_dmul+0x238>
 80005ca:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80005ce:	bfde      	ittt	le
 80005d0:	2000      	movle	r0, #0
 80005d2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80005d6:	bd70      	pople	{r4, r5, r6, pc}
 80005d8:	f1c4 0400 	rsb	r4, r4, #0
 80005dc:	3c20      	subs	r4, #32
 80005de:	da35      	bge.n	800064c <__aeabi_dmul+0x164>
 80005e0:	340c      	adds	r4, #12
 80005e2:	dc1b      	bgt.n	800061c <__aeabi_dmul+0x134>
 80005e4:	f104 0414 	add.w	r4, r4, #20
 80005e8:	f1c4 0520 	rsb	r5, r4, #32
 80005ec:	fa00 f305 	lsl.w	r3, r0, r5
 80005f0:	fa20 f004 	lsr.w	r0, r0, r4
 80005f4:	fa01 f205 	lsl.w	r2, r1, r5
 80005f8:	ea40 0002 	orr.w	r0, r0, r2
 80005fc:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000600:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000604:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000608:	fa21 f604 	lsr.w	r6, r1, r4
 800060c:	eb42 0106 	adc.w	r1, r2, r6
 8000610:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000614:	bf08      	it	eq
 8000616:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800061a:	bd70      	pop	{r4, r5, r6, pc}
 800061c:	f1c4 040c 	rsb	r4, r4, #12
 8000620:	f1c4 0520 	rsb	r5, r4, #32
 8000624:	fa00 f304 	lsl.w	r3, r0, r4
 8000628:	fa20 f005 	lsr.w	r0, r0, r5
 800062c:	fa01 f204 	lsl.w	r2, r1, r4
 8000630:	ea40 0002 	orr.w	r0, r0, r2
 8000634:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000638:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800063c:	f141 0100 	adc.w	r1, r1, #0
 8000640:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000644:	bf08      	it	eq
 8000646:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800064a:	bd70      	pop	{r4, r5, r6, pc}
 800064c:	f1c4 0520 	rsb	r5, r4, #32
 8000650:	fa00 f205 	lsl.w	r2, r0, r5
 8000654:	ea4e 0e02 	orr.w	lr, lr, r2
 8000658:	fa20 f304 	lsr.w	r3, r0, r4
 800065c:	fa01 f205 	lsl.w	r2, r1, r5
 8000660:	ea43 0302 	orr.w	r3, r3, r2
 8000664:	fa21 f004 	lsr.w	r0, r1, r4
 8000668:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800066c:	fa21 f204 	lsr.w	r2, r1, r4
 8000670:	ea20 0002 	bic.w	r0, r0, r2
 8000674:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000678:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800067c:	bf08      	it	eq
 800067e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000682:	bd70      	pop	{r4, r5, r6, pc}
 8000684:	f094 0f00 	teq	r4, #0
 8000688:	d10f      	bne.n	80006aa <__aeabi_dmul+0x1c2>
 800068a:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 800068e:	0040      	lsls	r0, r0, #1
 8000690:	eb41 0101 	adc.w	r1, r1, r1
 8000694:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000698:	bf08      	it	eq
 800069a:	3c01      	subeq	r4, #1
 800069c:	d0f7      	beq.n	800068e <__aeabi_dmul+0x1a6>
 800069e:	ea41 0106 	orr.w	r1, r1, r6
 80006a2:	f095 0f00 	teq	r5, #0
 80006a6:	bf18      	it	ne
 80006a8:	4770      	bxne	lr
 80006aa:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80006ae:	0052      	lsls	r2, r2, #1
 80006b0:	eb43 0303 	adc.w	r3, r3, r3
 80006b4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80006b8:	bf08      	it	eq
 80006ba:	3d01      	subeq	r5, #1
 80006bc:	d0f7      	beq.n	80006ae <__aeabi_dmul+0x1c6>
 80006be:	ea43 0306 	orr.w	r3, r3, r6
 80006c2:	4770      	bx	lr
 80006c4:	ea94 0f0c 	teq	r4, ip
 80006c8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80006cc:	bf18      	it	ne
 80006ce:	ea95 0f0c 	teqne	r5, ip
 80006d2:	d00c      	beq.n	80006ee <__aeabi_dmul+0x206>
 80006d4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006d8:	bf18      	it	ne
 80006da:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006de:	d1d1      	bne.n	8000684 <__aeabi_dmul+0x19c>
 80006e0:	ea81 0103 	eor.w	r1, r1, r3
 80006e4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006e8:	f04f 0000 	mov.w	r0, #0
 80006ec:	bd70      	pop	{r4, r5, r6, pc}
 80006ee:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80006f2:	bf06      	itte	eq
 80006f4:	4610      	moveq	r0, r2
 80006f6:	4619      	moveq	r1, r3
 80006f8:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80006fc:	d019      	beq.n	8000732 <__aeabi_dmul+0x24a>
 80006fe:	ea94 0f0c 	teq	r4, ip
 8000702:	d102      	bne.n	800070a <__aeabi_dmul+0x222>
 8000704:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000708:	d113      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800070a:	ea95 0f0c 	teq	r5, ip
 800070e:	d105      	bne.n	800071c <__aeabi_dmul+0x234>
 8000710:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000714:	bf1c      	itt	ne
 8000716:	4610      	movne	r0, r2
 8000718:	4619      	movne	r1, r3
 800071a:	d10a      	bne.n	8000732 <__aeabi_dmul+0x24a>
 800071c:	ea81 0103 	eor.w	r1, r1, r3
 8000720:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000724:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000728:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800072c:	f04f 0000 	mov.w	r0, #0
 8000730:	bd70      	pop	{r4, r5, r6, pc}
 8000732:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000736:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800073a:	bd70      	pop	{r4, r5, r6, pc}

0800073c <__aeabi_ddiv>:
 800073c:	b570      	push	{r4, r5, r6, lr}
 800073e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000742:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000746:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800074a:	bf1d      	ittte	ne
 800074c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000750:	ea94 0f0c 	teqne	r4, ip
 8000754:	ea95 0f0c 	teqne	r5, ip
 8000758:	f000 f8a7 	bleq	80008aa <__aeabi_ddiv+0x16e>
 800075c:	eba4 0405 	sub.w	r4, r4, r5
 8000760:	ea81 0e03 	eor.w	lr, r1, r3
 8000764:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000768:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800076c:	f000 8088 	beq.w	8000880 <__aeabi_ddiv+0x144>
 8000770:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000774:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000778:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800077c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000780:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000784:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8000788:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 800078c:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000790:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000794:	429d      	cmp	r5, r3
 8000796:	bf08      	it	eq
 8000798:	4296      	cmpeq	r6, r2
 800079a:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 800079e:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80007a2:	d202      	bcs.n	80007aa <__aeabi_ddiv+0x6e>
 80007a4:	085b      	lsrs	r3, r3, #1
 80007a6:	ea4f 0232 	mov.w	r2, r2, rrx
 80007aa:	1ab6      	subs	r6, r6, r2
 80007ac:	eb65 0503 	sbc.w	r5, r5, r3
 80007b0:	085b      	lsrs	r3, r3, #1
 80007b2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007b6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80007ba:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80007be:	ebb6 0e02 	subs.w	lr, r6, r2
 80007c2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007c6:	bf22      	ittt	cs
 80007c8:	1ab6      	subcs	r6, r6, r2
 80007ca:	4675      	movcs	r5, lr
 80007cc:	ea40 000c 	orrcs.w	r0, r0, ip
 80007d0:	085b      	lsrs	r3, r3, #1
 80007d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80007d6:	ebb6 0e02 	subs.w	lr, r6, r2
 80007da:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007de:	bf22      	ittt	cs
 80007e0:	1ab6      	subcs	r6, r6, r2
 80007e2:	4675      	movcs	r5, lr
 80007e4:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 80007e8:	085b      	lsrs	r3, r3, #1
 80007ea:	ea4f 0232 	mov.w	r2, r2, rrx
 80007ee:	ebb6 0e02 	subs.w	lr, r6, r2
 80007f2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80007f6:	bf22      	ittt	cs
 80007f8:	1ab6      	subcs	r6, r6, r2
 80007fa:	4675      	movcs	r5, lr
 80007fc:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000800:	085b      	lsrs	r3, r3, #1
 8000802:	ea4f 0232 	mov.w	r2, r2, rrx
 8000806:	ebb6 0e02 	subs.w	lr, r6, r2
 800080a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800080e:	bf22      	ittt	cs
 8000810:	1ab6      	subcs	r6, r6, r2
 8000812:	4675      	movcs	r5, lr
 8000814:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000818:	ea55 0e06 	orrs.w	lr, r5, r6
 800081c:	d018      	beq.n	8000850 <__aeabi_ddiv+0x114>
 800081e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000822:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000826:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800082a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800082e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000832:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000836:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800083a:	d1c0      	bne.n	80007be <__aeabi_ddiv+0x82>
 800083c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000840:	d10b      	bne.n	800085a <__aeabi_ddiv+0x11e>
 8000842:	ea41 0100 	orr.w	r1, r1, r0
 8000846:	f04f 0000 	mov.w	r0, #0
 800084a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800084e:	e7b6      	b.n	80007be <__aeabi_ddiv+0x82>
 8000850:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000854:	bf04      	itt	eq
 8000856:	4301      	orreq	r1, r0
 8000858:	2000      	moveq	r0, #0
 800085a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800085e:	bf88      	it	hi
 8000860:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000864:	f63f aeaf 	bhi.w	80005c6 <__aeabi_dmul+0xde>
 8000868:	ebb5 0c03 	subs.w	ip, r5, r3
 800086c:	bf04      	itt	eq
 800086e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000872:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000876:	f150 0000 	adcs.w	r0, r0, #0
 800087a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800087e:	bd70      	pop	{r4, r5, r6, pc}
 8000880:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000884:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8000888:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 800088c:	bfc2      	ittt	gt
 800088e:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000892:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8000896:	bd70      	popgt	{r4, r5, r6, pc}
 8000898:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 800089c:	f04f 0e00 	mov.w	lr, #0
 80008a0:	3c01      	subs	r4, #1
 80008a2:	e690      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008a4:	ea45 0e06 	orr.w	lr, r5, r6
 80008a8:	e68d      	b.n	80005c6 <__aeabi_dmul+0xde>
 80008aa:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80008ae:	ea94 0f0c 	teq	r4, ip
 80008b2:	bf08      	it	eq
 80008b4:	ea95 0f0c 	teqeq	r5, ip
 80008b8:	f43f af3b 	beq.w	8000732 <__aeabi_dmul+0x24a>
 80008bc:	ea94 0f0c 	teq	r4, ip
 80008c0:	d10a      	bne.n	80008d8 <__aeabi_ddiv+0x19c>
 80008c2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80008c6:	f47f af34 	bne.w	8000732 <__aeabi_dmul+0x24a>
 80008ca:	ea95 0f0c 	teq	r5, ip
 80008ce:	f47f af25 	bne.w	800071c <__aeabi_dmul+0x234>
 80008d2:	4610      	mov	r0, r2
 80008d4:	4619      	mov	r1, r3
 80008d6:	e72c      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008d8:	ea95 0f0c 	teq	r5, ip
 80008dc:	d106      	bne.n	80008ec <__aeabi_ddiv+0x1b0>
 80008de:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008e2:	f43f aefd 	beq.w	80006e0 <__aeabi_dmul+0x1f8>
 80008e6:	4610      	mov	r0, r2
 80008e8:	4619      	mov	r1, r3
 80008ea:	e722      	b.n	8000732 <__aeabi_dmul+0x24a>
 80008ec:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80008f0:	bf18      	it	ne
 80008f2:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80008f6:	f47f aec5 	bne.w	8000684 <__aeabi_dmul+0x19c>
 80008fa:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80008fe:	f47f af0d 	bne.w	800071c <__aeabi_dmul+0x234>
 8000902:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000906:	f47f aeeb 	bne.w	80006e0 <__aeabi_dmul+0x1f8>
 800090a:	e712      	b.n	8000732 <__aeabi_dmul+0x24a>

0800090c <__aeabi_d2uiz>:
 800090c:	004a      	lsls	r2, r1, #1
 800090e:	d211      	bcs.n	8000934 <__aeabi_d2uiz+0x28>
 8000910:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000914:	d211      	bcs.n	800093a <__aeabi_d2uiz+0x2e>
 8000916:	d50d      	bpl.n	8000934 <__aeabi_d2uiz+0x28>
 8000918:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 800091c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000920:	d40e      	bmi.n	8000940 <__aeabi_d2uiz+0x34>
 8000922:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000926:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 800092a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 800092e:	fa23 f002 	lsr.w	r0, r3, r2
 8000932:	4770      	bx	lr
 8000934:	f04f 0000 	mov.w	r0, #0
 8000938:	4770      	bx	lr
 800093a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 800093e:	d102      	bne.n	8000946 <__aeabi_d2uiz+0x3a>
 8000940:	f04f 30ff 	mov.w	r0, #4294967295
 8000944:	4770      	bx	lr
 8000946:	f04f 0000 	mov.w	r0, #0
 800094a:	4770      	bx	lr

0800094c <__aeabi_d2f>:
 800094c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000950:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000954:	bf24      	itt	cs
 8000956:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 800095a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 800095e:	d90d      	bls.n	800097c <__aeabi_d2f+0x30>
 8000960:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000964:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000968:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 800096c:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000970:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000974:	bf08      	it	eq
 8000976:	f020 0001 	biceq.w	r0, r0, #1
 800097a:	4770      	bx	lr
 800097c:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000980:	d121      	bne.n	80009c6 <__aeabi_d2f+0x7a>
 8000982:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000986:	bfbc      	itt	lt
 8000988:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 800098c:	4770      	bxlt	lr
 800098e:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000992:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000996:	f1c2 0218 	rsb	r2, r2, #24
 800099a:	f1c2 0c20 	rsb	ip, r2, #32
 800099e:	fa10 f30c 	lsls.w	r3, r0, ip
 80009a2:	fa20 f002 	lsr.w	r0, r0, r2
 80009a6:	bf18      	it	ne
 80009a8:	f040 0001 	orrne.w	r0, r0, #1
 80009ac:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 80009b0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 80009b4:	fa03 fc0c 	lsl.w	ip, r3, ip
 80009b8:	ea40 000c 	orr.w	r0, r0, ip
 80009bc:	fa23 f302 	lsr.w	r3, r3, r2
 80009c0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 80009c4:	e7cc      	b.n	8000960 <__aeabi_d2f+0x14>
 80009c6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 80009ca:	d107      	bne.n	80009dc <__aeabi_d2f+0x90>
 80009cc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 80009d0:	bf1e      	ittt	ne
 80009d2:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 80009d6:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 80009da:	4770      	bxne	lr
 80009dc:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 80009e0:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 80009e4:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 80009e8:	4770      	bx	lr
 80009ea:	bf00      	nop

080009ec <__aeabi_frsub>:
 80009ec:	f080 4000 	eor.w	r0, r0, #2147483648	; 0x80000000
 80009f0:	e002      	b.n	80009f8 <__addsf3>
 80009f2:	bf00      	nop

080009f4 <__aeabi_fsub>:
 80009f4:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000

080009f8 <__addsf3>:
 80009f8:	0042      	lsls	r2, r0, #1
 80009fa:	bf1f      	itttt	ne
 80009fc:	ea5f 0341 	movsne.w	r3, r1, lsl #1
 8000a00:	ea92 0f03 	teqne	r2, r3
 8000a04:	ea7f 6c22 	mvnsne.w	ip, r2, asr #24
 8000a08:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000a0c:	d06a      	beq.n	8000ae4 <__addsf3+0xec>
 8000a0e:	ea4f 6212 	mov.w	r2, r2, lsr #24
 8000a12:	ebd2 6313 	rsbs	r3, r2, r3, lsr #24
 8000a16:	bfc1      	itttt	gt
 8000a18:	18d2      	addgt	r2, r2, r3
 8000a1a:	4041      	eorgt	r1, r0
 8000a1c:	4048      	eorgt	r0, r1
 8000a1e:	4041      	eorgt	r1, r0
 8000a20:	bfb8      	it	lt
 8000a22:	425b      	neglt	r3, r3
 8000a24:	2b19      	cmp	r3, #25
 8000a26:	bf88      	it	hi
 8000a28:	4770      	bxhi	lr
 8000a2a:	f010 4f00 	tst.w	r0, #2147483648	; 0x80000000
 8000a2e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000a32:	f020 407f 	bic.w	r0, r0, #4278190080	; 0xff000000
 8000a36:	bf18      	it	ne
 8000a38:	4240      	negne	r0, r0
 8000a3a:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000a3e:	f441 0100 	orr.w	r1, r1, #8388608	; 0x800000
 8000a42:	f021 417f 	bic.w	r1, r1, #4278190080	; 0xff000000
 8000a46:	bf18      	it	ne
 8000a48:	4249      	negne	r1, r1
 8000a4a:	ea92 0f03 	teq	r2, r3
 8000a4e:	d03f      	beq.n	8000ad0 <__addsf3+0xd8>
 8000a50:	f1a2 0201 	sub.w	r2, r2, #1
 8000a54:	fa41 fc03 	asr.w	ip, r1, r3
 8000a58:	eb10 000c 	adds.w	r0, r0, ip
 8000a5c:	f1c3 0320 	rsb	r3, r3, #32
 8000a60:	fa01 f103 	lsl.w	r1, r1, r3
 8000a64:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000a68:	d502      	bpl.n	8000a70 <__addsf3+0x78>
 8000a6a:	4249      	negs	r1, r1
 8000a6c:	eb60 0040 	sbc.w	r0, r0, r0, lsl #1
 8000a70:	f5b0 0f00 	cmp.w	r0, #8388608	; 0x800000
 8000a74:	d313      	bcc.n	8000a9e <__addsf3+0xa6>
 8000a76:	f1b0 7f80 	cmp.w	r0, #16777216	; 0x1000000
 8000a7a:	d306      	bcc.n	8000a8a <__addsf3+0x92>
 8000a7c:	0840      	lsrs	r0, r0, #1
 8000a7e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000a82:	f102 0201 	add.w	r2, r2, #1
 8000a86:	2afe      	cmp	r2, #254	; 0xfe
 8000a88:	d251      	bcs.n	8000b2e <__addsf3+0x136>
 8000a8a:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8000a8e:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000a92:	bf08      	it	eq
 8000a94:	f020 0001 	biceq.w	r0, r0, #1
 8000a98:	ea40 0003 	orr.w	r0, r0, r3
 8000a9c:	4770      	bx	lr
 8000a9e:	0049      	lsls	r1, r1, #1
 8000aa0:	eb40 0000 	adc.w	r0, r0, r0
 8000aa4:	f410 0f00 	tst.w	r0, #8388608	; 0x800000
 8000aa8:	f1a2 0201 	sub.w	r2, r2, #1
 8000aac:	d1ed      	bne.n	8000a8a <__addsf3+0x92>
 8000aae:	fab0 fc80 	clz	ip, r0
 8000ab2:	f1ac 0c08 	sub.w	ip, ip, #8
 8000ab6:	ebb2 020c 	subs.w	r2, r2, ip
 8000aba:	fa00 f00c 	lsl.w	r0, r0, ip
 8000abe:	bfaa      	itet	ge
 8000ac0:	eb00 50c2 	addge.w	r0, r0, r2, lsl #23
 8000ac4:	4252      	neglt	r2, r2
 8000ac6:	4318      	orrge	r0, r3
 8000ac8:	bfbc      	itt	lt
 8000aca:	40d0      	lsrlt	r0, r2
 8000acc:	4318      	orrlt	r0, r3
 8000ace:	4770      	bx	lr
 8000ad0:	f092 0f00 	teq	r2, #0
 8000ad4:	f481 0100 	eor.w	r1, r1, #8388608	; 0x800000
 8000ad8:	bf06      	itte	eq
 8000ada:	f480 0000 	eoreq.w	r0, r0, #8388608	; 0x800000
 8000ade:	3201      	addeq	r2, #1
 8000ae0:	3b01      	subne	r3, #1
 8000ae2:	e7b5      	b.n	8000a50 <__addsf3+0x58>
 8000ae4:	ea4f 0341 	mov.w	r3, r1, lsl #1
 8000ae8:	ea7f 6c22 	mvns.w	ip, r2, asr #24
 8000aec:	bf18      	it	ne
 8000aee:	ea7f 6c23 	mvnsne.w	ip, r3, asr #24
 8000af2:	d021      	beq.n	8000b38 <__addsf3+0x140>
 8000af4:	ea92 0f03 	teq	r2, r3
 8000af8:	d004      	beq.n	8000b04 <__addsf3+0x10c>
 8000afa:	f092 0f00 	teq	r2, #0
 8000afe:	bf08      	it	eq
 8000b00:	4608      	moveq	r0, r1
 8000b02:	4770      	bx	lr
 8000b04:	ea90 0f01 	teq	r0, r1
 8000b08:	bf1c      	itt	ne
 8000b0a:	2000      	movne	r0, #0
 8000b0c:	4770      	bxne	lr
 8000b0e:	f012 4f7f 	tst.w	r2, #4278190080	; 0xff000000
 8000b12:	d104      	bne.n	8000b1e <__addsf3+0x126>
 8000b14:	0040      	lsls	r0, r0, #1
 8000b16:	bf28      	it	cs
 8000b18:	f040 4000 	orrcs.w	r0, r0, #2147483648	; 0x80000000
 8000b1c:	4770      	bx	lr
 8000b1e:	f112 7200 	adds.w	r2, r2, #33554432	; 0x2000000
 8000b22:	bf3c      	itt	cc
 8000b24:	f500 0000 	addcc.w	r0, r0, #8388608	; 0x800000
 8000b28:	4770      	bxcc	lr
 8000b2a:	f000 4300 	and.w	r3, r0, #2147483648	; 0x80000000
 8000b2e:	f043 40fe 	orr.w	r0, r3, #2130706432	; 0x7f000000
 8000b32:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000b36:	4770      	bx	lr
 8000b38:	ea7f 6222 	mvns.w	r2, r2, asr #24
 8000b3c:	bf16      	itet	ne
 8000b3e:	4608      	movne	r0, r1
 8000b40:	ea7f 6323 	mvnseq.w	r3, r3, asr #24
 8000b44:	4601      	movne	r1, r0
 8000b46:	0242      	lsls	r2, r0, #9
 8000b48:	bf06      	itte	eq
 8000b4a:	ea5f 2341 	movseq.w	r3, r1, lsl #9
 8000b4e:	ea90 0f01 	teqeq	r0, r1
 8000b52:	f440 0080 	orrne.w	r0, r0, #4194304	; 0x400000
 8000b56:	4770      	bx	lr

08000b58 <__aeabi_ui2f>:
 8000b58:	f04f 0300 	mov.w	r3, #0
 8000b5c:	e004      	b.n	8000b68 <__aeabi_i2f+0x8>
 8000b5e:	bf00      	nop

08000b60 <__aeabi_i2f>:
 8000b60:	f010 4300 	ands.w	r3, r0, #2147483648	; 0x80000000
 8000b64:	bf48      	it	mi
 8000b66:	4240      	negmi	r0, r0
 8000b68:	ea5f 0c00 	movs.w	ip, r0
 8000b6c:	bf08      	it	eq
 8000b6e:	4770      	bxeq	lr
 8000b70:	f043 4396 	orr.w	r3, r3, #1258291200	; 0x4b000000
 8000b74:	4601      	mov	r1, r0
 8000b76:	f04f 0000 	mov.w	r0, #0
 8000b7a:	e01c      	b.n	8000bb6 <__aeabi_l2f+0x2a>

08000b7c <__aeabi_ul2f>:
 8000b7c:	ea50 0201 	orrs.w	r2, r0, r1
 8000b80:	bf08      	it	eq
 8000b82:	4770      	bxeq	lr
 8000b84:	f04f 0300 	mov.w	r3, #0
 8000b88:	e00a      	b.n	8000ba0 <__aeabi_l2f+0x14>
 8000b8a:	bf00      	nop

08000b8c <__aeabi_l2f>:
 8000b8c:	ea50 0201 	orrs.w	r2, r0, r1
 8000b90:	bf08      	it	eq
 8000b92:	4770      	bxeq	lr
 8000b94:	f011 4300 	ands.w	r3, r1, #2147483648	; 0x80000000
 8000b98:	d502      	bpl.n	8000ba0 <__aeabi_l2f+0x14>
 8000b9a:	4240      	negs	r0, r0
 8000b9c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000ba0:	ea5f 0c01 	movs.w	ip, r1
 8000ba4:	bf02      	ittt	eq
 8000ba6:	4684      	moveq	ip, r0
 8000ba8:	4601      	moveq	r1, r0
 8000baa:	2000      	moveq	r0, #0
 8000bac:	f043 43b6 	orr.w	r3, r3, #1526726656	; 0x5b000000
 8000bb0:	bf08      	it	eq
 8000bb2:	f1a3 5380 	subeq.w	r3, r3, #268435456	; 0x10000000
 8000bb6:	f5a3 0300 	sub.w	r3, r3, #8388608	; 0x800000
 8000bba:	fabc f28c 	clz	r2, ip
 8000bbe:	3a08      	subs	r2, #8
 8000bc0:	eba3 53c2 	sub.w	r3, r3, r2, lsl #23
 8000bc4:	db10      	blt.n	8000be8 <__aeabi_l2f+0x5c>
 8000bc6:	fa01 fc02 	lsl.w	ip, r1, r2
 8000bca:	4463      	add	r3, ip
 8000bcc:	fa00 fc02 	lsl.w	ip, r0, r2
 8000bd0:	f1c2 0220 	rsb	r2, r2, #32
 8000bd4:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000bd8:	fa20 f202 	lsr.w	r2, r0, r2
 8000bdc:	eb43 0002 	adc.w	r0, r3, r2
 8000be0:	bf08      	it	eq
 8000be2:	f020 0001 	biceq.w	r0, r0, #1
 8000be6:	4770      	bx	lr
 8000be8:	f102 0220 	add.w	r2, r2, #32
 8000bec:	fa01 fc02 	lsl.w	ip, r1, r2
 8000bf0:	f1c2 0220 	rsb	r2, r2, #32
 8000bf4:	ea50 004c 	orrs.w	r0, r0, ip, lsl #1
 8000bf8:	fa21 f202 	lsr.w	r2, r1, r2
 8000bfc:	eb43 0002 	adc.w	r0, r3, r2
 8000c00:	bf08      	it	eq
 8000c02:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000c06:	4770      	bx	lr

08000c08 <__aeabi_fmul>:
 8000c08:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000c0c:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000c10:	bf1e      	ittt	ne
 8000c12:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000c16:	ea92 0f0c 	teqne	r2, ip
 8000c1a:	ea93 0f0c 	teqne	r3, ip
 8000c1e:	d06f      	beq.n	8000d00 <__aeabi_fmul+0xf8>
 8000c20:	441a      	add	r2, r3
 8000c22:	ea80 0c01 	eor.w	ip, r0, r1
 8000c26:	0240      	lsls	r0, r0, #9
 8000c28:	bf18      	it	ne
 8000c2a:	ea5f 2141 	movsne.w	r1, r1, lsl #9
 8000c2e:	d01e      	beq.n	8000c6e <__aeabi_fmul+0x66>
 8000c30:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 8000c34:	ea43 1050 	orr.w	r0, r3, r0, lsr #5
 8000c38:	ea43 1151 	orr.w	r1, r3, r1, lsr #5
 8000c3c:	fba0 3101 	umull	r3, r1, r0, r1
 8000c40:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000c44:	f5b1 0f00 	cmp.w	r1, #8388608	; 0x800000
 8000c48:	bf3e      	ittt	cc
 8000c4a:	0049      	lslcc	r1, r1, #1
 8000c4c:	ea41 71d3 	orrcc.w	r1, r1, r3, lsr #31
 8000c50:	005b      	lslcc	r3, r3, #1
 8000c52:	ea40 0001 	orr.w	r0, r0, r1
 8000c56:	f162 027f 	sbc.w	r2, r2, #127	; 0x7f
 8000c5a:	2afd      	cmp	r2, #253	; 0xfd
 8000c5c:	d81d      	bhi.n	8000c9a <__aeabi_fmul+0x92>
 8000c5e:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 8000c62:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000c66:	bf08      	it	eq
 8000c68:	f020 0001 	biceq.w	r0, r0, #1
 8000c6c:	4770      	bx	lr
 8000c6e:	f090 0f00 	teq	r0, #0
 8000c72:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000c76:	bf08      	it	eq
 8000c78:	0249      	lsleq	r1, r1, #9
 8000c7a:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000c7e:	ea40 2051 	orr.w	r0, r0, r1, lsr #9
 8000c82:	3a7f      	subs	r2, #127	; 0x7f
 8000c84:	bfc2      	ittt	gt
 8000c86:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000c8a:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000c8e:	4770      	bxgt	lr
 8000c90:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c94:	f04f 0300 	mov.w	r3, #0
 8000c98:	3a01      	subs	r2, #1
 8000c9a:	dc5d      	bgt.n	8000d58 <__aeabi_fmul+0x150>
 8000c9c:	f112 0f19 	cmn.w	r2, #25
 8000ca0:	bfdc      	itt	le
 8000ca2:	f000 4000 	andle.w	r0, r0, #2147483648	; 0x80000000
 8000ca6:	4770      	bxle	lr
 8000ca8:	f1c2 0200 	rsb	r2, r2, #0
 8000cac:	0041      	lsls	r1, r0, #1
 8000cae:	fa21 f102 	lsr.w	r1, r1, r2
 8000cb2:	f1c2 0220 	rsb	r2, r2, #32
 8000cb6:	fa00 fc02 	lsl.w	ip, r0, r2
 8000cba:	ea5f 0031 	movs.w	r0, r1, rrx
 8000cbe:	f140 0000 	adc.w	r0, r0, #0
 8000cc2:	ea53 034c 	orrs.w	r3, r3, ip, lsl #1
 8000cc6:	bf08      	it	eq
 8000cc8:	ea20 70dc 	biceq.w	r0, r0, ip, lsr #31
 8000ccc:	4770      	bx	lr
 8000cce:	f092 0f00 	teq	r2, #0
 8000cd2:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000cd6:	bf02      	ittt	eq
 8000cd8:	0040      	lsleq	r0, r0, #1
 8000cda:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000cde:	3a01      	subeq	r2, #1
 8000ce0:	d0f9      	beq.n	8000cd6 <__aeabi_fmul+0xce>
 8000ce2:	ea40 000c 	orr.w	r0, r0, ip
 8000ce6:	f093 0f00 	teq	r3, #0
 8000cea:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000cee:	bf02      	ittt	eq
 8000cf0:	0049      	lsleq	r1, r1, #1
 8000cf2:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000cf6:	3b01      	subeq	r3, #1
 8000cf8:	d0f9      	beq.n	8000cee <__aeabi_fmul+0xe6>
 8000cfa:	ea41 010c 	orr.w	r1, r1, ip
 8000cfe:	e78f      	b.n	8000c20 <__aeabi_fmul+0x18>
 8000d00:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000d04:	ea92 0f0c 	teq	r2, ip
 8000d08:	bf18      	it	ne
 8000d0a:	ea93 0f0c 	teqne	r3, ip
 8000d0e:	d00a      	beq.n	8000d26 <__aeabi_fmul+0x11e>
 8000d10:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000d14:	bf18      	it	ne
 8000d16:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000d1a:	d1d8      	bne.n	8000cce <__aeabi_fmul+0xc6>
 8000d1c:	ea80 0001 	eor.w	r0, r0, r1
 8000d20:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000d24:	4770      	bx	lr
 8000d26:	f090 0f00 	teq	r0, #0
 8000d2a:	bf17      	itett	ne
 8000d2c:	f090 4f00 	teqne	r0, #2147483648	; 0x80000000
 8000d30:	4608      	moveq	r0, r1
 8000d32:	f091 0f00 	teqne	r1, #0
 8000d36:	f091 4f00 	teqne	r1, #2147483648	; 0x80000000
 8000d3a:	d014      	beq.n	8000d66 <__aeabi_fmul+0x15e>
 8000d3c:	ea92 0f0c 	teq	r2, ip
 8000d40:	d101      	bne.n	8000d46 <__aeabi_fmul+0x13e>
 8000d42:	0242      	lsls	r2, r0, #9
 8000d44:	d10f      	bne.n	8000d66 <__aeabi_fmul+0x15e>
 8000d46:	ea93 0f0c 	teq	r3, ip
 8000d4a:	d103      	bne.n	8000d54 <__aeabi_fmul+0x14c>
 8000d4c:	024b      	lsls	r3, r1, #9
 8000d4e:	bf18      	it	ne
 8000d50:	4608      	movne	r0, r1
 8000d52:	d108      	bne.n	8000d66 <__aeabi_fmul+0x15e>
 8000d54:	ea80 0001 	eor.w	r0, r0, r1
 8000d58:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 8000d5c:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000d60:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000d64:	4770      	bx	lr
 8000d66:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000d6a:	f440 0040 	orr.w	r0, r0, #12582912	; 0xc00000
 8000d6e:	4770      	bx	lr

08000d70 <__aeabi_fdiv>:
 8000d70:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000d74:	ea1c 52d0 	ands.w	r2, ip, r0, lsr #23
 8000d78:	bf1e      	ittt	ne
 8000d7a:	ea1c 53d1 	andsne.w	r3, ip, r1, lsr #23
 8000d7e:	ea92 0f0c 	teqne	r2, ip
 8000d82:	ea93 0f0c 	teqne	r3, ip
 8000d86:	d069      	beq.n	8000e5c <__aeabi_fdiv+0xec>
 8000d88:	eba2 0203 	sub.w	r2, r2, r3
 8000d8c:	ea80 0c01 	eor.w	ip, r0, r1
 8000d90:	0249      	lsls	r1, r1, #9
 8000d92:	ea4f 2040 	mov.w	r0, r0, lsl #9
 8000d96:	d037      	beq.n	8000e08 <__aeabi_fdiv+0x98>
 8000d98:	f04f 5380 	mov.w	r3, #268435456	; 0x10000000
 8000d9c:	ea43 1111 	orr.w	r1, r3, r1, lsr #4
 8000da0:	ea43 1310 	orr.w	r3, r3, r0, lsr #4
 8000da4:	f00c 4000 	and.w	r0, ip, #2147483648	; 0x80000000
 8000da8:	428b      	cmp	r3, r1
 8000daa:	bf38      	it	cc
 8000dac:	005b      	lslcc	r3, r3, #1
 8000dae:	f142 027d 	adc.w	r2, r2, #125	; 0x7d
 8000db2:	f44f 0c00 	mov.w	ip, #8388608	; 0x800000
 8000db6:	428b      	cmp	r3, r1
 8000db8:	bf24      	itt	cs
 8000dba:	1a5b      	subcs	r3, r3, r1
 8000dbc:	ea40 000c 	orrcs.w	r0, r0, ip
 8000dc0:	ebb3 0f51 	cmp.w	r3, r1, lsr #1
 8000dc4:	bf24      	itt	cs
 8000dc6:	eba3 0351 	subcs.w	r3, r3, r1, lsr #1
 8000dca:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000dce:	ebb3 0f91 	cmp.w	r3, r1, lsr #2
 8000dd2:	bf24      	itt	cs
 8000dd4:	eba3 0391 	subcs.w	r3, r3, r1, lsr #2
 8000dd8:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000ddc:	ebb3 0fd1 	cmp.w	r3, r1, lsr #3
 8000de0:	bf24      	itt	cs
 8000de2:	eba3 03d1 	subcs.w	r3, r3, r1, lsr #3
 8000de6:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000dea:	011b      	lsls	r3, r3, #4
 8000dec:	bf18      	it	ne
 8000dee:	ea5f 1c1c 	movsne.w	ip, ip, lsr #4
 8000df2:	d1e0      	bne.n	8000db6 <__aeabi_fdiv+0x46>
 8000df4:	2afd      	cmp	r2, #253	; 0xfd
 8000df6:	f63f af50 	bhi.w	8000c9a <__aeabi_fmul+0x92>
 8000dfa:	428b      	cmp	r3, r1
 8000dfc:	eb40 50c2 	adc.w	r0, r0, r2, lsl #23
 8000e00:	bf08      	it	eq
 8000e02:	f020 0001 	biceq.w	r0, r0, #1
 8000e06:	4770      	bx	lr
 8000e08:	f00c 4c00 	and.w	ip, ip, #2147483648	; 0x80000000
 8000e0c:	ea4c 2050 	orr.w	r0, ip, r0, lsr #9
 8000e10:	327f      	adds	r2, #127	; 0x7f
 8000e12:	bfc2      	ittt	gt
 8000e14:	f1d2 03ff 	rsbsgt	r3, r2, #255	; 0xff
 8000e18:	ea40 50c2 	orrgt.w	r0, r0, r2, lsl #23
 8000e1c:	4770      	bxgt	lr
 8000e1e:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000e22:	f04f 0300 	mov.w	r3, #0
 8000e26:	3a01      	subs	r2, #1
 8000e28:	e737      	b.n	8000c9a <__aeabi_fmul+0x92>
 8000e2a:	f092 0f00 	teq	r2, #0
 8000e2e:	f000 4c00 	and.w	ip, r0, #2147483648	; 0x80000000
 8000e32:	bf02      	ittt	eq
 8000e34:	0040      	lsleq	r0, r0, #1
 8000e36:	f410 0f00 	tsteq.w	r0, #8388608	; 0x800000
 8000e3a:	3a01      	subeq	r2, #1
 8000e3c:	d0f9      	beq.n	8000e32 <__aeabi_fdiv+0xc2>
 8000e3e:	ea40 000c 	orr.w	r0, r0, ip
 8000e42:	f093 0f00 	teq	r3, #0
 8000e46:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000e4a:	bf02      	ittt	eq
 8000e4c:	0049      	lsleq	r1, r1, #1
 8000e4e:	f411 0f00 	tsteq.w	r1, #8388608	; 0x800000
 8000e52:	3b01      	subeq	r3, #1
 8000e54:	d0f9      	beq.n	8000e4a <__aeabi_fdiv+0xda>
 8000e56:	ea41 010c 	orr.w	r1, r1, ip
 8000e5a:	e795      	b.n	8000d88 <__aeabi_fdiv+0x18>
 8000e5c:	ea0c 53d1 	and.w	r3, ip, r1, lsr #23
 8000e60:	ea92 0f0c 	teq	r2, ip
 8000e64:	d108      	bne.n	8000e78 <__aeabi_fdiv+0x108>
 8000e66:	0242      	lsls	r2, r0, #9
 8000e68:	f47f af7d 	bne.w	8000d66 <__aeabi_fmul+0x15e>
 8000e6c:	ea93 0f0c 	teq	r3, ip
 8000e70:	f47f af70 	bne.w	8000d54 <__aeabi_fmul+0x14c>
 8000e74:	4608      	mov	r0, r1
 8000e76:	e776      	b.n	8000d66 <__aeabi_fmul+0x15e>
 8000e78:	ea93 0f0c 	teq	r3, ip
 8000e7c:	d104      	bne.n	8000e88 <__aeabi_fdiv+0x118>
 8000e7e:	024b      	lsls	r3, r1, #9
 8000e80:	f43f af4c 	beq.w	8000d1c <__aeabi_fmul+0x114>
 8000e84:	4608      	mov	r0, r1
 8000e86:	e76e      	b.n	8000d66 <__aeabi_fmul+0x15e>
 8000e88:	f030 4c00 	bics.w	ip, r0, #2147483648	; 0x80000000
 8000e8c:	bf18      	it	ne
 8000e8e:	f031 4c00 	bicsne.w	ip, r1, #2147483648	; 0x80000000
 8000e92:	d1ca      	bne.n	8000e2a <__aeabi_fdiv+0xba>
 8000e94:	f030 4200 	bics.w	r2, r0, #2147483648	; 0x80000000
 8000e98:	f47f af5c 	bne.w	8000d54 <__aeabi_fmul+0x14c>
 8000e9c:	f031 4300 	bics.w	r3, r1, #2147483648	; 0x80000000
 8000ea0:	f47f af3c 	bne.w	8000d1c <__aeabi_fmul+0x114>
 8000ea4:	e75f      	b.n	8000d66 <__aeabi_fmul+0x15e>
 8000ea6:	bf00      	nop

08000ea8 <__aeabi_f2uiz>:
 8000ea8:	0042      	lsls	r2, r0, #1
 8000eaa:	d20e      	bcs.n	8000eca <__aeabi_f2uiz+0x22>
 8000eac:	f1b2 4ffe 	cmp.w	r2, #2130706432	; 0x7f000000
 8000eb0:	d30b      	bcc.n	8000eca <__aeabi_f2uiz+0x22>
 8000eb2:	f04f 039e 	mov.w	r3, #158	; 0x9e
 8000eb6:	ebb3 6212 	subs.w	r2, r3, r2, lsr #24
 8000eba:	d409      	bmi.n	8000ed0 <__aeabi_f2uiz+0x28>
 8000ebc:	ea4f 2300 	mov.w	r3, r0, lsl #8
 8000ec0:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000ec4:	fa23 f002 	lsr.w	r0, r3, r2
 8000ec8:	4770      	bx	lr
 8000eca:	f04f 0000 	mov.w	r0, #0
 8000ece:	4770      	bx	lr
 8000ed0:	f112 0f61 	cmn.w	r2, #97	; 0x61
 8000ed4:	d101      	bne.n	8000eda <__aeabi_f2uiz+0x32>
 8000ed6:	0242      	lsls	r2, r0, #9
 8000ed8:	d102      	bne.n	8000ee0 <__aeabi_f2uiz+0x38>
 8000eda:	f04f 30ff 	mov.w	r0, #4294967295
 8000ede:	4770      	bx	lr
 8000ee0:	f04f 0000 	mov.w	r0, #0
 8000ee4:	4770      	bx	lr
 8000ee6:	bf00      	nop

08000ee8 <HAL_MOTOR_Init>:

//==========================================================================


void HAL_MOTOR_Init(void)
{
 8000ee8:	b580      	push	{r7, lr}
 8000eea:	af00      	add	r7, sp, #0
	MCAL_GPIO_INIT(GPIOB,driver_pin1 ,Output_PP_Mode_Speed10MHZ);
 8000eec:	2201      	movs	r2, #1
 8000eee:	2105      	movs	r1, #5
 8000ef0:	4804      	ldr	r0, [pc, #16]	; (8000f04 <HAL_MOTOR_Init+0x1c>)
 8000ef2:	f000 fafb 	bl	80014ec <MCAL_GPIO_INIT>
	MCAL_GPIO_INIT(GPIOB,driver_pin2 ,Output_PP_Mode_Speed10MHZ);
 8000ef6:	2201      	movs	r2, #1
 8000ef8:	2106      	movs	r1, #6
 8000efa:	4802      	ldr	r0, [pc, #8]	; (8000f04 <HAL_MOTOR_Init+0x1c>)
 8000efc:	f000 faf6 	bl	80014ec <MCAL_GPIO_INIT>
}
 8000f00:	bf00      	nop
 8000f02:	bd80      	pop	{r7, pc}
 8000f04:	40010c00 	.word	0x40010c00

08000f08 <HAL_MOTOR_Motion>:


void HAL_MOTOR_Motion(uint8_t x)
{
 8000f08:	b580      	push	{r7, lr}
 8000f0a:	b082      	sub	sp, #8
 8000f0c:	af00      	add	r7, sp, #0
 8000f0e:	4603      	mov	r3, r0
 8000f10:	71fb      	strb	r3, [r7, #7]
	switch(x)
 8000f12:	79fb      	ldrb	r3, [r7, #7]
 8000f14:	2b01      	cmp	r3, #1
 8000f16:	d00f      	beq.n	8000f38 <HAL_MOTOR_Motion+0x30>
 8000f18:	2b02      	cmp	r3, #2
 8000f1a:	d018      	beq.n	8000f4e <HAL_MOTOR_Motion+0x46>
 8000f1c:	2b00      	cmp	r3, #0
 8000f1e:	d000      	beq.n	8000f22 <HAL_MOTOR_Motion+0x1a>
		MCAL_GPIO_WRITEPIN(GPIOB, driver_pin1, RESET);
	}
	break;
	}

}
 8000f20:	e020      	b.n	8000f64 <HAL_MOTOR_Motion+0x5c>
		MCAL_GPIO_WRITEPIN(GPIOB, driver_pin1, SET);
 8000f22:	2201      	movs	r2, #1
 8000f24:	2105      	movs	r1, #5
 8000f26:	4811      	ldr	r0, [pc, #68]	; (8000f6c <HAL_MOTOR_Motion+0x64>)
 8000f28:	f000 fbbc 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		MCAL_GPIO_WRITEPIN(GPIOB, driver_pin2, RESET);
 8000f2c:	2200      	movs	r2, #0
 8000f2e:	2106      	movs	r1, #6
 8000f30:	480e      	ldr	r0, [pc, #56]	; (8000f6c <HAL_MOTOR_Motion+0x64>)
 8000f32:	f000 fbb7 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
	break;
 8000f36:	e015      	b.n	8000f64 <HAL_MOTOR_Motion+0x5c>
		MCAL_GPIO_WRITEPIN(GPIOB, driver_pin1, RESET);
 8000f38:	2200      	movs	r2, #0
 8000f3a:	2105      	movs	r1, #5
 8000f3c:	480b      	ldr	r0, [pc, #44]	; (8000f6c <HAL_MOTOR_Motion+0x64>)
 8000f3e:	f000 fbb1 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		MCAL_GPIO_WRITEPIN(GPIOB, driver_pin2, SET);
 8000f42:	2201      	movs	r2, #1
 8000f44:	2106      	movs	r1, #6
 8000f46:	4809      	ldr	r0, [pc, #36]	; (8000f6c <HAL_MOTOR_Motion+0x64>)
 8000f48:	f000 fbac 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
	break ;
 8000f4c:	e00a      	b.n	8000f64 <HAL_MOTOR_Motion+0x5c>
		MCAL_GPIO_WRITEPIN(GPIOB, driver_pin2, RESET);
 8000f4e:	2200      	movs	r2, #0
 8000f50:	2106      	movs	r1, #6
 8000f52:	4806      	ldr	r0, [pc, #24]	; (8000f6c <HAL_MOTOR_Motion+0x64>)
 8000f54:	f000 fba6 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		MCAL_GPIO_WRITEPIN(GPIOB, driver_pin1, RESET);
 8000f58:	2200      	movs	r2, #0
 8000f5a:	2105      	movs	r1, #5
 8000f5c:	4803      	ldr	r0, [pc, #12]	; (8000f6c <HAL_MOTOR_Motion+0x64>)
 8000f5e:	f000 fba1 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
	break;
 8000f62:	bf00      	nop
}
 8000f64:	bf00      	nop
 8000f66:	3708      	adds	r7, #8
 8000f68:	46bd      	mov	sp, r7
 8000f6a:	bd80      	pop	{r7, pc}
 8000f6c:	40010c00 	.word	0x40010c00

08000f70 <HAL_Servo_Set_Angle>:

//==========================================================================


void HAL_Servo_Set_Angle(double angle,uint32_t clock)
{
 8000f70:	b590      	push	{r4, r7, lr}
 8000f72:	b089      	sub	sp, #36	; 0x24
 8000f74:	af02      	add	r7, sp, #8
 8000f76:	e9c7 0102 	strd	r0, r1, [r7, #8]
 8000f7a:	607a      	str	r2, [r7, #4]

	double duty_cycle = ( (0.01483333) *angle);
 8000f7c:	a320      	add	r3, pc, #128	; (adr r3, 8001000 <HAL_Servo_Set_Angle+0x90>)
 8000f7e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f82:	e9d7 0102 	ldrd	r0, r1, [r7, #8]
 8000f86:	f7ff faaf 	bl	80004e8 <__aeabi_dmul>
 8000f8a:	4603      	mov	r3, r0
 8000f8c:	460c      	mov	r4, r1
 8000f8e:	e9c7 3404 	strd	r3, r4, [r7, #16]
	duty_cycle=duty_cycle+0.8;
 8000f92:	a31d      	add	r3, pc, #116	; (adr r3, 8001008 <HAL_Servo_Set_Angle+0x98>)
 8000f94:	e9d3 2300 	ldrd	r2, r3, [r3]
 8000f98:	e9d7 0104 	ldrd	r0, r1, [r7, #16]
 8000f9c:	f7ff f8ee 	bl	800017c <__adddf3>
 8000fa0:	4603      	mov	r3, r0
 8000fa2:	460c      	mov	r4, r1
 8000fa4:	e9c7 3404 	strd	r3, r4, [r7, #16]
	if(clock == 36000000)
 8000fa8:	687b      	ldr	r3, [r7, #4]
 8000faa:	4a19      	ldr	r2, [pc, #100]	; (8001010 <HAL_Servo_Set_Angle+0xa0>)
 8000fac:	4293      	cmp	r3, r2
 8000fae:	d10a      	bne.n	8000fc6 <HAL_Servo_Set_Angle+0x56>
	{
		MCAL_PWM_Init(PWM_MODE1, CH1, duty_cycle, 50,126);
 8000fb0:	237e      	movs	r3, #126	; 0x7e
 8000fb2:	9301      	str	r3, [sp, #4]
 8000fb4:	2332      	movs	r3, #50	; 0x32
 8000fb6:	9300      	str	r3, [sp, #0]
 8000fb8:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8000fbc:	2100      	movs	r1, #0
 8000fbe:	2000      	movs	r0, #0
 8000fc0:	f001 fa18 	bl	80023f4 <MCAL_PWM_Init>
	{
		MCAL_PWM_Init(PWM_MODE1, CH1, duty_cycle, 50,28);
	}


}
 8000fc4:	e018      	b.n	8000ff8 <HAL_Servo_Set_Angle+0x88>
	else if((clock == 32000000))
 8000fc6:	687b      	ldr	r3, [r7, #4]
 8000fc8:	4a12      	ldr	r2, [pc, #72]	; (8001014 <HAL_Servo_Set_Angle+0xa4>)
 8000fca:	4293      	cmp	r3, r2
 8000fcc:	d10a      	bne.n	8000fe4 <HAL_Servo_Set_Angle+0x74>
		MCAL_PWM_Init(PWM_MODE1, CH1, duty_cycle, 50,112);
 8000fce:	2370      	movs	r3, #112	; 0x70
 8000fd0:	9301      	str	r3, [sp, #4]
 8000fd2:	2332      	movs	r3, #50	; 0x32
 8000fd4:	9300      	str	r3, [sp, #0]
 8000fd6:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8000fda:	2100      	movs	r1, #0
 8000fdc:	2000      	movs	r0, #0
 8000fde:	f001 fa09 	bl	80023f4 <MCAL_PWM_Init>
}
 8000fe2:	e009      	b.n	8000ff8 <HAL_Servo_Set_Angle+0x88>
		MCAL_PWM_Init(PWM_MODE1, CH1, duty_cycle, 50,28);
 8000fe4:	231c      	movs	r3, #28
 8000fe6:	9301      	str	r3, [sp, #4]
 8000fe8:	2332      	movs	r3, #50	; 0x32
 8000fea:	9300      	str	r3, [sp, #0]
 8000fec:	e9d7 2304 	ldrd	r2, r3, [r7, #16]
 8000ff0:	2100      	movs	r1, #0
 8000ff2:	2000      	movs	r0, #0
 8000ff4:	f001 f9fe 	bl	80023f4 <MCAL_PWM_Init>
}
 8000ff8:	bf00      	nop
 8000ffa:	371c      	adds	r7, #28
 8000ffc:	46bd      	mov	sp, r7
 8000ffe:	bd90      	pop	{r4, r7, pc}
 8001000:	d9ed1bcd 	.word	0xd9ed1bcd
 8001004:	3f8e60ef 	.word	0x3f8e60ef
 8001008:	9999999a 	.word	0x9999999a
 800100c:	3fe99999 	.word	0x3fe99999
 8001010:	02255100 	.word	0x02255100
 8001014:	01e84800 	.word	0x01e84800

08001018 <echo1>:

double distance1, distance2, distance3, distance4;

uint8_t flag_ehco1 = 0 ,flag_ehco2 = 0 ,flag_ehco3 = 0 ,flag_ehco4 = 0;

void echo1(){
 8001018:	b598      	push	{r3, r4, r7, lr}
 800101a:	af00      	add	r7, sp, #0
	if(flag_ehco1==0){
 800101c:	4b1e      	ldr	r3, [pc, #120]	; (8001098 <echo1+0x80>)
 800101e:	781b      	ldrb	r3, [r3, #0]
 8001020:	2b00      	cmp	r3, #0
 8001022:	d107      	bne.n	8001034 <echo1+0x1c>
		TIME_CALCULATION(clk, TIMER_START);
 8001024:	2101      	movs	r1, #1
 8001026:	481d      	ldr	r0, [pc, #116]	; (800109c <echo1+0x84>)
 8001028:	f001 fc38 	bl	800289c <TIME_CALCULATION>
		flag_ehco1=1;
 800102c:	4b1a      	ldr	r3, [pc, #104]	; (8001098 <echo1+0x80>)
 800102e:	2201      	movs	r2, #1
 8001030:	701a      	strb	r2, [r3, #0]
		time1=TIME_CALCULATION(clk, TIMER_STOP);
		distance1 = ((time1*171.5)/10000);
		flag_ehco1=0;
	}

}
 8001032:	e025      	b.n	8001080 <echo1+0x68>
		time1=TIME_CALCULATION(clk, TIMER_STOP);
 8001034:	2100      	movs	r1, #0
 8001036:	4819      	ldr	r0, [pc, #100]	; (800109c <echo1+0x84>)
 8001038:	f001 fc30 	bl	800289c <TIME_CALCULATION>
 800103c:	4603      	mov	r3, r0
 800103e:	4618      	mov	r0, r3
 8001040:	f7ff f9d8 	bl	80003f4 <__aeabi_ui2d>
 8001044:	4603      	mov	r3, r0
 8001046:	460c      	mov	r4, r1
 8001048:	4a15      	ldr	r2, [pc, #84]	; (80010a0 <echo1+0x88>)
 800104a:	e9c2 3400 	strd	r3, r4, [r2]
		distance1 = ((time1*171.5)/10000);
 800104e:	4b14      	ldr	r3, [pc, #80]	; (80010a0 <echo1+0x88>)
 8001050:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001054:	a30c      	add	r3, pc, #48	; (adr r3, 8001088 <echo1+0x70>)
 8001056:	e9d3 2300 	ldrd	r2, r3, [r3]
 800105a:	f7ff fa45 	bl	80004e8 <__aeabi_dmul>
 800105e:	4603      	mov	r3, r0
 8001060:	460c      	mov	r4, r1
 8001062:	4618      	mov	r0, r3
 8001064:	4621      	mov	r1, r4
 8001066:	a30a      	add	r3, pc, #40	; (adr r3, 8001090 <echo1+0x78>)
 8001068:	e9d3 2300 	ldrd	r2, r3, [r3]
 800106c:	f7ff fb66 	bl	800073c <__aeabi_ddiv>
 8001070:	4603      	mov	r3, r0
 8001072:	460c      	mov	r4, r1
 8001074:	4a0b      	ldr	r2, [pc, #44]	; (80010a4 <echo1+0x8c>)
 8001076:	e9c2 3400 	strd	r3, r4, [r2]
		flag_ehco1=0;
 800107a:	4b07      	ldr	r3, [pc, #28]	; (8001098 <echo1+0x80>)
 800107c:	2200      	movs	r2, #0
 800107e:	701a      	strb	r2, [r3, #0]
}
 8001080:	bf00      	nop
 8001082:	bd98      	pop	{r3, r4, r7, pc}
 8001084:	f3af 8000 	nop.w
 8001088:	00000000 	.word	0x00000000
 800108c:	40657000 	.word	0x40657000
 8001090:	00000000 	.word	0x00000000
 8001094:	40c38800 	.word	0x40c38800
 8001098:	20000024 	.word	0x20000024
 800109c:	007a1200 	.word	0x007a1200
 80010a0:	20000058 	.word	0x20000058
 80010a4:	20000050 	.word	0x20000050

080010a8 <echo2>:

void echo2(){
 80010a8:	b598      	push	{r3, r4, r7, lr}
 80010aa:	af00      	add	r7, sp, #0
	if(flag_ehco2==0){
 80010ac:	4b1e      	ldr	r3, [pc, #120]	; (8001128 <echo2+0x80>)
 80010ae:	781b      	ldrb	r3, [r3, #0]
 80010b0:	2b00      	cmp	r3, #0
 80010b2:	d107      	bne.n	80010c4 <echo2+0x1c>
		TIME_CALCULATION(clk, TIMER_START);
 80010b4:	2101      	movs	r1, #1
 80010b6:	481d      	ldr	r0, [pc, #116]	; (800112c <echo2+0x84>)
 80010b8:	f001 fbf0 	bl	800289c <TIME_CALCULATION>
		flag_ehco2=1;
 80010bc:	4b1a      	ldr	r3, [pc, #104]	; (8001128 <echo2+0x80>)
 80010be:	2201      	movs	r2, #1
 80010c0:	701a      	strb	r2, [r3, #0]
		time2=TIME_CALCULATION(clk, TIMER_STOP);
		distance2 = ((time2*171.5)/10000);
		flag_ehco2=0;
	}

}
 80010c2:	e025      	b.n	8001110 <echo2+0x68>
		time2=TIME_CALCULATION(clk, TIMER_STOP);
 80010c4:	2100      	movs	r1, #0
 80010c6:	4819      	ldr	r0, [pc, #100]	; (800112c <echo2+0x84>)
 80010c8:	f001 fbe8 	bl	800289c <TIME_CALCULATION>
 80010cc:	4603      	mov	r3, r0
 80010ce:	4618      	mov	r0, r3
 80010d0:	f7ff f990 	bl	80003f4 <__aeabi_ui2d>
 80010d4:	4603      	mov	r3, r0
 80010d6:	460c      	mov	r4, r1
 80010d8:	4a15      	ldr	r2, [pc, #84]	; (8001130 <echo2+0x88>)
 80010da:	e9c2 3400 	strd	r3, r4, [r2]
		distance2 = ((time2*171.5)/10000);
 80010de:	4b14      	ldr	r3, [pc, #80]	; (8001130 <echo2+0x88>)
 80010e0:	e9d3 0100 	ldrd	r0, r1, [r3]
 80010e4:	a30c      	add	r3, pc, #48	; (adr r3, 8001118 <echo2+0x70>)
 80010e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010ea:	f7ff f9fd 	bl	80004e8 <__aeabi_dmul>
 80010ee:	4603      	mov	r3, r0
 80010f0:	460c      	mov	r4, r1
 80010f2:	4618      	mov	r0, r3
 80010f4:	4621      	mov	r1, r4
 80010f6:	a30a      	add	r3, pc, #40	; (adr r3, 8001120 <echo2+0x78>)
 80010f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80010fc:	f7ff fb1e 	bl	800073c <__aeabi_ddiv>
 8001100:	4603      	mov	r3, r0
 8001102:	460c      	mov	r4, r1
 8001104:	4a0b      	ldr	r2, [pc, #44]	; (8001134 <echo2+0x8c>)
 8001106:	e9c2 3400 	strd	r3, r4, [r2]
		flag_ehco2=0;
 800110a:	4b07      	ldr	r3, [pc, #28]	; (8001128 <echo2+0x80>)
 800110c:	2200      	movs	r2, #0
 800110e:	701a      	strb	r2, [r3, #0]
}
 8001110:	bf00      	nop
 8001112:	bd98      	pop	{r3, r4, r7, pc}
 8001114:	f3af 8000 	nop.w
 8001118:	00000000 	.word	0x00000000
 800111c:	40657000 	.word	0x40657000
 8001120:	00000000 	.word	0x00000000
 8001124:	40c38800 	.word	0x40c38800
 8001128:	20000025 	.word	0x20000025
 800112c:	007a1200 	.word	0x007a1200
 8001130:	20000078 	.word	0x20000078
 8001134:	20000060 	.word	0x20000060

08001138 <echo3>:

void echo3(){
 8001138:	b598      	push	{r3, r4, r7, lr}
 800113a:	af00      	add	r7, sp, #0
	if(flag_ehco3==0){
 800113c:	4b1e      	ldr	r3, [pc, #120]	; (80011b8 <echo3+0x80>)
 800113e:	781b      	ldrb	r3, [r3, #0]
 8001140:	2b00      	cmp	r3, #0
 8001142:	d107      	bne.n	8001154 <echo3+0x1c>
		TIME_CALCULATION(clk, TIMER_START);
 8001144:	2101      	movs	r1, #1
 8001146:	481d      	ldr	r0, [pc, #116]	; (80011bc <echo3+0x84>)
 8001148:	f001 fba8 	bl	800289c <TIME_CALCULATION>
		flag_ehco3=1;
 800114c:	4b1a      	ldr	r3, [pc, #104]	; (80011b8 <echo3+0x80>)
 800114e:	2201      	movs	r2, #1
 8001150:	701a      	strb	r2, [r3, #0]
		time3=TIME_CALCULATION(clk, TIMER_STOP);
		distance3 = ((time3*171.5)/10000);
		flag_ehco3=0;
	}

}
 8001152:	e025      	b.n	80011a0 <echo3+0x68>
		time3=TIME_CALCULATION(clk, TIMER_STOP);
 8001154:	2100      	movs	r1, #0
 8001156:	4819      	ldr	r0, [pc, #100]	; (80011bc <echo3+0x84>)
 8001158:	f001 fba0 	bl	800289c <TIME_CALCULATION>
 800115c:	4603      	mov	r3, r0
 800115e:	4618      	mov	r0, r3
 8001160:	f7ff f948 	bl	80003f4 <__aeabi_ui2d>
 8001164:	4603      	mov	r3, r0
 8001166:	460c      	mov	r4, r1
 8001168:	4a15      	ldr	r2, [pc, #84]	; (80011c0 <echo3+0x88>)
 800116a:	e9c2 3400 	strd	r3, r4, [r2]
		distance3 = ((time3*171.5)/10000);
 800116e:	4b14      	ldr	r3, [pc, #80]	; (80011c0 <echo3+0x88>)
 8001170:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001174:	a30c      	add	r3, pc, #48	; (adr r3, 80011a8 <echo3+0x70>)
 8001176:	e9d3 2300 	ldrd	r2, r3, [r3]
 800117a:	f7ff f9b5 	bl	80004e8 <__aeabi_dmul>
 800117e:	4603      	mov	r3, r0
 8001180:	460c      	mov	r4, r1
 8001182:	4618      	mov	r0, r3
 8001184:	4621      	mov	r1, r4
 8001186:	a30a      	add	r3, pc, #40	; (adr r3, 80011b0 <echo3+0x78>)
 8001188:	e9d3 2300 	ldrd	r2, r3, [r3]
 800118c:	f7ff fad6 	bl	800073c <__aeabi_ddiv>
 8001190:	4603      	mov	r3, r0
 8001192:	460c      	mov	r4, r1
 8001194:	4a0b      	ldr	r2, [pc, #44]	; (80011c4 <echo3+0x8c>)
 8001196:	e9c2 3400 	strd	r3, r4, [r2]
		flag_ehco3=0;
 800119a:	4b07      	ldr	r3, [pc, #28]	; (80011b8 <echo3+0x80>)
 800119c:	2200      	movs	r2, #0
 800119e:	701a      	strb	r2, [r3, #0]
}
 80011a0:	bf00      	nop
 80011a2:	bd98      	pop	{r3, r4, r7, pc}
 80011a4:	f3af 8000 	nop.w
 80011a8:	00000000 	.word	0x00000000
 80011ac:	40657000 	.word	0x40657000
 80011b0:	00000000 	.word	0x00000000
 80011b4:	40c38800 	.word	0x40c38800
 80011b8:	20000026 	.word	0x20000026
 80011bc:	007a1200 	.word	0x007a1200
 80011c0:	20000070 	.word	0x20000070
 80011c4:	20000040 	.word	0x20000040

080011c8 <echo4>:

void echo4(){
 80011c8:	b598      	push	{r3, r4, r7, lr}
 80011ca:	af00      	add	r7, sp, #0
	if(flag_ehco4==0){
 80011cc:	4b1e      	ldr	r3, [pc, #120]	; (8001248 <echo4+0x80>)
 80011ce:	781b      	ldrb	r3, [r3, #0]
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d107      	bne.n	80011e4 <echo4+0x1c>
		TIME_CALCULATION(clk, TIMER_START);
 80011d4:	2101      	movs	r1, #1
 80011d6:	481d      	ldr	r0, [pc, #116]	; (800124c <echo4+0x84>)
 80011d8:	f001 fb60 	bl	800289c <TIME_CALCULATION>
		flag_ehco4=1;
 80011dc:	4b1a      	ldr	r3, [pc, #104]	; (8001248 <echo4+0x80>)
 80011de:	2201      	movs	r2, #1
 80011e0:	701a      	strb	r2, [r3, #0]
		time4=TIME_CALCULATION(clk, TIMER_STOP);
		distance4 = ((time4*171.5)/10000);
		flag_ehco4=0;
	}

}
 80011e2:	e025      	b.n	8001230 <echo4+0x68>
		time4=TIME_CALCULATION(clk, TIMER_STOP);
 80011e4:	2100      	movs	r1, #0
 80011e6:	4819      	ldr	r0, [pc, #100]	; (800124c <echo4+0x84>)
 80011e8:	f001 fb58 	bl	800289c <TIME_CALCULATION>
 80011ec:	4603      	mov	r3, r0
 80011ee:	4618      	mov	r0, r3
 80011f0:	f7ff f900 	bl	80003f4 <__aeabi_ui2d>
 80011f4:	4603      	mov	r3, r0
 80011f6:	460c      	mov	r4, r1
 80011f8:	4a15      	ldr	r2, [pc, #84]	; (8001250 <echo4+0x88>)
 80011fa:	e9c2 3400 	strd	r3, r4, [r2]
		distance4 = ((time4*171.5)/10000);
 80011fe:	4b14      	ldr	r3, [pc, #80]	; (8001250 <echo4+0x88>)
 8001200:	e9d3 0100 	ldrd	r0, r1, [r3]
 8001204:	a30c      	add	r3, pc, #48	; (adr r3, 8001238 <echo4+0x70>)
 8001206:	e9d3 2300 	ldrd	r2, r3, [r3]
 800120a:	f7ff f96d 	bl	80004e8 <__aeabi_dmul>
 800120e:	4603      	mov	r3, r0
 8001210:	460c      	mov	r4, r1
 8001212:	4618      	mov	r0, r3
 8001214:	4621      	mov	r1, r4
 8001216:	a30a      	add	r3, pc, #40	; (adr r3, 8001240 <echo4+0x78>)
 8001218:	e9d3 2300 	ldrd	r2, r3, [r3]
 800121c:	f7ff fa8e 	bl	800073c <__aeabi_ddiv>
 8001220:	4603      	mov	r3, r0
 8001222:	460c      	mov	r4, r1
 8001224:	4a0b      	ldr	r2, [pc, #44]	; (8001254 <echo4+0x8c>)
 8001226:	e9c2 3400 	strd	r3, r4, [r2]
		flag_ehco4=0;
 800122a:	4b07      	ldr	r3, [pc, #28]	; (8001248 <echo4+0x80>)
 800122c:	2200      	movs	r2, #0
 800122e:	701a      	strb	r2, [r3, #0]
}
 8001230:	bf00      	nop
 8001232:	bd98      	pop	{r3, r4, r7, pc}
 8001234:	f3af 8000 	nop.w
 8001238:	00000000 	.word	0x00000000
 800123c:	40657000 	.word	0x40657000
 8001240:	00000000 	.word	0x00000000
 8001244:	40c38800 	.word	0x40c38800
 8001248:	20000027 	.word	0x20000027
 800124c:	007a1200 	.word	0x007a1200
 8001250:	20000068 	.word	0x20000068
 8001254:	20000048 	.word	0x20000048

08001258 <HAL_ULTRASONIC_INIT>:


void HAL_ULTRASONIC_INIT(ULT_SLEC_T num)
{
 8001258:	b580      	push	{r7, lr}
 800125a:	b082      	sub	sp, #8
 800125c:	af00      	add	r7, sp, #0
 800125e:	4603      	mov	r3, r0
 8001260:	71fb      	strb	r3, [r7, #7]
	switch(num)
 8001262:	79fb      	ldrb	r3, [r7, #7]
 8001264:	2b03      	cmp	r3, #3
 8001266:	d83b      	bhi.n	80012e0 <HAL_ULTRASONIC_INIT+0x88>
 8001268:	a201      	add	r2, pc, #4	; (adr r2, 8001270 <HAL_ULTRASONIC_INIT+0x18>)
 800126a:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800126e:	bf00      	nop
 8001270:	08001281 	.word	0x08001281
 8001274:	08001299 	.word	0x08001299
 8001278:	080012b1 	.word	0x080012b1
 800127c:	080012c9 	.word	0x080012c9
	{
	case ULT1 :
	{
		MCAL_GPIO_INIT(GPIOB, ULT1_TRIG_PIN_B9, Output_PP_Mode_Speed2MHZ);
 8001280:	2202      	movs	r2, #2
 8001282:	2109      	movs	r1, #9
 8001284:	4818      	ldr	r0, [pc, #96]	; (80012e8 <HAL_ULTRASONIC_INIT+0x90>)
 8001286:	f000 f931 	bl	80014ec <MCAL_GPIO_INIT>
		EXTI_Init(GPIOA,ULT1_ECHO_PIN_A0,EXTI_Trigger_RisingAndFalling,echo1);
 800128a:	4b18      	ldr	r3, [pc, #96]	; (80012ec <HAL_ULTRASONIC_INIT+0x94>)
 800128c:	2202      	movs	r2, #2
 800128e:	2100      	movs	r1, #0
 8001290:	4817      	ldr	r0, [pc, #92]	; (80012f0 <HAL_ULTRASONIC_INIT+0x98>)
 8001292:	f000 fa91 	bl	80017b8 <EXTI_Init>
	}
	break;
 8001296:	e023      	b.n	80012e0 <HAL_ULTRASONIC_INIT+0x88>
	case ULT2 :
	{
		MCAL_GPIO_INIT(GPIOB, ULT2_TRIG_PIN_B10, Output_PP_Mode_Speed2MHZ);
 8001298:	2202      	movs	r2, #2
 800129a:	210a      	movs	r1, #10
 800129c:	4812      	ldr	r0, [pc, #72]	; (80012e8 <HAL_ULTRASONIC_INIT+0x90>)
 800129e:	f000 f925 	bl	80014ec <MCAL_GPIO_INIT>
		EXTI_Init(GPIOA,ULT2_ECHO_PIN_A2,EXTI_Trigger_RisingAndFalling,echo2);
 80012a2:	4b14      	ldr	r3, [pc, #80]	; (80012f4 <HAL_ULTRASONIC_INIT+0x9c>)
 80012a4:	2202      	movs	r2, #2
 80012a6:	2102      	movs	r1, #2
 80012a8:	4811      	ldr	r0, [pc, #68]	; (80012f0 <HAL_ULTRASONIC_INIT+0x98>)
 80012aa:	f000 fa85 	bl	80017b8 <EXTI_Init>
	}
	break;
 80012ae:	e017      	b.n	80012e0 <HAL_ULTRASONIC_INIT+0x88>
	case ULT3 :
	{
		MCAL_GPIO_INIT(GPIOB, ULT3_TRIG_PIN_B11, Output_PP_Mode_Speed2MHZ);
 80012b0:	2202      	movs	r2, #2
 80012b2:	210b      	movs	r1, #11
 80012b4:	480c      	ldr	r0, [pc, #48]	; (80012e8 <HAL_ULTRASONIC_INIT+0x90>)
 80012b6:	f000 f919 	bl	80014ec <MCAL_GPIO_INIT>
		EXTI_Init(GPIOA,ULT3_ECHO_PIN_A3,EXTI_Trigger_RisingAndFalling,echo3);
 80012ba:	4b0f      	ldr	r3, [pc, #60]	; (80012f8 <HAL_ULTRASONIC_INIT+0xa0>)
 80012bc:	2202      	movs	r2, #2
 80012be:	2103      	movs	r1, #3
 80012c0:	480b      	ldr	r0, [pc, #44]	; (80012f0 <HAL_ULTRASONIC_INIT+0x98>)
 80012c2:	f000 fa79 	bl	80017b8 <EXTI_Init>
	}
	break;
 80012c6:	e00b      	b.n	80012e0 <HAL_ULTRASONIC_INIT+0x88>
	case ULT4 :
	{
		MCAL_GPIO_INIT(GPIOB, ULT4_TRIG_PIN_B12, Output_PP_Mode_Speed2MHZ);
 80012c8:	2202      	movs	r2, #2
 80012ca:	210c      	movs	r1, #12
 80012cc:	4806      	ldr	r0, [pc, #24]	; (80012e8 <HAL_ULTRASONIC_INIT+0x90>)
 80012ce:	f000 f90d 	bl	80014ec <MCAL_GPIO_INIT>
		EXTI_Init(GPIOA,ULT4_ECHO_PIN_A4,EXTI_Trigger_RisingAndFalling,echo4);
 80012d2:	4b0a      	ldr	r3, [pc, #40]	; (80012fc <HAL_ULTRASONIC_INIT+0xa4>)
 80012d4:	2202      	movs	r2, #2
 80012d6:	2104      	movs	r1, #4
 80012d8:	4805      	ldr	r0, [pc, #20]	; (80012f0 <HAL_ULTRASONIC_INIT+0x98>)
 80012da:	f000 fa6d 	bl	80017b8 <EXTI_Init>


	}
	break;
 80012de:	bf00      	nop
	}
}
 80012e0:	bf00      	nop
 80012e2:	3708      	adds	r7, #8
 80012e4:	46bd      	mov	sp, r7
 80012e6:	bd80      	pop	{r7, pc}
 80012e8:	40010c00 	.word	0x40010c00
 80012ec:	08001019 	.word	0x08001019
 80012f0:	40010800 	.word	0x40010800
 80012f4:	080010a9 	.word	0x080010a9
 80012f8:	08001139 	.word	0x08001139
 80012fc:	080011c9 	.word	0x080011c9

08001300 <HAL_ULTRASONIC_GET_DISTANCE>:



uint32_t HAL_ULTRASONIC_GET_DISTANCE(ULT_SLEC_T num)
{
 8001300:	b590      	push	{r4, r7, lr}
 8001302:	b085      	sub	sp, #20
 8001304:	af00      	add	r7, sp, #0
 8001306:	4603      	mov	r3, r0
 8001308:	71fb      	strb	r3, [r7, #7]
	uint32_t x ;
	switch(num)
 800130a:	79fb      	ldrb	r3, [r7, #7]
 800130c:	2b03      	cmp	r3, #3
 800130e:	d87f      	bhi.n	8001410 <HAL_ULTRASONIC_GET_DISTANCE+0x110>
 8001310:	a201      	add	r2, pc, #4	; (adr r2, 8001318 <HAL_ULTRASONIC_GET_DISTANCE+0x18>)
 8001312:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001316:	bf00      	nop
 8001318:	08001329 	.word	0x08001329
 800131c:	08001363 	.word	0x08001363
 8001320:	0800139d 	.word	0x0800139d
 8001324:	080013d7 	.word	0x080013d7
	{
	case ULT1 :
	{
		MCAL_GPIO_WRITEPIN(GPIOB, ULT1_TRIG_PIN_B9,SET);
 8001328:	2201      	movs	r2, #1
 800132a:	2109      	movs	r1, #9
 800132c:	483b      	ldr	r0, [pc, #236]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 800132e:	f000 f9b9 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(10, U_us, clk);
 8001332:	4a3b      	ldr	r2, [pc, #236]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 8001334:	2101      	movs	r1, #1
 8001336:	200a      	movs	r0, #10
 8001338:	f001 fa02 	bl	8002740 <delay>
		MCAL_GPIO_WRITEPIN(GPIOB, ULT1_TRIG_PIN_B9,RESET);
 800133c:	2200      	movs	r2, #0
 800133e:	2109      	movs	r1, #9
 8001340:	4836      	ldr	r0, [pc, #216]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 8001342:	f000 f9af 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(40,U_ms,clk);
 8001346:	4a36      	ldr	r2, [pc, #216]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 8001348:	2100      	movs	r1, #0
 800134a:	2028      	movs	r0, #40	; 0x28
 800134c:	f001 f9f8 	bl	8002740 <delay>
		x = distance1 ;
 8001350:	4b34      	ldr	r3, [pc, #208]	; (8001424 <HAL_ULTRASONIC_GET_DISTANCE+0x124>)
 8001352:	cb18      	ldmia	r3, {r3, r4}
 8001354:	4618      	mov	r0, r3
 8001356:	4621      	mov	r1, r4
 8001358:	f7ff fad8 	bl	800090c <__aeabi_d2uiz>
 800135c:	4603      	mov	r3, r0
 800135e:	60fb      	str	r3, [r7, #12]
	}
	break;
 8001360:	e056      	b.n	8001410 <HAL_ULTRASONIC_GET_DISTANCE+0x110>
	case ULT2 :
	{
		MCAL_GPIO_WRITEPIN(GPIOB, ULT2_TRIG_PIN_B10,SET);
 8001362:	2201      	movs	r2, #1
 8001364:	210a      	movs	r1, #10
 8001366:	482d      	ldr	r0, [pc, #180]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 8001368:	f000 f99c 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(10, U_us, clk);
 800136c:	4a2c      	ldr	r2, [pc, #176]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 800136e:	2101      	movs	r1, #1
 8001370:	200a      	movs	r0, #10
 8001372:	f001 f9e5 	bl	8002740 <delay>
		MCAL_GPIO_WRITEPIN(GPIOB, ULT2_TRIG_PIN_B10,RESET);
 8001376:	2200      	movs	r2, #0
 8001378:	210a      	movs	r1, #10
 800137a:	4828      	ldr	r0, [pc, #160]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 800137c:	f000 f992 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(40,U_ms,clk);
 8001380:	4a27      	ldr	r2, [pc, #156]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 8001382:	2100      	movs	r1, #0
 8001384:	2028      	movs	r0, #40	; 0x28
 8001386:	f001 f9db 	bl	8002740 <delay>
		x = distance2 ;
 800138a:	4b27      	ldr	r3, [pc, #156]	; (8001428 <HAL_ULTRASONIC_GET_DISTANCE+0x128>)
 800138c:	cb18      	ldmia	r3, {r3, r4}
 800138e:	4618      	mov	r0, r3
 8001390:	4621      	mov	r1, r4
 8001392:	f7ff fabb 	bl	800090c <__aeabi_d2uiz>
 8001396:	4603      	mov	r3, r0
 8001398:	60fb      	str	r3, [r7, #12]

	}
	break;
 800139a:	e039      	b.n	8001410 <HAL_ULTRASONIC_GET_DISTANCE+0x110>
	case ULT3 :
	{
		MCAL_GPIO_WRITEPIN(GPIOB, ULT3_TRIG_PIN_B11,SET);
 800139c:	2201      	movs	r2, #1
 800139e:	210b      	movs	r1, #11
 80013a0:	481e      	ldr	r0, [pc, #120]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 80013a2:	f000 f97f 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(10, U_us, clk);
 80013a6:	4a1e      	ldr	r2, [pc, #120]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 80013a8:	2101      	movs	r1, #1
 80013aa:	200a      	movs	r0, #10
 80013ac:	f001 f9c8 	bl	8002740 <delay>
		MCAL_GPIO_WRITEPIN(GPIOB, ULT3_TRIG_PIN_B11,RESET);
 80013b0:	2200      	movs	r2, #0
 80013b2:	210b      	movs	r1, #11
 80013b4:	4819      	ldr	r0, [pc, #100]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 80013b6:	f000 f975 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(40,U_ms,clk);
 80013ba:	4a19      	ldr	r2, [pc, #100]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 80013bc:	2100      	movs	r1, #0
 80013be:	2028      	movs	r0, #40	; 0x28
 80013c0:	f001 f9be 	bl	8002740 <delay>
		x = distance3 ;
 80013c4:	4b19      	ldr	r3, [pc, #100]	; (800142c <HAL_ULTRASONIC_GET_DISTANCE+0x12c>)
 80013c6:	cb18      	ldmia	r3, {r3, r4}
 80013c8:	4618      	mov	r0, r3
 80013ca:	4621      	mov	r1, r4
 80013cc:	f7ff fa9e 	bl	800090c <__aeabi_d2uiz>
 80013d0:	4603      	mov	r3, r0
 80013d2:	60fb      	str	r3, [r7, #12]
	}
	break;
 80013d4:	e01c      	b.n	8001410 <HAL_ULTRASONIC_GET_DISTANCE+0x110>
	case ULT4 :
	{
		MCAL_GPIO_WRITEPIN(GPIOB, ULT4_TRIG_PIN_B12,SET);
 80013d6:	2201      	movs	r2, #1
 80013d8:	210c      	movs	r1, #12
 80013da:	4810      	ldr	r0, [pc, #64]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 80013dc:	f000 f962 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(10, U_us, clk);
 80013e0:	4a0f      	ldr	r2, [pc, #60]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 80013e2:	2101      	movs	r1, #1
 80013e4:	200a      	movs	r0, #10
 80013e6:	f001 f9ab 	bl	8002740 <delay>
		MCAL_GPIO_WRITEPIN(GPIOB, ULT4_TRIG_PIN_B12,RESET);
 80013ea:	2200      	movs	r2, #0
 80013ec:	210c      	movs	r1, #12
 80013ee:	480b      	ldr	r0, [pc, #44]	; (800141c <HAL_ULTRASONIC_GET_DISTANCE+0x11c>)
 80013f0:	f000 f958 	bl	80016a4 <MCAL_GPIO_WRITEPIN>
		delay(40,U_ms,clk);
 80013f4:	4a0a      	ldr	r2, [pc, #40]	; (8001420 <HAL_ULTRASONIC_GET_DISTANCE+0x120>)
 80013f6:	2100      	movs	r1, #0
 80013f8:	2028      	movs	r0, #40	; 0x28
 80013fa:	f001 f9a1 	bl	8002740 <delay>
		x = distance4 ;
 80013fe:	4b0c      	ldr	r3, [pc, #48]	; (8001430 <HAL_ULTRASONIC_GET_DISTANCE+0x130>)
 8001400:	cb18      	ldmia	r3, {r3, r4}
 8001402:	4618      	mov	r0, r3
 8001404:	4621      	mov	r1, r4
 8001406:	f7ff fa81 	bl	800090c <__aeabi_d2uiz>
 800140a:	4603      	mov	r3, r0
 800140c:	60fb      	str	r3, [r7, #12]
	}
	break;
 800140e:	bf00      	nop
	}

	return x ;
 8001410:	68fb      	ldr	r3, [r7, #12]
}
 8001412:	4618      	mov	r0, r3
 8001414:	3714      	adds	r7, #20
 8001416:	46bd      	mov	sp, r7
 8001418:	bd90      	pop	{r4, r7, pc}
 800141a:	bf00      	nop
 800141c:	40010c00 	.word	0x40010c00
 8001420:	007a1200 	.word	0x007a1200
 8001424:	20000050 	.word	0x20000050
 8001428:	20000060 	.word	0x20000060
 800142c:	20000040 	.word	0x20000040
 8001430:	20000048 	.word	0x20000048

08001434 <getposition>:


/******************************************************************************
*                           APIS IMPLEMENTATION			                      *
*******************************************************************************/
uint8_t getposition(uint16_t pin_num){
 8001434:	b480      	push	{r7}
 8001436:	b085      	sub	sp, #20
 8001438:	af00      	add	r7, sp, #0
 800143a:	4603      	mov	r3, r0
 800143c:	80fb      	strh	r3, [r7, #6]
	uint8_t rval;
	if(pin_num == PIN_0){
 800143e:	88fb      	ldrh	r3, [r7, #6]
 8001440:	2b00      	cmp	r3, #0
 8001442:	d101      	bne.n	8001448 <getposition+0x14>
		rval =0;
 8001444:	2300      	movs	r3, #0
 8001446:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_1){
 8001448:	88fb      	ldrh	r3, [r7, #6]
 800144a:	2b01      	cmp	r3, #1
 800144c:	d101      	bne.n	8001452 <getposition+0x1e>
		rval =4;
 800144e:	2304      	movs	r3, #4
 8001450:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_2){
 8001452:	88fb      	ldrh	r3, [r7, #6]
 8001454:	2b02      	cmp	r3, #2
 8001456:	d101      	bne.n	800145c <getposition+0x28>
		rval =8;
 8001458:	2308      	movs	r3, #8
 800145a:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_3){
 800145c:	88fb      	ldrh	r3, [r7, #6]
 800145e:	2b03      	cmp	r3, #3
 8001460:	d101      	bne.n	8001466 <getposition+0x32>
		rval =12;
 8001462:	230c      	movs	r3, #12
 8001464:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_4){
 8001466:	88fb      	ldrh	r3, [r7, #6]
 8001468:	2b04      	cmp	r3, #4
 800146a:	d101      	bne.n	8001470 <getposition+0x3c>
		rval =16;
 800146c:	2310      	movs	r3, #16
 800146e:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_5){
 8001470:	88fb      	ldrh	r3, [r7, #6]
 8001472:	2b05      	cmp	r3, #5
 8001474:	d101      	bne.n	800147a <getposition+0x46>
		rval =20;
 8001476:	2314      	movs	r3, #20
 8001478:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_6){
 800147a:	88fb      	ldrh	r3, [r7, #6]
 800147c:	2b06      	cmp	r3, #6
 800147e:	d101      	bne.n	8001484 <getposition+0x50>
		rval =24;
 8001480:	2318      	movs	r3, #24
 8001482:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_7){
 8001484:	88fb      	ldrh	r3, [r7, #6]
 8001486:	2b07      	cmp	r3, #7
 8001488:	d101      	bne.n	800148e <getposition+0x5a>
		rval =28;
 800148a:	231c      	movs	r3, #28
 800148c:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_8){
 800148e:	88fb      	ldrh	r3, [r7, #6]
 8001490:	2b08      	cmp	r3, #8
 8001492:	d101      	bne.n	8001498 <getposition+0x64>
		rval =0;
 8001494:	2300      	movs	r3, #0
 8001496:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_9){
 8001498:	88fb      	ldrh	r3, [r7, #6]
 800149a:	2b09      	cmp	r3, #9
 800149c:	d101      	bne.n	80014a2 <getposition+0x6e>
		rval =4;
 800149e:	2304      	movs	r3, #4
 80014a0:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_10){
 80014a2:	88fb      	ldrh	r3, [r7, #6]
 80014a4:	2b0a      	cmp	r3, #10
 80014a6:	d101      	bne.n	80014ac <getposition+0x78>
		rval =8;
 80014a8:	2308      	movs	r3, #8
 80014aa:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_11){
 80014ac:	88fb      	ldrh	r3, [r7, #6]
 80014ae:	2b0b      	cmp	r3, #11
 80014b0:	d101      	bne.n	80014b6 <getposition+0x82>
		rval =12;
 80014b2:	230c      	movs	r3, #12
 80014b4:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_12){
 80014b6:	88fb      	ldrh	r3, [r7, #6]
 80014b8:	2b0c      	cmp	r3, #12
 80014ba:	d101      	bne.n	80014c0 <getposition+0x8c>
		rval =16;
 80014bc:	2310      	movs	r3, #16
 80014be:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_13){
 80014c0:	88fb      	ldrh	r3, [r7, #6]
 80014c2:	2b0d      	cmp	r3, #13
 80014c4:	d101      	bne.n	80014ca <getposition+0x96>
		rval =20;
 80014c6:	2314      	movs	r3, #20
 80014c8:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_14){
 80014ca:	88fb      	ldrh	r3, [r7, #6]
 80014cc:	2b0e      	cmp	r3, #14
 80014ce:	d101      	bne.n	80014d4 <getposition+0xa0>
		rval =24;
 80014d0:	2318      	movs	r3, #24
 80014d2:	73fb      	strb	r3, [r7, #15]
	}
	if(pin_num == PIN_15){
 80014d4:	88fb      	ldrh	r3, [r7, #6]
 80014d6:	2b0f      	cmp	r3, #15
 80014d8:	d101      	bne.n	80014de <getposition+0xaa>
		rval =28;
 80014da:	231c      	movs	r3, #28
 80014dc:	73fb      	strb	r3, [r7, #15]
	}
	return rval;
 80014de:	7bfb      	ldrb	r3, [r7, #15]


}
 80014e0:	4618      	mov	r0, r3
 80014e2:	3714      	adds	r7, #20
 80014e4:	46bd      	mov	sp, r7
 80014e6:	bc80      	pop	{r7}
 80014e8:	4770      	bx	lr
	...

080014ec <MCAL_GPIO_INIT>:
// * @param [in] - GPIOx: where x can be (A...E Depending on device used) to select the GPIO Peripheral
// * @param [in] - pin: pin name
// * @param [in] - pinmode:mode of the pin
// * @retval -none
// * Note-
void MCAL_GPIO_INIT(GPIO_TypeDef* GPIOx,uint16_t pin,uint32_t pinmode){
 80014ec:	b580      	push	{r7, lr}
 80014ee:	b084      	sub	sp, #16
 80014f0:	af00      	add	r7, sp, #0
 80014f2:	60f8      	str	r0, [r7, #12]
 80014f4:	460b      	mov	r3, r1
 80014f6:	607a      	str	r2, [r7, #4]
 80014f8:	817b      	strh	r3, [r7, #10]
	if(GPIOx==GPIOA){
 80014fa:	68fb      	ldr	r3, [r7, #12]
 80014fc:	4a67      	ldr	r2, [pc, #412]	; (800169c <MCAL_GPIO_INIT+0x1b0>)
 80014fe:	4293      	cmp	r3, r2
 8001500:	d105      	bne.n	800150e <MCAL_GPIO_INIT+0x22>
		MCAL_RCC_Peripherals_enable(APB2, RCC_GPIOA, Enable);
 8001502:	2201      	movs	r2, #1
 8001504:	2102      	movs	r1, #2
 8001506:	2002      	movs	r0, #2
 8001508:	f000 fe6c 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
 800150c:	e00e      	b.n	800152c <MCAL_GPIO_INIT+0x40>

	}
	else if(GPIOx==GPIOB){
 800150e:	68fb      	ldr	r3, [r7, #12]
 8001510:	4a63      	ldr	r2, [pc, #396]	; (80016a0 <MCAL_GPIO_INIT+0x1b4>)
 8001512:	4293      	cmp	r3, r2
 8001514:	d105      	bne.n	8001522 <MCAL_GPIO_INIT+0x36>
		MCAL_RCC_Peripherals_enable(APB2, RCC_GPIOB, Enable);
 8001516:	2201      	movs	r2, #1
 8001518:	2103      	movs	r1, #3
 800151a:	2002      	movs	r0, #2
 800151c:	f000 fe62 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
 8001520:	e004      	b.n	800152c <MCAL_GPIO_INIT+0x40>

	}
	else{
		MCAL_RCC_Peripherals_enable(APB2, RCC_GPIOC, Enable);
 8001522:	2201      	movs	r2, #1
 8001524:	2104      	movs	r1, #4
 8001526:	2002      	movs	r0, #2
 8001528:	f000 fe5c 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
	}

	if(pin<8){
 800152c:	897b      	ldrh	r3, [r7, #10]
 800152e:	2b07      	cmp	r3, #7
 8001530:	d856      	bhi.n	80015e0 <MCAL_GPIO_INIT+0xf4>
		GPIOx->CRL &=~(0xf<<(getposition(pin)));
 8001532:	897b      	ldrh	r3, [r7, #10]
 8001534:	4618      	mov	r0, r3
 8001536:	f7ff ff7d 	bl	8001434 <getposition>
 800153a:	4603      	mov	r3, r0
 800153c:	461a      	mov	r2, r3
 800153e:	230f      	movs	r3, #15
 8001540:	4093      	lsls	r3, r2
 8001542:	43da      	mvns	r2, r3
 8001544:	68fb      	ldr	r3, [r7, #12]
 8001546:	681b      	ldr	r3, [r3, #0]
 8001548:	401a      	ands	r2, r3
 800154a:	68fb      	ldr	r3, [r7, #12]
 800154c:	601a      	str	r2, [r3, #0]

		if((pinmode==Input_PD_Mode)||(pinmode==Input_PU_Mode)){
 800154e:	687b      	ldr	r3, [r7, #4]
 8001550:	2b08      	cmp	r3, #8
 8001552:	d002      	beq.n	800155a <MCAL_GPIO_INIT+0x6e>
 8001554:	687b      	ldr	r3, [r7, #4]
 8001556:	2b18      	cmp	r3, #24
 8001558:	d133      	bne.n	80015c2 <MCAL_GPIO_INIT+0xd6>
			if(pinmode == Input_PU_Mode){
 800155a:	687b      	ldr	r3, [r7, #4]
 800155c:	2b18      	cmp	r3, #24
 800155e:	d117      	bne.n	8001590 <MCAL_GPIO_INIT+0xa4>
				GPIOx->CRL |=(0b1000<<(getposition(pin)));
 8001560:	897b      	ldrh	r3, [r7, #10]
 8001562:	4618      	mov	r0, r3
 8001564:	f7ff ff66 	bl	8001434 <getposition>
 8001568:	4603      	mov	r3, r0
 800156a:	461a      	mov	r2, r3
 800156c:	2308      	movs	r3, #8
 800156e:	fa03 f202 	lsl.w	r2, r3, r2
 8001572:	68fb      	ldr	r3, [r7, #12]
 8001574:	681b      	ldr	r3, [r3, #0]
 8001576:	431a      	orrs	r2, r3
 8001578:	68fb      	ldr	r3, [r7, #12]
 800157a:	601a      	str	r2, [r3, #0]
				GPIOx->ODR |= (1<<pin);
 800157c:	68fb      	ldr	r3, [r7, #12]
 800157e:	68db      	ldr	r3, [r3, #12]
 8001580:	897a      	ldrh	r2, [r7, #10]
 8001582:	2101      	movs	r1, #1
 8001584:	fa01 f202 	lsl.w	r2, r1, r2
 8001588:	431a      	orrs	r2, r3
 800158a:	68fb      	ldr	r3, [r7, #12]
 800158c:	60da      	str	r2, [r3, #12]
			if(pinmode == Input_PU_Mode){
 800158e:	e081      	b.n	8001694 <MCAL_GPIO_INIT+0x1a8>
			}
			else{
				GPIOx->CRL |=(0b1000<<(getposition(pin)));
 8001590:	897b      	ldrh	r3, [r7, #10]
 8001592:	4618      	mov	r0, r3
 8001594:	f7ff ff4e 	bl	8001434 <getposition>
 8001598:	4603      	mov	r3, r0
 800159a:	461a      	mov	r2, r3
 800159c:	2308      	movs	r3, #8
 800159e:	fa03 f202 	lsl.w	r2, r3, r2
 80015a2:	68fb      	ldr	r3, [r7, #12]
 80015a4:	681b      	ldr	r3, [r3, #0]
 80015a6:	431a      	orrs	r2, r3
 80015a8:	68fb      	ldr	r3, [r7, #12]
 80015aa:	601a      	str	r2, [r3, #0]
				GPIOx->ODR &=~(1<<pin);
 80015ac:	68fb      	ldr	r3, [r7, #12]
 80015ae:	68db      	ldr	r3, [r3, #12]
 80015b0:	897a      	ldrh	r2, [r7, #10]
 80015b2:	2101      	movs	r1, #1
 80015b4:	fa01 f202 	lsl.w	r2, r1, r2
 80015b8:	43d2      	mvns	r2, r2
 80015ba:	401a      	ands	r2, r3
 80015bc:	68fb      	ldr	r3, [r7, #12]
 80015be:	60da      	str	r2, [r3, #12]
			if(pinmode == Input_PU_Mode){
 80015c0:	e068      	b.n	8001694 <MCAL_GPIO_INIT+0x1a8>
			}

		}
		else GPIOx->CRL |=(pinmode<<(getposition(pin)));
 80015c2:	897b      	ldrh	r3, [r7, #10]
 80015c4:	4618      	mov	r0, r3
 80015c6:	f7ff ff35 	bl	8001434 <getposition>
 80015ca:	4603      	mov	r3, r0
 80015cc:	461a      	mov	r2, r3
 80015ce:	687b      	ldr	r3, [r7, #4]
 80015d0:	fa03 f202 	lsl.w	r2, r3, r2
 80015d4:	68fb      	ldr	r3, [r7, #12]
 80015d6:	681b      	ldr	r3, [r3, #0]
 80015d8:	431a      	orrs	r2, r3
 80015da:	68fb      	ldr	r3, [r7, #12]
 80015dc:	601a      	str	r2, [r3, #0]

	}



}
 80015de:	e059      	b.n	8001694 <MCAL_GPIO_INIT+0x1a8>
	else if(pin>7){
 80015e0:	897b      	ldrh	r3, [r7, #10]
 80015e2:	2b07      	cmp	r3, #7
 80015e4:	d956      	bls.n	8001694 <MCAL_GPIO_INIT+0x1a8>
		GPIOx->CRH &=~(0xf<<(getposition(pin)));
 80015e6:	897b      	ldrh	r3, [r7, #10]
 80015e8:	4618      	mov	r0, r3
 80015ea:	f7ff ff23 	bl	8001434 <getposition>
 80015ee:	4603      	mov	r3, r0
 80015f0:	461a      	mov	r2, r3
 80015f2:	230f      	movs	r3, #15
 80015f4:	4093      	lsls	r3, r2
 80015f6:	43da      	mvns	r2, r3
 80015f8:	68fb      	ldr	r3, [r7, #12]
 80015fa:	685b      	ldr	r3, [r3, #4]
 80015fc:	401a      	ands	r2, r3
 80015fe:	68fb      	ldr	r3, [r7, #12]
 8001600:	605a      	str	r2, [r3, #4]
		if((pinmode==Input_PD_Mode)||(pinmode==Input_PU_Mode)){
 8001602:	687b      	ldr	r3, [r7, #4]
 8001604:	2b08      	cmp	r3, #8
 8001606:	d002      	beq.n	800160e <MCAL_GPIO_INIT+0x122>
 8001608:	687b      	ldr	r3, [r7, #4]
 800160a:	2b18      	cmp	r3, #24
 800160c:	d133      	bne.n	8001676 <MCAL_GPIO_INIT+0x18a>
			if(pinmode == Input_PU_Mode){
 800160e:	687b      	ldr	r3, [r7, #4]
 8001610:	2b18      	cmp	r3, #24
 8001612:	d117      	bne.n	8001644 <MCAL_GPIO_INIT+0x158>
				GPIOx->CRH |=(0b1000<<(getposition(pin)));
 8001614:	897b      	ldrh	r3, [r7, #10]
 8001616:	4618      	mov	r0, r3
 8001618:	f7ff ff0c 	bl	8001434 <getposition>
 800161c:	4603      	mov	r3, r0
 800161e:	461a      	mov	r2, r3
 8001620:	2308      	movs	r3, #8
 8001622:	fa03 f202 	lsl.w	r2, r3, r2
 8001626:	68fb      	ldr	r3, [r7, #12]
 8001628:	685b      	ldr	r3, [r3, #4]
 800162a:	431a      	orrs	r2, r3
 800162c:	68fb      	ldr	r3, [r7, #12]
 800162e:	605a      	str	r2, [r3, #4]
				GPIOx->ODR |= (1<<pin);
 8001630:	68fb      	ldr	r3, [r7, #12]
 8001632:	68db      	ldr	r3, [r3, #12]
 8001634:	897a      	ldrh	r2, [r7, #10]
 8001636:	2101      	movs	r1, #1
 8001638:	fa01 f202 	lsl.w	r2, r1, r2
 800163c:	431a      	orrs	r2, r3
 800163e:	68fb      	ldr	r3, [r7, #12]
 8001640:	60da      	str	r2, [r3, #12]
			if(pinmode == Input_PU_Mode){
 8001642:	e027      	b.n	8001694 <MCAL_GPIO_INIT+0x1a8>
				GPIOx->CRH |=(0b1000<<(getposition(pin)));
 8001644:	897b      	ldrh	r3, [r7, #10]
 8001646:	4618      	mov	r0, r3
 8001648:	f7ff fef4 	bl	8001434 <getposition>
 800164c:	4603      	mov	r3, r0
 800164e:	461a      	mov	r2, r3
 8001650:	2308      	movs	r3, #8
 8001652:	fa03 f202 	lsl.w	r2, r3, r2
 8001656:	68fb      	ldr	r3, [r7, #12]
 8001658:	685b      	ldr	r3, [r3, #4]
 800165a:	431a      	orrs	r2, r3
 800165c:	68fb      	ldr	r3, [r7, #12]
 800165e:	605a      	str	r2, [r3, #4]
				GPIOx->ODR &=~(1<<pin);
 8001660:	68fb      	ldr	r3, [r7, #12]
 8001662:	68db      	ldr	r3, [r3, #12]
 8001664:	897a      	ldrh	r2, [r7, #10]
 8001666:	2101      	movs	r1, #1
 8001668:	fa01 f202 	lsl.w	r2, r1, r2
 800166c:	43d2      	mvns	r2, r2
 800166e:	401a      	ands	r2, r3
 8001670:	68fb      	ldr	r3, [r7, #12]
 8001672:	60da      	str	r2, [r3, #12]
			if(pinmode == Input_PU_Mode){
 8001674:	e00e      	b.n	8001694 <MCAL_GPIO_INIT+0x1a8>
		else GPIOx->CRH |=(pinmode<<(getposition(pin)));
 8001676:	897b      	ldrh	r3, [r7, #10]
 8001678:	4618      	mov	r0, r3
 800167a:	f7ff fedb 	bl	8001434 <getposition>
 800167e:	4603      	mov	r3, r0
 8001680:	461a      	mov	r2, r3
 8001682:	687b      	ldr	r3, [r7, #4]
 8001684:	fa03 f202 	lsl.w	r2, r3, r2
 8001688:	68fb      	ldr	r3, [r7, #12]
 800168a:	685b      	ldr	r3, [r3, #4]
 800168c:	431a      	orrs	r2, r3
 800168e:	68fb      	ldr	r3, [r7, #12]
 8001690:	605a      	str	r2, [r3, #4]
}
 8001692:	e7ff      	b.n	8001694 <MCAL_GPIO_INIT+0x1a8>
 8001694:	bf00      	nop
 8001696:	3710      	adds	r7, #16
 8001698:	46bd      	mov	sp, r7
 800169a:	bd80      	pop	{r7, pc}
 800169c:	40010800 	.word	0x40010800
 80016a0:	40010c00 	.word	0x40010c00

080016a4 <MCAL_GPIO_WRITEPIN>:
 * @param [in] - pin: GPIOx PIN Number
 * @param [in] - status: The desired value to write
 * @retval - None
 * Note-
 */
void MCAL_GPIO_WRITEPIN(GPIO_TypeDef* GPIOx,uint16_t pin,uint8_t status){
 80016a4:	b480      	push	{r7}
 80016a6:	b083      	sub	sp, #12
 80016a8:	af00      	add	r7, sp, #0
 80016aa:	6078      	str	r0, [r7, #4]
 80016ac:	460b      	mov	r3, r1
 80016ae:	807b      	strh	r3, [r7, #2]
 80016b0:	4613      	mov	r3, r2
 80016b2:	707b      	strb	r3, [r7, #1]
	if(status!=0){
 80016b4:	787b      	ldrb	r3, [r7, #1]
 80016b6:	2b00      	cmp	r3, #0
 80016b8:	d009      	beq.n	80016ce <MCAL_GPIO_WRITEPIN+0x2a>
		GPIOx->ODR |=(1<<pin);
 80016ba:	687b      	ldr	r3, [r7, #4]
 80016bc:	68db      	ldr	r3, [r3, #12]
 80016be:	887a      	ldrh	r2, [r7, #2]
 80016c0:	2101      	movs	r1, #1
 80016c2:	fa01 f202 	lsl.w	r2, r1, r2
 80016c6:	431a      	orrs	r2, r3
 80016c8:	687b      	ldr	r3, [r7, #4]
 80016ca:	60da      	str	r2, [r3, #12]
	}
	else GPIOx->ODR &=~(1<<pin);

}
 80016cc:	e009      	b.n	80016e2 <MCAL_GPIO_WRITEPIN+0x3e>
	else GPIOx->ODR &=~(1<<pin);
 80016ce:	687b      	ldr	r3, [r7, #4]
 80016d0:	68db      	ldr	r3, [r3, #12]
 80016d2:	887a      	ldrh	r2, [r7, #2]
 80016d4:	2101      	movs	r1, #1
 80016d6:	fa01 f202 	lsl.w	r2, r1, r2
 80016da:	43d2      	mvns	r2, r2
 80016dc:	401a      	ands	r2, r3
 80016de:	687b      	ldr	r3, [r7, #4]
 80016e0:	60da      	str	r2, [r3, #12]
}
 80016e2:	bf00      	nop
 80016e4:	370c      	adds	r7, #12
 80016e6:	46bd      	mov	sp, r7
 80016e8:	bc80      	pop	{r7}
 80016ea:	4770      	bx	lr

080016ec <Enable_NVIC>:
 * ------------------------------------------------
 * 				  Generic Functions
 *-------------------------------------------------
 */

void Enable_NVIC(uint16_t IRQ){
 80016ec:	b480      	push	{r7}
 80016ee:	b083      	sub	sp, #12
 80016f0:	af00      	add	r7, sp, #0
 80016f2:	4603      	mov	r3, r0
 80016f4:	80fb      	strh	r3, [r7, #6]
	switch(IRQ){
 80016f6:	88fb      	ldrh	r3, [r7, #6]
 80016f8:	2b0f      	cmp	r3, #15
 80016fa:	d854      	bhi.n	80017a6 <Enable_NVIC+0xba>
 80016fc:	a201      	add	r2, pc, #4	; (adr r2, 8001704 <Enable_NVIC+0x18>)
 80016fe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001702:	bf00      	nop
 8001704:	08001745 	.word	0x08001745
 8001708:	08001753 	.word	0x08001753
 800170c:	08001761 	.word	0x08001761
 8001710:	0800176f 	.word	0x0800176f
 8001714:	0800177d 	.word	0x0800177d
 8001718:	0800178b 	.word	0x0800178b
 800171c:	0800178b 	.word	0x0800178b
 8001720:	0800178b 	.word	0x0800178b
 8001724:	0800178b 	.word	0x0800178b
 8001728:	0800178b 	.word	0x0800178b
 800172c:	08001799 	.word	0x08001799
 8001730:	08001799 	.word	0x08001799
 8001734:	08001799 	.word	0x08001799
 8001738:	08001799 	.word	0x08001799
 800173c:	08001799 	.word	0x08001799
 8001740:	08001799 	.word	0x08001799
	case 0:
		NVIC_IRQ6_EXTI0_Enable;
 8001744:	4b1a      	ldr	r3, [pc, #104]	; (80017b0 <Enable_NVIC+0xc4>)
 8001746:	681b      	ldr	r3, [r3, #0]
 8001748:	4a19      	ldr	r2, [pc, #100]	; (80017b0 <Enable_NVIC+0xc4>)
 800174a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 800174e:	6013      	str	r3, [r2, #0]
		break;
 8001750:	e029      	b.n	80017a6 <Enable_NVIC+0xba>
	case 1:
		NVIC_IRQ7_EXTI1_Enable;
 8001752:	4b17      	ldr	r3, [pc, #92]	; (80017b0 <Enable_NVIC+0xc4>)
 8001754:	681b      	ldr	r3, [r3, #0]
 8001756:	4a16      	ldr	r2, [pc, #88]	; (80017b0 <Enable_NVIC+0xc4>)
 8001758:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 800175c:	6013      	str	r3, [r2, #0]
		break;
 800175e:	e022      	b.n	80017a6 <Enable_NVIC+0xba>
	case 2:
		NVIC_IRQ8_EXTI2_Enable;
 8001760:	4b13      	ldr	r3, [pc, #76]	; (80017b0 <Enable_NVIC+0xc4>)
 8001762:	681b      	ldr	r3, [r3, #0]
 8001764:	4a12      	ldr	r2, [pc, #72]	; (80017b0 <Enable_NVIC+0xc4>)
 8001766:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800176a:	6013      	str	r3, [r2, #0]
		break;
 800176c:	e01b      	b.n	80017a6 <Enable_NVIC+0xba>
	case 3:
		NVIC_IRQ9_EXTI3_Enable;
 800176e:	4b10      	ldr	r3, [pc, #64]	; (80017b0 <Enable_NVIC+0xc4>)
 8001770:	681b      	ldr	r3, [r3, #0]
 8001772:	4a0f      	ldr	r2, [pc, #60]	; (80017b0 <Enable_NVIC+0xc4>)
 8001774:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001778:	6013      	str	r3, [r2, #0]
		break;
 800177a:	e014      	b.n	80017a6 <Enable_NVIC+0xba>
	case 4:
		NVIC_IRQ10_EXTI4_Enable;
 800177c:	4b0c      	ldr	r3, [pc, #48]	; (80017b0 <Enable_NVIC+0xc4>)
 800177e:	681b      	ldr	r3, [r3, #0]
 8001780:	4a0b      	ldr	r2, [pc, #44]	; (80017b0 <Enable_NVIC+0xc4>)
 8001782:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8001786:	6013      	str	r3, [r2, #0]
		break;
 8001788:	e00d      	b.n	80017a6 <Enable_NVIC+0xba>
	case 5:
	case 6:
	case 7:
	case 8:
	case 9:
		NVIC_IRQ23_EXTI5_9_Enable;
 800178a:	4b09      	ldr	r3, [pc, #36]	; (80017b0 <Enable_NVIC+0xc4>)
 800178c:	681b      	ldr	r3, [r3, #0]
 800178e:	4a08      	ldr	r2, [pc, #32]	; (80017b0 <Enable_NVIC+0xc4>)
 8001790:	f443 0300 	orr.w	r3, r3, #8388608	; 0x800000
 8001794:	6013      	str	r3, [r2, #0]
		break;
 8001796:	e006      	b.n	80017a6 <Enable_NVIC+0xba>
	case 11:
	case 12:
	case 13:
	case 14:
	case 15:
		NVIC_IRQ40_EXTI10_15_Enable;
 8001798:	4b06      	ldr	r3, [pc, #24]	; (80017b4 <Enable_NVIC+0xc8>)
 800179a:	681b      	ldr	r3, [r3, #0]
 800179c:	4a05      	ldr	r2, [pc, #20]	; (80017b4 <Enable_NVIC+0xc8>)
 800179e:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80017a2:	6013      	str	r3, [r2, #0]
		break;
 80017a4:	bf00      	nop
	}


}
 80017a6:	bf00      	nop
 80017a8:	370c      	adds	r7, #12
 80017aa:	46bd      	mov	sp, r7
 80017ac:	bc80      	pop	{r7}
 80017ae:	4770      	bx	lr
 80017b0:	e000e100 	.word	0xe000e100
 80017b4:	e000e104 	.word	0xe000e104

080017b8 <EXTI_Init>:
 * @retval          - none
 * Note             -
 *================================================================ */

void EXTI_Init(GPIO_TypeDef* PORTx ,uint16_t pin,uint16_t triggercase,void (*function_addres) (void))
{
 80017b8:	b580      	push	{r7, lr}
 80017ba:	b084      	sub	sp, #16
 80017bc:	af00      	add	r7, sp, #0
 80017be:	60f8      	str	r0, [r7, #12]
 80017c0:	607b      	str	r3, [r7, #4]
 80017c2:	460b      	mov	r3, r1
 80017c4:	817b      	strh	r3, [r7, #10]
 80017c6:	4613      	mov	r3, r2
 80017c8:	813b      	strh	r3, [r7, #8]

	MCAL_GPIO_INIT(PORTx,pin,Input_ALF_Mode);//set pin to _INTPUT_AF
 80017ca:	897b      	ldrh	r3, [r7, #10]
 80017cc:	2204      	movs	r2, #4
 80017ce:	4619      	mov	r1, r3
 80017d0:	68f8      	ldr	r0, [r7, #12]
 80017d2:	f7ff fe8b 	bl	80014ec <MCAL_GPIO_INIT>
		//	0000: PA[x] pin
		//	0001: PB[x] pin
		//	0010: PC[x] pin
		//	0011: PD[x] pin

		switch(pin){
 80017d6:	897b      	ldrh	r3, [r7, #10]
 80017d8:	2b0f      	cmp	r3, #15
 80017da:	f200 8385 	bhi.w	8001ee8 <EXTI_Init+0x730>
 80017de:	a201      	add	r2, pc, #4	; (adr r2, 80017e4 <EXTI_Init+0x2c>)
 80017e0:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80017e4:	08001825 	.word	0x08001825
 80017e8:	0800188b 	.word	0x0800188b
 80017ec:	080018f1 	.word	0x080018f1
 80017f0:	08001957 	.word	0x08001957
 80017f4:	080019bd 	.word	0x080019bd
 80017f8:	08001a23 	.word	0x08001a23
 80017fc:	08001a9d 	.word	0x08001a9d
 8001800:	08001b03 	.word	0x08001b03
 8001804:	08001b69 	.word	0x08001b69
 8001808:	08001bcf 	.word	0x08001bcf
 800180c:	08001c35 	.word	0x08001c35
 8001810:	08001c9b 	.word	0x08001c9b
 8001814:	08001d17 	.word	0x08001d17
 8001818:	08001d7d 	.word	0x08001d7d
 800181c:	08001de3 	.word	0x08001de3
 8001820:	08001e47 	.word	0x08001e47
		case PIN_0:
			AFIO->EXTICR1 &=~(0b1111<<0);
 8001824:	4b92      	ldr	r3, [pc, #584]	; (8001a70 <EXTI_Init+0x2b8>)
 8001826:	689b      	ldr	r3, [r3, #8]
 8001828:	4a91      	ldr	r2, [pc, #580]	; (8001a70 <EXTI_Init+0x2b8>)
 800182a:	f023 030f 	bic.w	r3, r3, #15
 800182e:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->EXTICR1 &=~(0b1111<<0);}
 8001830:	68fb      	ldr	r3, [r7, #12]
 8001832:	4a90      	ldr	r2, [pc, #576]	; (8001a74 <EXTI_Init+0x2bc>)
 8001834:	4293      	cmp	r3, r2
 8001836:	d106      	bne.n	8001846 <EXTI_Init+0x8e>
 8001838:	4b8d      	ldr	r3, [pc, #564]	; (8001a70 <EXTI_Init+0x2b8>)
 800183a:	689b      	ldr	r3, [r3, #8]
 800183c:	4a8c      	ldr	r2, [pc, #560]	; (8001a70 <EXTI_Init+0x2b8>)
 800183e:	f023 030f 	bic.w	r3, r3, #15
 8001842:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<0);}

			break;
 8001844:	e331      	b.n	8001eaa <EXTI_Init+0x6f2>
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<0);}
 8001846:	68fb      	ldr	r3, [r7, #12]
 8001848:	4a8b      	ldr	r2, [pc, #556]	; (8001a78 <EXTI_Init+0x2c0>)
 800184a:	4293      	cmp	r3, r2
 800184c:	d106      	bne.n	800185c <EXTI_Init+0xa4>
 800184e:	4b88      	ldr	r3, [pc, #544]	; (8001a70 <EXTI_Init+0x2b8>)
 8001850:	689b      	ldr	r3, [r3, #8]
 8001852:	4a87      	ldr	r2, [pc, #540]	; (8001a70 <EXTI_Init+0x2b8>)
 8001854:	f043 0301 	orr.w	r3, r3, #1
 8001858:	6093      	str	r3, [r2, #8]
			break;
 800185a:	e326      	b.n	8001eaa <EXTI_Init+0x6f2>
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<0);}
 800185c:	68fb      	ldr	r3, [r7, #12]
 800185e:	4a87      	ldr	r2, [pc, #540]	; (8001a7c <EXTI_Init+0x2c4>)
 8001860:	4293      	cmp	r3, r2
 8001862:	d106      	bne.n	8001872 <EXTI_Init+0xba>
 8001864:	4b82      	ldr	r3, [pc, #520]	; (8001a70 <EXTI_Init+0x2b8>)
 8001866:	689b      	ldr	r3, [r3, #8]
 8001868:	4a81      	ldr	r2, [pc, #516]	; (8001a70 <EXTI_Init+0x2b8>)
 800186a:	f043 0302 	orr.w	r3, r3, #2
 800186e:	6093      	str	r3, [r2, #8]
			break;
 8001870:	e31b      	b.n	8001eaa <EXTI_Init+0x6f2>
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<0);}
 8001872:	68fb      	ldr	r3, [r7, #12]
 8001874:	4a82      	ldr	r2, [pc, #520]	; (8001a80 <EXTI_Init+0x2c8>)
 8001876:	4293      	cmp	r3, r2
 8001878:	f040 8317 	bne.w	8001eaa <EXTI_Init+0x6f2>
 800187c:	4b7c      	ldr	r3, [pc, #496]	; (8001a70 <EXTI_Init+0x2b8>)
 800187e:	689b      	ldr	r3, [r3, #8]
 8001880:	4a7b      	ldr	r2, [pc, #492]	; (8001a70 <EXTI_Init+0x2b8>)
 8001882:	f043 0303 	orr.w	r3, r3, #3
 8001886:	6093      	str	r3, [r2, #8]
			break;
 8001888:	e30f      	b.n	8001eaa <EXTI_Init+0x6f2>
		case PIN_1:
			AFIO->EXTICR1 &=~(0b1111<<4);
 800188a:	4b79      	ldr	r3, [pc, #484]	; (8001a70 <EXTI_Init+0x2b8>)
 800188c:	689b      	ldr	r3, [r3, #8]
 800188e:	4a78      	ldr	r2, [pc, #480]	; (8001a70 <EXTI_Init+0x2b8>)
 8001890:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001894:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->EXTICR1 &=~(0b1111<<4);}
 8001896:	68fb      	ldr	r3, [r7, #12]
 8001898:	4a76      	ldr	r2, [pc, #472]	; (8001a74 <EXTI_Init+0x2bc>)
 800189a:	4293      	cmp	r3, r2
 800189c:	d106      	bne.n	80018ac <EXTI_Init+0xf4>
 800189e:	4b74      	ldr	r3, [pc, #464]	; (8001a70 <EXTI_Init+0x2b8>)
 80018a0:	689b      	ldr	r3, [r3, #8]
 80018a2:	4a73      	ldr	r2, [pc, #460]	; (8001a70 <EXTI_Init+0x2b8>)
 80018a4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80018a8:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<4);}

			break;
 80018aa:	e300      	b.n	8001eae <EXTI_Init+0x6f6>
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<4);}
 80018ac:	68fb      	ldr	r3, [r7, #12]
 80018ae:	4a72      	ldr	r2, [pc, #456]	; (8001a78 <EXTI_Init+0x2c0>)
 80018b0:	4293      	cmp	r3, r2
 80018b2:	d106      	bne.n	80018c2 <EXTI_Init+0x10a>
 80018b4:	4b6e      	ldr	r3, [pc, #440]	; (8001a70 <EXTI_Init+0x2b8>)
 80018b6:	689b      	ldr	r3, [r3, #8]
 80018b8:	4a6d      	ldr	r2, [pc, #436]	; (8001a70 <EXTI_Init+0x2b8>)
 80018ba:	f043 0310 	orr.w	r3, r3, #16
 80018be:	6093      	str	r3, [r2, #8]
			break;
 80018c0:	e2f5      	b.n	8001eae <EXTI_Init+0x6f6>
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<4);}
 80018c2:	68fb      	ldr	r3, [r7, #12]
 80018c4:	4a6d      	ldr	r2, [pc, #436]	; (8001a7c <EXTI_Init+0x2c4>)
 80018c6:	4293      	cmp	r3, r2
 80018c8:	d106      	bne.n	80018d8 <EXTI_Init+0x120>
 80018ca:	4b69      	ldr	r3, [pc, #420]	; (8001a70 <EXTI_Init+0x2b8>)
 80018cc:	689b      	ldr	r3, [r3, #8]
 80018ce:	4a68      	ldr	r2, [pc, #416]	; (8001a70 <EXTI_Init+0x2b8>)
 80018d0:	f043 0320 	orr.w	r3, r3, #32
 80018d4:	6093      	str	r3, [r2, #8]
			break;
 80018d6:	e2ea      	b.n	8001eae <EXTI_Init+0x6f6>
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<4);}
 80018d8:	68fb      	ldr	r3, [r7, #12]
 80018da:	4a69      	ldr	r2, [pc, #420]	; (8001a80 <EXTI_Init+0x2c8>)
 80018dc:	4293      	cmp	r3, r2
 80018de:	f040 82e6 	bne.w	8001eae <EXTI_Init+0x6f6>
 80018e2:	4b63      	ldr	r3, [pc, #396]	; (8001a70 <EXTI_Init+0x2b8>)
 80018e4:	689b      	ldr	r3, [r3, #8]
 80018e6:	4a62      	ldr	r2, [pc, #392]	; (8001a70 <EXTI_Init+0x2b8>)
 80018e8:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 80018ec:	6093      	str	r3, [r2, #8]
			break;
 80018ee:	e2de      	b.n	8001eae <EXTI_Init+0x6f6>
		case PIN_2:
			AFIO->EXTICR1 &=~(0b1111<<8);
 80018f0:	4b5f      	ldr	r3, [pc, #380]	; (8001a70 <EXTI_Init+0x2b8>)
 80018f2:	689b      	ldr	r3, [r3, #8]
 80018f4:	4a5e      	ldr	r2, [pc, #376]	; (8001a70 <EXTI_Init+0x2b8>)
 80018f6:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 80018fa:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->EXTICR1 &=~(0b1111<<8);}
 80018fc:	68fb      	ldr	r3, [r7, #12]
 80018fe:	4a5d      	ldr	r2, [pc, #372]	; (8001a74 <EXTI_Init+0x2bc>)
 8001900:	4293      	cmp	r3, r2
 8001902:	d106      	bne.n	8001912 <EXTI_Init+0x15a>
 8001904:	4b5a      	ldr	r3, [pc, #360]	; (8001a70 <EXTI_Init+0x2b8>)
 8001906:	689b      	ldr	r3, [r3, #8]
 8001908:	4a59      	ldr	r2, [pc, #356]	; (8001a70 <EXTI_Init+0x2b8>)
 800190a:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 800190e:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<8);}

			break;
 8001910:	e2cf      	b.n	8001eb2 <EXTI_Init+0x6fa>
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<8);}
 8001912:	68fb      	ldr	r3, [r7, #12]
 8001914:	4a58      	ldr	r2, [pc, #352]	; (8001a78 <EXTI_Init+0x2c0>)
 8001916:	4293      	cmp	r3, r2
 8001918:	d106      	bne.n	8001928 <EXTI_Init+0x170>
 800191a:	4b55      	ldr	r3, [pc, #340]	; (8001a70 <EXTI_Init+0x2b8>)
 800191c:	689b      	ldr	r3, [r3, #8]
 800191e:	4a54      	ldr	r2, [pc, #336]	; (8001a70 <EXTI_Init+0x2b8>)
 8001920:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001924:	6093      	str	r3, [r2, #8]
			break;
 8001926:	e2c4      	b.n	8001eb2 <EXTI_Init+0x6fa>
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<8);}
 8001928:	68fb      	ldr	r3, [r7, #12]
 800192a:	4a54      	ldr	r2, [pc, #336]	; (8001a7c <EXTI_Init+0x2c4>)
 800192c:	4293      	cmp	r3, r2
 800192e:	d106      	bne.n	800193e <EXTI_Init+0x186>
 8001930:	4b4f      	ldr	r3, [pc, #316]	; (8001a70 <EXTI_Init+0x2b8>)
 8001932:	689b      	ldr	r3, [r3, #8]
 8001934:	4a4e      	ldr	r2, [pc, #312]	; (8001a70 <EXTI_Init+0x2b8>)
 8001936:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800193a:	6093      	str	r3, [r2, #8]
			break;
 800193c:	e2b9      	b.n	8001eb2 <EXTI_Init+0x6fa>
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<8);}
 800193e:	68fb      	ldr	r3, [r7, #12]
 8001940:	4a4f      	ldr	r2, [pc, #316]	; (8001a80 <EXTI_Init+0x2c8>)
 8001942:	4293      	cmp	r3, r2
 8001944:	f040 82b5 	bne.w	8001eb2 <EXTI_Init+0x6fa>
 8001948:	4b49      	ldr	r3, [pc, #292]	; (8001a70 <EXTI_Init+0x2b8>)
 800194a:	689b      	ldr	r3, [r3, #8]
 800194c:	4a48      	ldr	r2, [pc, #288]	; (8001a70 <EXTI_Init+0x2b8>)
 800194e:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001952:	6093      	str	r3, [r2, #8]
			break;
 8001954:	e2ad      	b.n	8001eb2 <EXTI_Init+0x6fa>
		case PIN_3:
			AFIO->EXTICR1 &=~(0b1111<<12);
 8001956:	4b46      	ldr	r3, [pc, #280]	; (8001a70 <EXTI_Init+0x2b8>)
 8001958:	689b      	ldr	r3, [r3, #8]
 800195a:	4a45      	ldr	r2, [pc, #276]	; (8001a70 <EXTI_Init+0x2b8>)
 800195c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001960:	6093      	str	r3, [r2, #8]
			if(PORTx==GPIOA)     {AFIO->EXTICR1 &=~(0b1111<<12);}
 8001962:	68fb      	ldr	r3, [r7, #12]
 8001964:	4a43      	ldr	r2, [pc, #268]	; (8001a74 <EXTI_Init+0x2bc>)
 8001966:	4293      	cmp	r3, r2
 8001968:	d106      	bne.n	8001978 <EXTI_Init+0x1c0>
 800196a:	4b41      	ldr	r3, [pc, #260]	; (8001a70 <EXTI_Init+0x2b8>)
 800196c:	689b      	ldr	r3, [r3, #8]
 800196e:	4a40      	ldr	r2, [pc, #256]	; (8001a70 <EXTI_Init+0x2b8>)
 8001970:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001974:	6093      	str	r3, [r2, #8]
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<12);}

			break;
 8001976:	e29e      	b.n	8001eb6 <EXTI_Init+0x6fe>
			else if(PORTx==GPIOB){AFIO->EXTICR1 |= (0b0001<<12);}
 8001978:	68fb      	ldr	r3, [r7, #12]
 800197a:	4a3f      	ldr	r2, [pc, #252]	; (8001a78 <EXTI_Init+0x2c0>)
 800197c:	4293      	cmp	r3, r2
 800197e:	d106      	bne.n	800198e <EXTI_Init+0x1d6>
 8001980:	4b3b      	ldr	r3, [pc, #236]	; (8001a70 <EXTI_Init+0x2b8>)
 8001982:	689b      	ldr	r3, [r3, #8]
 8001984:	4a3a      	ldr	r2, [pc, #232]	; (8001a70 <EXTI_Init+0x2b8>)
 8001986:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800198a:	6093      	str	r3, [r2, #8]
			break;
 800198c:	e293      	b.n	8001eb6 <EXTI_Init+0x6fe>
			else if(PORTx==GPIOC){AFIO->EXTICR1 |= (0b0010<<12);}
 800198e:	68fb      	ldr	r3, [r7, #12]
 8001990:	4a3a      	ldr	r2, [pc, #232]	; (8001a7c <EXTI_Init+0x2c4>)
 8001992:	4293      	cmp	r3, r2
 8001994:	d106      	bne.n	80019a4 <EXTI_Init+0x1ec>
 8001996:	4b36      	ldr	r3, [pc, #216]	; (8001a70 <EXTI_Init+0x2b8>)
 8001998:	689b      	ldr	r3, [r3, #8]
 800199a:	4a35      	ldr	r2, [pc, #212]	; (8001a70 <EXTI_Init+0x2b8>)
 800199c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 80019a0:	6093      	str	r3, [r2, #8]
			break;
 80019a2:	e288      	b.n	8001eb6 <EXTI_Init+0x6fe>
			else if(PORTx==GPIOD){AFIO->EXTICR1 |= (0b0011<<12);}
 80019a4:	68fb      	ldr	r3, [r7, #12]
 80019a6:	4a36      	ldr	r2, [pc, #216]	; (8001a80 <EXTI_Init+0x2c8>)
 80019a8:	4293      	cmp	r3, r2
 80019aa:	f040 8284 	bne.w	8001eb6 <EXTI_Init+0x6fe>
 80019ae:	4b30      	ldr	r3, [pc, #192]	; (8001a70 <EXTI_Init+0x2b8>)
 80019b0:	689b      	ldr	r3, [r3, #8]
 80019b2:	4a2f      	ldr	r2, [pc, #188]	; (8001a70 <EXTI_Init+0x2b8>)
 80019b4:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 80019b8:	6093      	str	r3, [r2, #8]
			break;
 80019ba:	e27c      	b.n	8001eb6 <EXTI_Init+0x6fe>
			//			0000: PA[x] pin
			//			0001: PB[x] pin
			//			0010: PC[x] pin
			//			0011: PD[x] pin
		case PIN_4:
			AFIO->EXTICR2 &=~(0b1111<<0);
 80019bc:	4b2c      	ldr	r3, [pc, #176]	; (8001a70 <EXTI_Init+0x2b8>)
 80019be:	68db      	ldr	r3, [r3, #12]
 80019c0:	4a2b      	ldr	r2, [pc, #172]	; (8001a70 <EXTI_Init+0x2b8>)
 80019c2:	f023 030f 	bic.w	r3, r3, #15
 80019c6:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->EXTICR2 &=~(0b1111<<0);}
 80019c8:	68fb      	ldr	r3, [r7, #12]
 80019ca:	4a2a      	ldr	r2, [pc, #168]	; (8001a74 <EXTI_Init+0x2bc>)
 80019cc:	4293      	cmp	r3, r2
 80019ce:	d106      	bne.n	80019de <EXTI_Init+0x226>
 80019d0:	4b27      	ldr	r3, [pc, #156]	; (8001a70 <EXTI_Init+0x2b8>)
 80019d2:	68db      	ldr	r3, [r3, #12]
 80019d4:	4a26      	ldr	r2, [pc, #152]	; (8001a70 <EXTI_Init+0x2b8>)
 80019d6:	f023 030f 	bic.w	r3, r3, #15
 80019da:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<0);}

			break;
 80019dc:	e26d      	b.n	8001eba <EXTI_Init+0x702>
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<0);}
 80019de:	68fb      	ldr	r3, [r7, #12]
 80019e0:	4a25      	ldr	r2, [pc, #148]	; (8001a78 <EXTI_Init+0x2c0>)
 80019e2:	4293      	cmp	r3, r2
 80019e4:	d106      	bne.n	80019f4 <EXTI_Init+0x23c>
 80019e6:	4b22      	ldr	r3, [pc, #136]	; (8001a70 <EXTI_Init+0x2b8>)
 80019e8:	68db      	ldr	r3, [r3, #12]
 80019ea:	4a21      	ldr	r2, [pc, #132]	; (8001a70 <EXTI_Init+0x2b8>)
 80019ec:	f043 0301 	orr.w	r3, r3, #1
 80019f0:	60d3      	str	r3, [r2, #12]
			break;
 80019f2:	e262      	b.n	8001eba <EXTI_Init+0x702>
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<0);}
 80019f4:	68fb      	ldr	r3, [r7, #12]
 80019f6:	4a21      	ldr	r2, [pc, #132]	; (8001a7c <EXTI_Init+0x2c4>)
 80019f8:	4293      	cmp	r3, r2
 80019fa:	d106      	bne.n	8001a0a <EXTI_Init+0x252>
 80019fc:	4b1c      	ldr	r3, [pc, #112]	; (8001a70 <EXTI_Init+0x2b8>)
 80019fe:	68db      	ldr	r3, [r3, #12]
 8001a00:	4a1b      	ldr	r2, [pc, #108]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a02:	f043 0302 	orr.w	r3, r3, #2
 8001a06:	60d3      	str	r3, [r2, #12]
			break;
 8001a08:	e257      	b.n	8001eba <EXTI_Init+0x702>
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<0);}
 8001a0a:	68fb      	ldr	r3, [r7, #12]
 8001a0c:	4a1c      	ldr	r2, [pc, #112]	; (8001a80 <EXTI_Init+0x2c8>)
 8001a0e:	4293      	cmp	r3, r2
 8001a10:	f040 8253 	bne.w	8001eba <EXTI_Init+0x702>
 8001a14:	4b16      	ldr	r3, [pc, #88]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a16:	68db      	ldr	r3, [r3, #12]
 8001a18:	4a15      	ldr	r2, [pc, #84]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a1a:	f043 0303 	orr.w	r3, r3, #3
 8001a1e:	60d3      	str	r3, [r2, #12]
			break;
 8001a20:	e24b      	b.n	8001eba <EXTI_Init+0x702>
		case PIN_5:
			AFIO->EXTICR2 &=~(0b1111<<4);
 8001a22:	4b13      	ldr	r3, [pc, #76]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a24:	68db      	ldr	r3, [r3, #12]
 8001a26:	4a12      	ldr	r2, [pc, #72]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a28:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001a2c:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->EXTICR2 &=~(0b1111<<4);}
 8001a2e:	68fb      	ldr	r3, [r7, #12]
 8001a30:	4a10      	ldr	r2, [pc, #64]	; (8001a74 <EXTI_Init+0x2bc>)
 8001a32:	4293      	cmp	r3, r2
 8001a34:	d106      	bne.n	8001a44 <EXTI_Init+0x28c>
 8001a36:	4b0e      	ldr	r3, [pc, #56]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a38:	68db      	ldr	r3, [r3, #12]
 8001a3a:	4a0d      	ldr	r2, [pc, #52]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a3c:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001a40:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<4);}

			break;
 8001a42:	e23c      	b.n	8001ebe <EXTI_Init+0x706>
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<4);}
 8001a44:	68fb      	ldr	r3, [r7, #12]
 8001a46:	4a0c      	ldr	r2, [pc, #48]	; (8001a78 <EXTI_Init+0x2c0>)
 8001a48:	4293      	cmp	r3, r2
 8001a4a:	d106      	bne.n	8001a5a <EXTI_Init+0x2a2>
 8001a4c:	4b08      	ldr	r3, [pc, #32]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a4e:	68db      	ldr	r3, [r3, #12]
 8001a50:	4a07      	ldr	r2, [pc, #28]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a52:	f043 0310 	orr.w	r3, r3, #16
 8001a56:	60d3      	str	r3, [r2, #12]
			break;
 8001a58:	e231      	b.n	8001ebe <EXTI_Init+0x706>
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<4);}
 8001a5a:	68fb      	ldr	r3, [r7, #12]
 8001a5c:	4a07      	ldr	r2, [pc, #28]	; (8001a7c <EXTI_Init+0x2c4>)
 8001a5e:	4293      	cmp	r3, r2
 8001a60:	d110      	bne.n	8001a84 <EXTI_Init+0x2cc>
 8001a62:	4b03      	ldr	r3, [pc, #12]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a64:	68db      	ldr	r3, [r3, #12]
 8001a66:	4a02      	ldr	r2, [pc, #8]	; (8001a70 <EXTI_Init+0x2b8>)
 8001a68:	f043 0320 	orr.w	r3, r3, #32
 8001a6c:	60d3      	str	r3, [r2, #12]
			break;
 8001a6e:	e226      	b.n	8001ebe <EXTI_Init+0x706>
 8001a70:	40010000 	.word	0x40010000
 8001a74:	40010800 	.word	0x40010800
 8001a78:	40010c00 	.word	0x40010c00
 8001a7c:	40011000 	.word	0x40011000
 8001a80:	40011400 	.word	0x40011400
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<4);}
 8001a84:	68fb      	ldr	r3, [r7, #12]
 8001a86:	4a93      	ldr	r2, [pc, #588]	; (8001cd4 <EXTI_Init+0x51c>)
 8001a88:	4293      	cmp	r3, r2
 8001a8a:	f040 8218 	bne.w	8001ebe <EXTI_Init+0x706>
 8001a8e:	4b92      	ldr	r3, [pc, #584]	; (8001cd8 <EXTI_Init+0x520>)
 8001a90:	68db      	ldr	r3, [r3, #12]
 8001a92:	4a91      	ldr	r2, [pc, #580]	; (8001cd8 <EXTI_Init+0x520>)
 8001a94:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001a98:	60d3      	str	r3, [r2, #12]
			break;
 8001a9a:	e210      	b.n	8001ebe <EXTI_Init+0x706>
		case PIN_6:
			AFIO->EXTICR2 &=~(0b1111<<8);
 8001a9c:	4b8e      	ldr	r3, [pc, #568]	; (8001cd8 <EXTI_Init+0x520>)
 8001a9e:	68db      	ldr	r3, [r3, #12]
 8001aa0:	4a8d      	ldr	r2, [pc, #564]	; (8001cd8 <EXTI_Init+0x520>)
 8001aa2:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001aa6:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->EXTICR2 &=~(0b1111<<8);}
 8001aa8:	68fb      	ldr	r3, [r7, #12]
 8001aaa:	4a8c      	ldr	r2, [pc, #560]	; (8001cdc <EXTI_Init+0x524>)
 8001aac:	4293      	cmp	r3, r2
 8001aae:	d106      	bne.n	8001abe <EXTI_Init+0x306>
 8001ab0:	4b89      	ldr	r3, [pc, #548]	; (8001cd8 <EXTI_Init+0x520>)
 8001ab2:	68db      	ldr	r3, [r3, #12]
 8001ab4:	4a88      	ldr	r2, [pc, #544]	; (8001cd8 <EXTI_Init+0x520>)
 8001ab6:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001aba:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<8);}

			break;
 8001abc:	e201      	b.n	8001ec2 <EXTI_Init+0x70a>
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<8);}
 8001abe:	68fb      	ldr	r3, [r7, #12]
 8001ac0:	4a87      	ldr	r2, [pc, #540]	; (8001ce0 <EXTI_Init+0x528>)
 8001ac2:	4293      	cmp	r3, r2
 8001ac4:	d106      	bne.n	8001ad4 <EXTI_Init+0x31c>
 8001ac6:	4b84      	ldr	r3, [pc, #528]	; (8001cd8 <EXTI_Init+0x520>)
 8001ac8:	68db      	ldr	r3, [r3, #12]
 8001aca:	4a83      	ldr	r2, [pc, #524]	; (8001cd8 <EXTI_Init+0x520>)
 8001acc:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001ad0:	60d3      	str	r3, [r2, #12]
			break;
 8001ad2:	e1f6      	b.n	8001ec2 <EXTI_Init+0x70a>
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<8);}
 8001ad4:	68fb      	ldr	r3, [r7, #12]
 8001ad6:	4a83      	ldr	r2, [pc, #524]	; (8001ce4 <EXTI_Init+0x52c>)
 8001ad8:	4293      	cmp	r3, r2
 8001ada:	d106      	bne.n	8001aea <EXTI_Init+0x332>
 8001adc:	4b7e      	ldr	r3, [pc, #504]	; (8001cd8 <EXTI_Init+0x520>)
 8001ade:	68db      	ldr	r3, [r3, #12]
 8001ae0:	4a7d      	ldr	r2, [pc, #500]	; (8001cd8 <EXTI_Init+0x520>)
 8001ae2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001ae6:	60d3      	str	r3, [r2, #12]
			break;
 8001ae8:	e1eb      	b.n	8001ec2 <EXTI_Init+0x70a>
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<8);}
 8001aea:	68fb      	ldr	r3, [r7, #12]
 8001aec:	4a79      	ldr	r2, [pc, #484]	; (8001cd4 <EXTI_Init+0x51c>)
 8001aee:	4293      	cmp	r3, r2
 8001af0:	f040 81e7 	bne.w	8001ec2 <EXTI_Init+0x70a>
 8001af4:	4b78      	ldr	r3, [pc, #480]	; (8001cd8 <EXTI_Init+0x520>)
 8001af6:	68db      	ldr	r3, [r3, #12]
 8001af8:	4a77      	ldr	r2, [pc, #476]	; (8001cd8 <EXTI_Init+0x520>)
 8001afa:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001afe:	60d3      	str	r3, [r2, #12]
			break;
 8001b00:	e1df      	b.n	8001ec2 <EXTI_Init+0x70a>
		case PIN_7:
			AFIO->EXTICR2 &=~(0b1111<<12);
 8001b02:	4b75      	ldr	r3, [pc, #468]	; (8001cd8 <EXTI_Init+0x520>)
 8001b04:	68db      	ldr	r3, [r3, #12]
 8001b06:	4a74      	ldr	r2, [pc, #464]	; (8001cd8 <EXTI_Init+0x520>)
 8001b08:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001b0c:	60d3      	str	r3, [r2, #12]
			if(PORTx==GPIOA)     {AFIO->EXTICR2 &=~(0b1111<<12);}
 8001b0e:	68fb      	ldr	r3, [r7, #12]
 8001b10:	4a72      	ldr	r2, [pc, #456]	; (8001cdc <EXTI_Init+0x524>)
 8001b12:	4293      	cmp	r3, r2
 8001b14:	d106      	bne.n	8001b24 <EXTI_Init+0x36c>
 8001b16:	4b70      	ldr	r3, [pc, #448]	; (8001cd8 <EXTI_Init+0x520>)
 8001b18:	68db      	ldr	r3, [r3, #12]
 8001b1a:	4a6f      	ldr	r2, [pc, #444]	; (8001cd8 <EXTI_Init+0x520>)
 8001b1c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001b20:	60d3      	str	r3, [r2, #12]
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<12);}

			break;
 8001b22:	e1d0      	b.n	8001ec6 <EXTI_Init+0x70e>
			else if(PORTx==GPIOB){AFIO->EXTICR2 |= (0b0001<<12);}
 8001b24:	68fb      	ldr	r3, [r7, #12]
 8001b26:	4a6e      	ldr	r2, [pc, #440]	; (8001ce0 <EXTI_Init+0x528>)
 8001b28:	4293      	cmp	r3, r2
 8001b2a:	d106      	bne.n	8001b3a <EXTI_Init+0x382>
 8001b2c:	4b6a      	ldr	r3, [pc, #424]	; (8001cd8 <EXTI_Init+0x520>)
 8001b2e:	68db      	ldr	r3, [r3, #12]
 8001b30:	4a69      	ldr	r2, [pc, #420]	; (8001cd8 <EXTI_Init+0x520>)
 8001b32:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001b36:	60d3      	str	r3, [r2, #12]
			break;
 8001b38:	e1c5      	b.n	8001ec6 <EXTI_Init+0x70e>
			else if(PORTx==GPIOC){AFIO->EXTICR2 |= (0b0010<<12);}
 8001b3a:	68fb      	ldr	r3, [r7, #12]
 8001b3c:	4a69      	ldr	r2, [pc, #420]	; (8001ce4 <EXTI_Init+0x52c>)
 8001b3e:	4293      	cmp	r3, r2
 8001b40:	d106      	bne.n	8001b50 <EXTI_Init+0x398>
 8001b42:	4b65      	ldr	r3, [pc, #404]	; (8001cd8 <EXTI_Init+0x520>)
 8001b44:	68db      	ldr	r3, [r3, #12]
 8001b46:	4a64      	ldr	r2, [pc, #400]	; (8001cd8 <EXTI_Init+0x520>)
 8001b48:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001b4c:	60d3      	str	r3, [r2, #12]
			break;
 8001b4e:	e1ba      	b.n	8001ec6 <EXTI_Init+0x70e>
			else if(PORTx==GPIOD){AFIO->EXTICR2 |= (0b0011<<12);}
 8001b50:	68fb      	ldr	r3, [r7, #12]
 8001b52:	4a60      	ldr	r2, [pc, #384]	; (8001cd4 <EXTI_Init+0x51c>)
 8001b54:	4293      	cmp	r3, r2
 8001b56:	f040 81b6 	bne.w	8001ec6 <EXTI_Init+0x70e>
 8001b5a:	4b5f      	ldr	r3, [pc, #380]	; (8001cd8 <EXTI_Init+0x520>)
 8001b5c:	68db      	ldr	r3, [r3, #12]
 8001b5e:	4a5e      	ldr	r2, [pc, #376]	; (8001cd8 <EXTI_Init+0x520>)
 8001b60:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001b64:	60d3      	str	r3, [r2, #12]
			break;
 8001b66:	e1ae      	b.n	8001ec6 <EXTI_Init+0x70e>
			//			0000: PA[x] PIN_
			//			0001: PB[x] pin
			//			0010: PC[x] pin
			//			0011: PD[x] pin
		case PIN_8:
			AFIO->EXTICR3 &=~(0b1111<<0);
 8001b68:	4b5b      	ldr	r3, [pc, #364]	; (8001cd8 <EXTI_Init+0x520>)
 8001b6a:	691b      	ldr	r3, [r3, #16]
 8001b6c:	4a5a      	ldr	r2, [pc, #360]	; (8001cd8 <EXTI_Init+0x520>)
 8001b6e:	f023 030f 	bic.w	r3, r3, #15
 8001b72:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->EXTICR3 &=~(0b1111<<0);}
 8001b74:	68fb      	ldr	r3, [r7, #12]
 8001b76:	4a59      	ldr	r2, [pc, #356]	; (8001cdc <EXTI_Init+0x524>)
 8001b78:	4293      	cmp	r3, r2
 8001b7a:	d106      	bne.n	8001b8a <EXTI_Init+0x3d2>
 8001b7c:	4b56      	ldr	r3, [pc, #344]	; (8001cd8 <EXTI_Init+0x520>)
 8001b7e:	691b      	ldr	r3, [r3, #16]
 8001b80:	4a55      	ldr	r2, [pc, #340]	; (8001cd8 <EXTI_Init+0x520>)
 8001b82:	f023 030f 	bic.w	r3, r3, #15
 8001b86:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<0);}

			break;
 8001b88:	e19f      	b.n	8001eca <EXTI_Init+0x712>
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<0);}
 8001b8a:	68fb      	ldr	r3, [r7, #12]
 8001b8c:	4a54      	ldr	r2, [pc, #336]	; (8001ce0 <EXTI_Init+0x528>)
 8001b8e:	4293      	cmp	r3, r2
 8001b90:	d106      	bne.n	8001ba0 <EXTI_Init+0x3e8>
 8001b92:	4b51      	ldr	r3, [pc, #324]	; (8001cd8 <EXTI_Init+0x520>)
 8001b94:	691b      	ldr	r3, [r3, #16]
 8001b96:	4a50      	ldr	r2, [pc, #320]	; (8001cd8 <EXTI_Init+0x520>)
 8001b98:	f043 0301 	orr.w	r3, r3, #1
 8001b9c:	6113      	str	r3, [r2, #16]
			break;
 8001b9e:	e194      	b.n	8001eca <EXTI_Init+0x712>
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<0);}
 8001ba0:	68fb      	ldr	r3, [r7, #12]
 8001ba2:	4a50      	ldr	r2, [pc, #320]	; (8001ce4 <EXTI_Init+0x52c>)
 8001ba4:	4293      	cmp	r3, r2
 8001ba6:	d106      	bne.n	8001bb6 <EXTI_Init+0x3fe>
 8001ba8:	4b4b      	ldr	r3, [pc, #300]	; (8001cd8 <EXTI_Init+0x520>)
 8001baa:	691b      	ldr	r3, [r3, #16]
 8001bac:	4a4a      	ldr	r2, [pc, #296]	; (8001cd8 <EXTI_Init+0x520>)
 8001bae:	f043 0302 	orr.w	r3, r3, #2
 8001bb2:	6113      	str	r3, [r2, #16]
			break;
 8001bb4:	e189      	b.n	8001eca <EXTI_Init+0x712>
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<0);}
 8001bb6:	68fb      	ldr	r3, [r7, #12]
 8001bb8:	4a46      	ldr	r2, [pc, #280]	; (8001cd4 <EXTI_Init+0x51c>)
 8001bba:	4293      	cmp	r3, r2
 8001bbc:	f040 8185 	bne.w	8001eca <EXTI_Init+0x712>
 8001bc0:	4b45      	ldr	r3, [pc, #276]	; (8001cd8 <EXTI_Init+0x520>)
 8001bc2:	691b      	ldr	r3, [r3, #16]
 8001bc4:	4a44      	ldr	r2, [pc, #272]	; (8001cd8 <EXTI_Init+0x520>)
 8001bc6:	f043 0303 	orr.w	r3, r3, #3
 8001bca:	6113      	str	r3, [r2, #16]
			break;
 8001bcc:	e17d      	b.n	8001eca <EXTI_Init+0x712>
		case PIN_9:
			AFIO->EXTICR3 &=~(0b1111<<4);
 8001bce:	4b42      	ldr	r3, [pc, #264]	; (8001cd8 <EXTI_Init+0x520>)
 8001bd0:	691b      	ldr	r3, [r3, #16]
 8001bd2:	4a41      	ldr	r2, [pc, #260]	; (8001cd8 <EXTI_Init+0x520>)
 8001bd4:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001bd8:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->EXTICR3 &=~(0b1111<<4);}
 8001bda:	68fb      	ldr	r3, [r7, #12]
 8001bdc:	4a3f      	ldr	r2, [pc, #252]	; (8001cdc <EXTI_Init+0x524>)
 8001bde:	4293      	cmp	r3, r2
 8001be0:	d106      	bne.n	8001bf0 <EXTI_Init+0x438>
 8001be2:	4b3d      	ldr	r3, [pc, #244]	; (8001cd8 <EXTI_Init+0x520>)
 8001be4:	691b      	ldr	r3, [r3, #16]
 8001be6:	4a3c      	ldr	r2, [pc, #240]	; (8001cd8 <EXTI_Init+0x520>)
 8001be8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001bec:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<4);}

			break;
 8001bee:	e16e      	b.n	8001ece <EXTI_Init+0x716>
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<4);}
 8001bf0:	68fb      	ldr	r3, [r7, #12]
 8001bf2:	4a3b      	ldr	r2, [pc, #236]	; (8001ce0 <EXTI_Init+0x528>)
 8001bf4:	4293      	cmp	r3, r2
 8001bf6:	d106      	bne.n	8001c06 <EXTI_Init+0x44e>
 8001bf8:	4b37      	ldr	r3, [pc, #220]	; (8001cd8 <EXTI_Init+0x520>)
 8001bfa:	691b      	ldr	r3, [r3, #16]
 8001bfc:	4a36      	ldr	r2, [pc, #216]	; (8001cd8 <EXTI_Init+0x520>)
 8001bfe:	f043 0310 	orr.w	r3, r3, #16
 8001c02:	6113      	str	r3, [r2, #16]
			break;
 8001c04:	e163      	b.n	8001ece <EXTI_Init+0x716>
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<4);}
 8001c06:	68fb      	ldr	r3, [r7, #12]
 8001c08:	4a36      	ldr	r2, [pc, #216]	; (8001ce4 <EXTI_Init+0x52c>)
 8001c0a:	4293      	cmp	r3, r2
 8001c0c:	d106      	bne.n	8001c1c <EXTI_Init+0x464>
 8001c0e:	4b32      	ldr	r3, [pc, #200]	; (8001cd8 <EXTI_Init+0x520>)
 8001c10:	691b      	ldr	r3, [r3, #16]
 8001c12:	4a31      	ldr	r2, [pc, #196]	; (8001cd8 <EXTI_Init+0x520>)
 8001c14:	f043 0320 	orr.w	r3, r3, #32
 8001c18:	6113      	str	r3, [r2, #16]
			break;
 8001c1a:	e158      	b.n	8001ece <EXTI_Init+0x716>
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<4);}
 8001c1c:	68fb      	ldr	r3, [r7, #12]
 8001c1e:	4a2d      	ldr	r2, [pc, #180]	; (8001cd4 <EXTI_Init+0x51c>)
 8001c20:	4293      	cmp	r3, r2
 8001c22:	f040 8154 	bne.w	8001ece <EXTI_Init+0x716>
 8001c26:	4b2c      	ldr	r3, [pc, #176]	; (8001cd8 <EXTI_Init+0x520>)
 8001c28:	691b      	ldr	r3, [r3, #16]
 8001c2a:	4a2b      	ldr	r2, [pc, #172]	; (8001cd8 <EXTI_Init+0x520>)
 8001c2c:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001c30:	6113      	str	r3, [r2, #16]
			break;
 8001c32:	e14c      	b.n	8001ece <EXTI_Init+0x716>
		case PIN_10:
			AFIO->EXTICR3 &=~(0b1111<<8);
 8001c34:	4b28      	ldr	r3, [pc, #160]	; (8001cd8 <EXTI_Init+0x520>)
 8001c36:	691b      	ldr	r3, [r3, #16]
 8001c38:	4a27      	ldr	r2, [pc, #156]	; (8001cd8 <EXTI_Init+0x520>)
 8001c3a:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001c3e:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->EXTICR3 &=~(0b1111<<8);}
 8001c40:	68fb      	ldr	r3, [r7, #12]
 8001c42:	4a26      	ldr	r2, [pc, #152]	; (8001cdc <EXTI_Init+0x524>)
 8001c44:	4293      	cmp	r3, r2
 8001c46:	d106      	bne.n	8001c56 <EXTI_Init+0x49e>
 8001c48:	4b23      	ldr	r3, [pc, #140]	; (8001cd8 <EXTI_Init+0x520>)
 8001c4a:	691b      	ldr	r3, [r3, #16]
 8001c4c:	4a22      	ldr	r2, [pc, #136]	; (8001cd8 <EXTI_Init+0x520>)
 8001c4e:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001c52:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<8);}

			break;
 8001c54:	e13d      	b.n	8001ed2 <EXTI_Init+0x71a>
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<8);}
 8001c56:	68fb      	ldr	r3, [r7, #12]
 8001c58:	4a21      	ldr	r2, [pc, #132]	; (8001ce0 <EXTI_Init+0x528>)
 8001c5a:	4293      	cmp	r3, r2
 8001c5c:	d106      	bne.n	8001c6c <EXTI_Init+0x4b4>
 8001c5e:	4b1e      	ldr	r3, [pc, #120]	; (8001cd8 <EXTI_Init+0x520>)
 8001c60:	691b      	ldr	r3, [r3, #16]
 8001c62:	4a1d      	ldr	r2, [pc, #116]	; (8001cd8 <EXTI_Init+0x520>)
 8001c64:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001c68:	6113      	str	r3, [r2, #16]
			break;
 8001c6a:	e132      	b.n	8001ed2 <EXTI_Init+0x71a>
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<8);}
 8001c6c:	68fb      	ldr	r3, [r7, #12]
 8001c6e:	4a1d      	ldr	r2, [pc, #116]	; (8001ce4 <EXTI_Init+0x52c>)
 8001c70:	4293      	cmp	r3, r2
 8001c72:	d106      	bne.n	8001c82 <EXTI_Init+0x4ca>
 8001c74:	4b18      	ldr	r3, [pc, #96]	; (8001cd8 <EXTI_Init+0x520>)
 8001c76:	691b      	ldr	r3, [r3, #16]
 8001c78:	4a17      	ldr	r2, [pc, #92]	; (8001cd8 <EXTI_Init+0x520>)
 8001c7a:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001c7e:	6113      	str	r3, [r2, #16]
			break;
 8001c80:	e127      	b.n	8001ed2 <EXTI_Init+0x71a>
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<8);}
 8001c82:	68fb      	ldr	r3, [r7, #12]
 8001c84:	4a13      	ldr	r2, [pc, #76]	; (8001cd4 <EXTI_Init+0x51c>)
 8001c86:	4293      	cmp	r3, r2
 8001c88:	f040 8123 	bne.w	8001ed2 <EXTI_Init+0x71a>
 8001c8c:	4b12      	ldr	r3, [pc, #72]	; (8001cd8 <EXTI_Init+0x520>)
 8001c8e:	691b      	ldr	r3, [r3, #16]
 8001c90:	4a11      	ldr	r2, [pc, #68]	; (8001cd8 <EXTI_Init+0x520>)
 8001c92:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001c96:	6113      	str	r3, [r2, #16]
			break;
 8001c98:	e11b      	b.n	8001ed2 <EXTI_Init+0x71a>
		case PIN_11:
			AFIO->EXTICR3 &=~(0b1111<<12);
 8001c9a:	4b0f      	ldr	r3, [pc, #60]	; (8001cd8 <EXTI_Init+0x520>)
 8001c9c:	691b      	ldr	r3, [r3, #16]
 8001c9e:	4a0e      	ldr	r2, [pc, #56]	; (8001cd8 <EXTI_Init+0x520>)
 8001ca0:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001ca4:	6113      	str	r3, [r2, #16]
			if(PORTx==GPIOA)     {AFIO->EXTICR3 &=~(0b1111<<12);}
 8001ca6:	68fb      	ldr	r3, [r7, #12]
 8001ca8:	4a0c      	ldr	r2, [pc, #48]	; (8001cdc <EXTI_Init+0x524>)
 8001caa:	4293      	cmp	r3, r2
 8001cac:	d106      	bne.n	8001cbc <EXTI_Init+0x504>
 8001cae:	4b0a      	ldr	r3, [pc, #40]	; (8001cd8 <EXTI_Init+0x520>)
 8001cb0:	691b      	ldr	r3, [r3, #16]
 8001cb2:	4a09      	ldr	r2, [pc, #36]	; (8001cd8 <EXTI_Init+0x520>)
 8001cb4:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001cb8:	6113      	str	r3, [r2, #16]
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<12);}

			break;
 8001cba:	e10c      	b.n	8001ed6 <EXTI_Init+0x71e>
			else if(PORTx==GPIOB){AFIO->EXTICR3 |= (0b0001<<12);}
 8001cbc:	68fb      	ldr	r3, [r7, #12]
 8001cbe:	4a08      	ldr	r2, [pc, #32]	; (8001ce0 <EXTI_Init+0x528>)
 8001cc0:	4293      	cmp	r3, r2
 8001cc2:	d111      	bne.n	8001ce8 <EXTI_Init+0x530>
 8001cc4:	4b04      	ldr	r3, [pc, #16]	; (8001cd8 <EXTI_Init+0x520>)
 8001cc6:	691b      	ldr	r3, [r3, #16]
 8001cc8:	4a03      	ldr	r2, [pc, #12]	; (8001cd8 <EXTI_Init+0x520>)
 8001cca:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001cce:	6113      	str	r3, [r2, #16]
			break;
 8001cd0:	e101      	b.n	8001ed6 <EXTI_Init+0x71e>
 8001cd2:	bf00      	nop
 8001cd4:	40011400 	.word	0x40011400
 8001cd8:	40010000 	.word	0x40010000
 8001cdc:	40010800 	.word	0x40010800
 8001ce0:	40010c00 	.word	0x40010c00
 8001ce4:	40011000 	.word	0x40011000
			else if(PORTx==GPIOC){AFIO->EXTICR3 |= (0b0010<<12);}
 8001ce8:	68fb      	ldr	r3, [r7, #12]
 8001cea:	4a98      	ldr	r2, [pc, #608]	; (8001f4c <EXTI_Init+0x794>)
 8001cec:	4293      	cmp	r3, r2
 8001cee:	d106      	bne.n	8001cfe <EXTI_Init+0x546>
 8001cf0:	4b97      	ldr	r3, [pc, #604]	; (8001f50 <EXTI_Init+0x798>)
 8001cf2:	691b      	ldr	r3, [r3, #16]
 8001cf4:	4a96      	ldr	r2, [pc, #600]	; (8001f50 <EXTI_Init+0x798>)
 8001cf6:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001cfa:	6113      	str	r3, [r2, #16]
			break;
 8001cfc:	e0eb      	b.n	8001ed6 <EXTI_Init+0x71e>
			else if(PORTx==GPIOD){AFIO->EXTICR3 |= (0b0011<<12);}
 8001cfe:	68fb      	ldr	r3, [r7, #12]
 8001d00:	4a94      	ldr	r2, [pc, #592]	; (8001f54 <EXTI_Init+0x79c>)
 8001d02:	4293      	cmp	r3, r2
 8001d04:	f040 80e7 	bne.w	8001ed6 <EXTI_Init+0x71e>
 8001d08:	4b91      	ldr	r3, [pc, #580]	; (8001f50 <EXTI_Init+0x798>)
 8001d0a:	691b      	ldr	r3, [r3, #16]
 8001d0c:	4a90      	ldr	r2, [pc, #576]	; (8001f50 <EXTI_Init+0x798>)
 8001d0e:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001d12:	6113      	str	r3, [r2, #16]
			break;
 8001d14:	e0df      	b.n	8001ed6 <EXTI_Init+0x71e>
			//			0000: PA[x] pin
			//			0001: PB[x] pin
			//			0010: PC[x] pin
			//			0011: PD[x] pin
		case PIN_12:
			AFIO->EXTICR4 &=~(0b1111<<0);
 8001d16:	4b8e      	ldr	r3, [pc, #568]	; (8001f50 <EXTI_Init+0x798>)
 8001d18:	695b      	ldr	r3, [r3, #20]
 8001d1a:	4a8d      	ldr	r2, [pc, #564]	; (8001f50 <EXTI_Init+0x798>)
 8001d1c:	f023 030f 	bic.w	r3, r3, #15
 8001d20:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->EXTICR4 &=~(0b1111<<0);}
 8001d22:	68fb      	ldr	r3, [r7, #12]
 8001d24:	4a8c      	ldr	r2, [pc, #560]	; (8001f58 <EXTI_Init+0x7a0>)
 8001d26:	4293      	cmp	r3, r2
 8001d28:	d106      	bne.n	8001d38 <EXTI_Init+0x580>
 8001d2a:	4b89      	ldr	r3, [pc, #548]	; (8001f50 <EXTI_Init+0x798>)
 8001d2c:	695b      	ldr	r3, [r3, #20]
 8001d2e:	4a88      	ldr	r2, [pc, #544]	; (8001f50 <EXTI_Init+0x798>)
 8001d30:	f023 030f 	bic.w	r3, r3, #15
 8001d34:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<0);}
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<0);}
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<0);}

			break;
 8001d36:	e0d0      	b.n	8001eda <EXTI_Init+0x722>
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<0);}
 8001d38:	68fb      	ldr	r3, [r7, #12]
 8001d3a:	4a88      	ldr	r2, [pc, #544]	; (8001f5c <EXTI_Init+0x7a4>)
 8001d3c:	4293      	cmp	r3, r2
 8001d3e:	d106      	bne.n	8001d4e <EXTI_Init+0x596>
 8001d40:	4b83      	ldr	r3, [pc, #524]	; (8001f50 <EXTI_Init+0x798>)
 8001d42:	695b      	ldr	r3, [r3, #20]
 8001d44:	4a82      	ldr	r2, [pc, #520]	; (8001f50 <EXTI_Init+0x798>)
 8001d46:	f043 0301 	orr.w	r3, r3, #1
 8001d4a:	6153      	str	r3, [r2, #20]
			break;
 8001d4c:	e0c5      	b.n	8001eda <EXTI_Init+0x722>
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<0);}
 8001d4e:	68fb      	ldr	r3, [r7, #12]
 8001d50:	4a7e      	ldr	r2, [pc, #504]	; (8001f4c <EXTI_Init+0x794>)
 8001d52:	4293      	cmp	r3, r2
 8001d54:	d106      	bne.n	8001d64 <EXTI_Init+0x5ac>
 8001d56:	4b7e      	ldr	r3, [pc, #504]	; (8001f50 <EXTI_Init+0x798>)
 8001d58:	695b      	ldr	r3, [r3, #20]
 8001d5a:	4a7d      	ldr	r2, [pc, #500]	; (8001f50 <EXTI_Init+0x798>)
 8001d5c:	f043 0302 	orr.w	r3, r3, #2
 8001d60:	6153      	str	r3, [r2, #20]
			break;
 8001d62:	e0ba      	b.n	8001eda <EXTI_Init+0x722>
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<0);}
 8001d64:	68fb      	ldr	r3, [r7, #12]
 8001d66:	4a7b      	ldr	r2, [pc, #492]	; (8001f54 <EXTI_Init+0x79c>)
 8001d68:	4293      	cmp	r3, r2
 8001d6a:	f040 80b6 	bne.w	8001eda <EXTI_Init+0x722>
 8001d6e:	4b78      	ldr	r3, [pc, #480]	; (8001f50 <EXTI_Init+0x798>)
 8001d70:	695b      	ldr	r3, [r3, #20]
 8001d72:	4a77      	ldr	r2, [pc, #476]	; (8001f50 <EXTI_Init+0x798>)
 8001d74:	f043 0303 	orr.w	r3, r3, #3
 8001d78:	6153      	str	r3, [r2, #20]
			break;
 8001d7a:	e0ae      	b.n	8001eda <EXTI_Init+0x722>
		case PIN_13:
			AFIO->EXTICR4 &=~(0b1111<<4);
 8001d7c:	4b74      	ldr	r3, [pc, #464]	; (8001f50 <EXTI_Init+0x798>)
 8001d7e:	695b      	ldr	r3, [r3, #20]
 8001d80:	4a73      	ldr	r2, [pc, #460]	; (8001f50 <EXTI_Init+0x798>)
 8001d82:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001d86:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->EXTICR4 &=~(0b1111<<4);}
 8001d88:	68fb      	ldr	r3, [r7, #12]
 8001d8a:	4a73      	ldr	r2, [pc, #460]	; (8001f58 <EXTI_Init+0x7a0>)
 8001d8c:	4293      	cmp	r3, r2
 8001d8e:	d106      	bne.n	8001d9e <EXTI_Init+0x5e6>
 8001d90:	4b6f      	ldr	r3, [pc, #444]	; (8001f50 <EXTI_Init+0x798>)
 8001d92:	695b      	ldr	r3, [r3, #20]
 8001d94:	4a6e      	ldr	r2, [pc, #440]	; (8001f50 <EXTI_Init+0x798>)
 8001d96:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8001d9a:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<4);}
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<4);}
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<4);}

			break;
 8001d9c:	e09f      	b.n	8001ede <EXTI_Init+0x726>
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<4);}
 8001d9e:	68fb      	ldr	r3, [r7, #12]
 8001da0:	4a6e      	ldr	r2, [pc, #440]	; (8001f5c <EXTI_Init+0x7a4>)
 8001da2:	4293      	cmp	r3, r2
 8001da4:	d106      	bne.n	8001db4 <EXTI_Init+0x5fc>
 8001da6:	4b6a      	ldr	r3, [pc, #424]	; (8001f50 <EXTI_Init+0x798>)
 8001da8:	695b      	ldr	r3, [r3, #20]
 8001daa:	4a69      	ldr	r2, [pc, #420]	; (8001f50 <EXTI_Init+0x798>)
 8001dac:	f043 0310 	orr.w	r3, r3, #16
 8001db0:	6153      	str	r3, [r2, #20]
			break;
 8001db2:	e094      	b.n	8001ede <EXTI_Init+0x726>
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<4);}
 8001db4:	68fb      	ldr	r3, [r7, #12]
 8001db6:	4a65      	ldr	r2, [pc, #404]	; (8001f4c <EXTI_Init+0x794>)
 8001db8:	4293      	cmp	r3, r2
 8001dba:	d106      	bne.n	8001dca <EXTI_Init+0x612>
 8001dbc:	4b64      	ldr	r3, [pc, #400]	; (8001f50 <EXTI_Init+0x798>)
 8001dbe:	695b      	ldr	r3, [r3, #20]
 8001dc0:	4a63      	ldr	r2, [pc, #396]	; (8001f50 <EXTI_Init+0x798>)
 8001dc2:	f043 0320 	orr.w	r3, r3, #32
 8001dc6:	6153      	str	r3, [r2, #20]
			break;
 8001dc8:	e089      	b.n	8001ede <EXTI_Init+0x726>
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<4);}
 8001dca:	68fb      	ldr	r3, [r7, #12]
 8001dcc:	4a61      	ldr	r2, [pc, #388]	; (8001f54 <EXTI_Init+0x79c>)
 8001dce:	4293      	cmp	r3, r2
 8001dd0:	f040 8085 	bne.w	8001ede <EXTI_Init+0x726>
 8001dd4:	4b5e      	ldr	r3, [pc, #376]	; (8001f50 <EXTI_Init+0x798>)
 8001dd6:	695b      	ldr	r3, [r3, #20]
 8001dd8:	4a5d      	ldr	r2, [pc, #372]	; (8001f50 <EXTI_Init+0x798>)
 8001dda:	f043 0330 	orr.w	r3, r3, #48	; 0x30
 8001dde:	6153      	str	r3, [r2, #20]
			break;
 8001de0:	e07d      	b.n	8001ede <EXTI_Init+0x726>
		case PIN_14:
			AFIO->EXTICR4 &=~(0b1111<<8);
 8001de2:	4b5b      	ldr	r3, [pc, #364]	; (8001f50 <EXTI_Init+0x798>)
 8001de4:	695b      	ldr	r3, [r3, #20]
 8001de6:	4a5a      	ldr	r2, [pc, #360]	; (8001f50 <EXTI_Init+0x798>)
 8001de8:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001dec:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->EXTICR4 &=~(0b1111<<8);}
 8001dee:	68fb      	ldr	r3, [r7, #12]
 8001df0:	4a59      	ldr	r2, [pc, #356]	; (8001f58 <EXTI_Init+0x7a0>)
 8001df2:	4293      	cmp	r3, r2
 8001df4:	d106      	bne.n	8001e04 <EXTI_Init+0x64c>
 8001df6:	4b56      	ldr	r3, [pc, #344]	; (8001f50 <EXTI_Init+0x798>)
 8001df8:	695b      	ldr	r3, [r3, #20]
 8001dfa:	4a55      	ldr	r2, [pc, #340]	; (8001f50 <EXTI_Init+0x798>)
 8001dfc:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8001e00:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<8);}
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<8);}
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<8);}

			break;
 8001e02:	e06e      	b.n	8001ee2 <EXTI_Init+0x72a>
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<8);}
 8001e04:	68fb      	ldr	r3, [r7, #12]
 8001e06:	4a55      	ldr	r2, [pc, #340]	; (8001f5c <EXTI_Init+0x7a4>)
 8001e08:	4293      	cmp	r3, r2
 8001e0a:	d106      	bne.n	8001e1a <EXTI_Init+0x662>
 8001e0c:	4b50      	ldr	r3, [pc, #320]	; (8001f50 <EXTI_Init+0x798>)
 8001e0e:	695b      	ldr	r3, [r3, #20]
 8001e10:	4a4f      	ldr	r2, [pc, #316]	; (8001f50 <EXTI_Init+0x798>)
 8001e12:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8001e16:	6153      	str	r3, [r2, #20]
			break;
 8001e18:	e063      	b.n	8001ee2 <EXTI_Init+0x72a>
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<8);}
 8001e1a:	68fb      	ldr	r3, [r7, #12]
 8001e1c:	4a4b      	ldr	r2, [pc, #300]	; (8001f4c <EXTI_Init+0x794>)
 8001e1e:	4293      	cmp	r3, r2
 8001e20:	d106      	bne.n	8001e30 <EXTI_Init+0x678>
 8001e22:	4b4b      	ldr	r3, [pc, #300]	; (8001f50 <EXTI_Init+0x798>)
 8001e24:	695b      	ldr	r3, [r3, #20]
 8001e26:	4a4a      	ldr	r2, [pc, #296]	; (8001f50 <EXTI_Init+0x798>)
 8001e28:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8001e2c:	6153      	str	r3, [r2, #20]
			break;
 8001e2e:	e058      	b.n	8001ee2 <EXTI_Init+0x72a>
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<8);}
 8001e30:	68fb      	ldr	r3, [r7, #12]
 8001e32:	4a48      	ldr	r2, [pc, #288]	; (8001f54 <EXTI_Init+0x79c>)
 8001e34:	4293      	cmp	r3, r2
 8001e36:	d154      	bne.n	8001ee2 <EXTI_Init+0x72a>
 8001e38:	4b45      	ldr	r3, [pc, #276]	; (8001f50 <EXTI_Init+0x798>)
 8001e3a:	695b      	ldr	r3, [r3, #20]
 8001e3c:	4a44      	ldr	r2, [pc, #272]	; (8001f50 <EXTI_Init+0x798>)
 8001e3e:	f443 7340 	orr.w	r3, r3, #768	; 0x300
 8001e42:	6153      	str	r3, [r2, #20]
			break;
 8001e44:	e04d      	b.n	8001ee2 <EXTI_Init+0x72a>
		case PIN_15:
			AFIO->EXTICR4 &=~(0b1111<<12);
 8001e46:	4b42      	ldr	r3, [pc, #264]	; (8001f50 <EXTI_Init+0x798>)
 8001e48:	695b      	ldr	r3, [r3, #20]
 8001e4a:	4a41      	ldr	r2, [pc, #260]	; (8001f50 <EXTI_Init+0x798>)
 8001e4c:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001e50:	6153      	str	r3, [r2, #20]
			if(PORTx==GPIOA)     {AFIO->EXTICR4 &=~(0b1111<<12);}
 8001e52:	68fb      	ldr	r3, [r7, #12]
 8001e54:	4a40      	ldr	r2, [pc, #256]	; (8001f58 <EXTI_Init+0x7a0>)
 8001e56:	4293      	cmp	r3, r2
 8001e58:	d106      	bne.n	8001e68 <EXTI_Init+0x6b0>
 8001e5a:	4b3d      	ldr	r3, [pc, #244]	; (8001f50 <EXTI_Init+0x798>)
 8001e5c:	695b      	ldr	r3, [r3, #20]
 8001e5e:	4a3c      	ldr	r2, [pc, #240]	; (8001f50 <EXTI_Init+0x798>)
 8001e60:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 8001e64:	6153      	str	r3, [r2, #20]
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<12);}
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<12);}
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<12);}

			break;
 8001e66:	e03e      	b.n	8001ee6 <EXTI_Init+0x72e>
			else if(PORTx==GPIOB){AFIO->EXTICR4 |= (0b0001<<12);}
 8001e68:	68fb      	ldr	r3, [r7, #12]
 8001e6a:	4a3c      	ldr	r2, [pc, #240]	; (8001f5c <EXTI_Init+0x7a4>)
 8001e6c:	4293      	cmp	r3, r2
 8001e6e:	d106      	bne.n	8001e7e <EXTI_Init+0x6c6>
 8001e70:	4b37      	ldr	r3, [pc, #220]	; (8001f50 <EXTI_Init+0x798>)
 8001e72:	695b      	ldr	r3, [r3, #20]
 8001e74:	4a36      	ldr	r2, [pc, #216]	; (8001f50 <EXTI_Init+0x798>)
 8001e76:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8001e7a:	6153      	str	r3, [r2, #20]
			break;
 8001e7c:	e033      	b.n	8001ee6 <EXTI_Init+0x72e>
			else if(PORTx==GPIOC){AFIO->EXTICR4 |= (0b0010<<12);}
 8001e7e:	68fb      	ldr	r3, [r7, #12]
 8001e80:	4a32      	ldr	r2, [pc, #200]	; (8001f4c <EXTI_Init+0x794>)
 8001e82:	4293      	cmp	r3, r2
 8001e84:	d106      	bne.n	8001e94 <EXTI_Init+0x6dc>
 8001e86:	4b32      	ldr	r3, [pc, #200]	; (8001f50 <EXTI_Init+0x798>)
 8001e88:	695b      	ldr	r3, [r3, #20]
 8001e8a:	4a31      	ldr	r2, [pc, #196]	; (8001f50 <EXTI_Init+0x798>)
 8001e8c:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8001e90:	6153      	str	r3, [r2, #20]
			break;
 8001e92:	e028      	b.n	8001ee6 <EXTI_Init+0x72e>
			else if(PORTx==GPIOD){AFIO->EXTICR4 |= (0b0011<<12);}
 8001e94:	68fb      	ldr	r3, [r7, #12]
 8001e96:	4a2f      	ldr	r2, [pc, #188]	; (8001f54 <EXTI_Init+0x79c>)
 8001e98:	4293      	cmp	r3, r2
 8001e9a:	d124      	bne.n	8001ee6 <EXTI_Init+0x72e>
 8001e9c:	4b2c      	ldr	r3, [pc, #176]	; (8001f50 <EXTI_Init+0x798>)
 8001e9e:	695b      	ldr	r3, [r3, #20]
 8001ea0:	4a2b      	ldr	r2, [pc, #172]	; (8001f50 <EXTI_Init+0x798>)
 8001ea2:	f443 5340 	orr.w	r3, r3, #12288	; 0x3000
 8001ea6:	6153      	str	r3, [r2, #20]
			break;
 8001ea8:	e01d      	b.n	8001ee6 <EXTI_Init+0x72e>
			break;
 8001eaa:	bf00      	nop
 8001eac:	e01c      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001eae:	bf00      	nop
 8001eb0:	e01a      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001eb2:	bf00      	nop
 8001eb4:	e018      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001eb6:	bf00      	nop
 8001eb8:	e016      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001eba:	bf00      	nop
 8001ebc:	e014      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ebe:	bf00      	nop
 8001ec0:	e012      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ec2:	bf00      	nop
 8001ec4:	e010      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ec6:	bf00      	nop
 8001ec8:	e00e      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001eca:	bf00      	nop
 8001ecc:	e00c      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ece:	bf00      	nop
 8001ed0:	e00a      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ed2:	bf00      	nop
 8001ed4:	e008      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ed6:	bf00      	nop
 8001ed8:	e006      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001eda:	bf00      	nop
 8001edc:	e004      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ede:	bf00      	nop
 8001ee0:	e002      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ee2:	bf00      	nop
 8001ee4:	e000      	b.n	8001ee8 <EXTI_Init+0x730>
			break;
 8001ee6:	bf00      	nop
		}
	//================================================
	//3- Update Rising or Falling Register
	EXTI->RTSR &=~(1<<pin);
 8001ee8:	4b1d      	ldr	r3, [pc, #116]	; (8001f60 <EXTI_Init+0x7a8>)
 8001eea:	689b      	ldr	r3, [r3, #8]
 8001eec:	897a      	ldrh	r2, [r7, #10]
 8001eee:	2101      	movs	r1, #1
 8001ef0:	fa01 f202 	lsl.w	r2, r1, r2
 8001ef4:	43d2      	mvns	r2, r2
 8001ef6:	4611      	mov	r1, r2
 8001ef8:	4a19      	ldr	r2, [pc, #100]	; (8001f60 <EXTI_Init+0x7a8>)
 8001efa:	400b      	ands	r3, r1
 8001efc:	6093      	str	r3, [r2, #8]
	EXTI->FTSR &=~(1<<pin);
 8001efe:	4b18      	ldr	r3, [pc, #96]	; (8001f60 <EXTI_Init+0x7a8>)
 8001f00:	68db      	ldr	r3, [r3, #12]
 8001f02:	897a      	ldrh	r2, [r7, #10]
 8001f04:	2101      	movs	r1, #1
 8001f06:	fa01 f202 	lsl.w	r2, r1, r2
 8001f0a:	43d2      	mvns	r2, r2
 8001f0c:	4611      	mov	r1, r2
 8001f0e:	4a14      	ldr	r2, [pc, #80]	; (8001f60 <EXTI_Init+0x7a8>)
 8001f10:	400b      	ands	r3, r1
 8001f12:	60d3      	str	r3, [r2, #12]
	if(triggercase == EXTI_Trigger_Rising){
 8001f14:	893b      	ldrh	r3, [r7, #8]
 8001f16:	2b00      	cmp	r3, #0
 8001f18:	d10a      	bne.n	8001f30 <EXTI_Init+0x778>
		EXTI->RTSR |= (1<<pin);
 8001f1a:	4b11      	ldr	r3, [pc, #68]	; (8001f60 <EXTI_Init+0x7a8>)
 8001f1c:	689b      	ldr	r3, [r3, #8]
 8001f1e:	897a      	ldrh	r2, [r7, #10]
 8001f20:	2101      	movs	r1, #1
 8001f22:	fa01 f202 	lsl.w	r2, r1, r2
 8001f26:	4611      	mov	r1, r2
 8001f28:	4a0d      	ldr	r2, [pc, #52]	; (8001f60 <EXTI_Init+0x7a8>)
 8001f2a:	430b      	orrs	r3, r1
 8001f2c:	6093      	str	r3, [r2, #8]
 8001f2e:	e02d      	b.n	8001f8c <EXTI_Init+0x7d4>
	}
	else if(triggercase == EXTI_Trigger_Falling){
 8001f30:	893b      	ldrh	r3, [r7, #8]
 8001f32:	2b01      	cmp	r3, #1
 8001f34:	d116      	bne.n	8001f64 <EXTI_Init+0x7ac>
		EXTI->FTSR |= (1<<pin);
 8001f36:	4b0a      	ldr	r3, [pc, #40]	; (8001f60 <EXTI_Init+0x7a8>)
 8001f38:	68db      	ldr	r3, [r3, #12]
 8001f3a:	897a      	ldrh	r2, [r7, #10]
 8001f3c:	2101      	movs	r1, #1
 8001f3e:	fa01 f202 	lsl.w	r2, r1, r2
 8001f42:	4611      	mov	r1, r2
 8001f44:	4a06      	ldr	r2, [pc, #24]	; (8001f60 <EXTI_Init+0x7a8>)
 8001f46:	430b      	orrs	r3, r1
 8001f48:	60d3      	str	r3, [r2, #12]
 8001f4a:	e01f      	b.n	8001f8c <EXTI_Init+0x7d4>
 8001f4c:	40011000 	.word	0x40011000
 8001f50:	40010000 	.word	0x40010000
 8001f54:	40011400 	.word	0x40011400
 8001f58:	40010800 	.word	0x40010800
 8001f5c:	40010c00 	.word	0x40010c00
 8001f60:	40010400 	.word	0x40010400
	}
	else{
		EXTI->RTSR |= (1<<pin);
 8001f64:	4b15      	ldr	r3, [pc, #84]	; (8001fbc <EXTI_Init+0x804>)
 8001f66:	689b      	ldr	r3, [r3, #8]
 8001f68:	897a      	ldrh	r2, [r7, #10]
 8001f6a:	2101      	movs	r1, #1
 8001f6c:	fa01 f202 	lsl.w	r2, r1, r2
 8001f70:	4611      	mov	r1, r2
 8001f72:	4a12      	ldr	r2, [pc, #72]	; (8001fbc <EXTI_Init+0x804>)
 8001f74:	430b      	orrs	r3, r1
 8001f76:	6093      	str	r3, [r2, #8]
		EXTI->FTSR |= (1<<pin);
 8001f78:	4b10      	ldr	r3, [pc, #64]	; (8001fbc <EXTI_Init+0x804>)
 8001f7a:	68db      	ldr	r3, [r3, #12]
 8001f7c:	897a      	ldrh	r2, [r7, #10]
 8001f7e:	2101      	movs	r1, #1
 8001f80:	fa01 f202 	lsl.w	r2, r1, r2
 8001f84:	4611      	mov	r1, r2
 8001f86:	4a0d      	ldr	r2, [pc, #52]	; (8001fbc <EXTI_Init+0x804>)
 8001f88:	430b      	orrs	r3, r1
 8001f8a:	60d3      	str	r3, [r2, #12]
	}
	//4- Update IRQ Handling callback
	GP_IRQ_Callback[pin] =function_addres;
 8001f8c:	897b      	ldrh	r3, [r7, #10]
 8001f8e:	490c      	ldr	r1, [pc, #48]	; (8001fc0 <EXTI_Init+0x808>)
 8001f90:	687a      	ldr	r2, [r7, #4]
 8001f92:	f841 2023 	str.w	r2, [r1, r3, lsl #2]


	EXTI->IMR |=(1<<pin);
 8001f96:	4b09      	ldr	r3, [pc, #36]	; (8001fbc <EXTI_Init+0x804>)
 8001f98:	681b      	ldr	r3, [r3, #0]
 8001f9a:	897a      	ldrh	r2, [r7, #10]
 8001f9c:	2101      	movs	r1, #1
 8001f9e:	fa01 f202 	lsl.w	r2, r1, r2
 8001fa2:	4611      	mov	r1, r2
 8001fa4:	4a05      	ldr	r2, [pc, #20]	; (8001fbc <EXTI_Init+0x804>)
 8001fa6:	430b      	orrs	r3, r1
 8001fa8:	6013      	str	r3, [r2, #0]

	Enable_NVIC(pin);
 8001faa:	897b      	ldrh	r3, [r7, #10]
 8001fac:	4618      	mov	r0, r3
 8001fae:	f7ff fb9d 	bl	80016ec <Enable_NVIC>
}
 8001fb2:	bf00      	nop
 8001fb4:	3710      	adds	r7, #16
 8001fb6:	46bd      	mov	sp, r7
 8001fb8:	bd80      	pop	{r7, pc}
 8001fba:	bf00      	nop
 8001fbc:	40010400 	.word	0x40010400
 8001fc0:	20000080 	.word	0x20000080

08001fc4 <EXTI0_IRQHandler>:



void EXTI0_IRQHandler(void){
 8001fc4:	b580      	push	{r7, lr}
 8001fc6:	af00      	add	r7, sp, #0
	// clear bit in pending register (EXTI_PR)
	EXTI->PR |= (1<<0);
 8001fc8:	4b05      	ldr	r3, [pc, #20]	; (8001fe0 <EXTI0_IRQHandler+0x1c>)
 8001fca:	695b      	ldr	r3, [r3, #20]
 8001fcc:	4a04      	ldr	r2, [pc, #16]	; (8001fe0 <EXTI0_IRQHandler+0x1c>)
 8001fce:	f043 0301 	orr.w	r3, r3, #1
 8001fd2:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[0]();
 8001fd4:	4b03      	ldr	r3, [pc, #12]	; (8001fe4 <EXTI0_IRQHandler+0x20>)
 8001fd6:	681b      	ldr	r3, [r3, #0]
 8001fd8:	4798      	blx	r3
}
 8001fda:	bf00      	nop
 8001fdc:	bd80      	pop	{r7, pc}
 8001fde:	bf00      	nop
 8001fe0:	40010400 	.word	0x40010400
 8001fe4:	20000080 	.word	0x20000080

08001fe8 <EXTI1_IRQHandler>:

void EXTI1_IRQHandler(void){
 8001fe8:	b580      	push	{r7, lr}
 8001fea:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<1);
 8001fec:	4b05      	ldr	r3, [pc, #20]	; (8002004 <EXTI1_IRQHandler+0x1c>)
 8001fee:	695b      	ldr	r3, [r3, #20]
 8001ff0:	4a04      	ldr	r2, [pc, #16]	; (8002004 <EXTI1_IRQHandler+0x1c>)
 8001ff2:	f043 0302 	orr.w	r3, r3, #2
 8001ff6:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[1]();
 8001ff8:	4b03      	ldr	r3, [pc, #12]	; (8002008 <EXTI1_IRQHandler+0x20>)
 8001ffa:	685b      	ldr	r3, [r3, #4]
 8001ffc:	4798      	blx	r3

}
 8001ffe:	bf00      	nop
 8002000:	bd80      	pop	{r7, pc}
 8002002:	bf00      	nop
 8002004:	40010400 	.word	0x40010400
 8002008:	20000080 	.word	0x20000080

0800200c <EXTI2_IRQHandler>:

void EXTI2_IRQHandler(void){
 800200c:	b580      	push	{r7, lr}
 800200e:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<2);
 8002010:	4b05      	ldr	r3, [pc, #20]	; (8002028 <EXTI2_IRQHandler+0x1c>)
 8002012:	695b      	ldr	r3, [r3, #20]
 8002014:	4a04      	ldr	r2, [pc, #16]	; (8002028 <EXTI2_IRQHandler+0x1c>)
 8002016:	f043 0304 	orr.w	r3, r3, #4
 800201a:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[2]();
 800201c:	4b03      	ldr	r3, [pc, #12]	; (800202c <EXTI2_IRQHandler+0x20>)
 800201e:	689b      	ldr	r3, [r3, #8]
 8002020:	4798      	blx	r3
}
 8002022:	bf00      	nop
 8002024:	bd80      	pop	{r7, pc}
 8002026:	bf00      	nop
 8002028:	40010400 	.word	0x40010400
 800202c:	20000080 	.word	0x20000080

08002030 <EXTI3_IRQHandler>:

void EXTI3_IRQHandler(void){
 8002030:	b580      	push	{r7, lr}
 8002032:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<3);
 8002034:	4b05      	ldr	r3, [pc, #20]	; (800204c <EXTI3_IRQHandler+0x1c>)
 8002036:	695b      	ldr	r3, [r3, #20]
 8002038:	4a04      	ldr	r2, [pc, #16]	; (800204c <EXTI3_IRQHandler+0x1c>)
 800203a:	f043 0308 	orr.w	r3, r3, #8
 800203e:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[3]();
 8002040:	4b03      	ldr	r3, [pc, #12]	; (8002050 <EXTI3_IRQHandler+0x20>)
 8002042:	68db      	ldr	r3, [r3, #12]
 8002044:	4798      	blx	r3
}
 8002046:	bf00      	nop
 8002048:	bd80      	pop	{r7, pc}
 800204a:	bf00      	nop
 800204c:	40010400 	.word	0x40010400
 8002050:	20000080 	.word	0x20000080

08002054 <EXTI4_IRQHandler>:

void EXTI4_IRQHandler(void){
 8002054:	b580      	push	{r7, lr}
 8002056:	af00      	add	r7, sp, #0
	EXTI->PR |= (1<<4);
 8002058:	4b05      	ldr	r3, [pc, #20]	; (8002070 <EXTI4_IRQHandler+0x1c>)
 800205a:	695b      	ldr	r3, [r3, #20]
 800205c:	4a04      	ldr	r2, [pc, #16]	; (8002070 <EXTI4_IRQHandler+0x1c>)
 800205e:	f043 0310 	orr.w	r3, r3, #16
 8002062:	6153      	str	r3, [r2, #20]
	GP_IRQ_Callback[4]();
 8002064:	4b03      	ldr	r3, [pc, #12]	; (8002074 <EXTI4_IRQHandler+0x20>)
 8002066:	691b      	ldr	r3, [r3, #16]
 8002068:	4798      	blx	r3
}
 800206a:	bf00      	nop
 800206c:	bd80      	pop	{r7, pc}
 800206e:	bf00      	nop
 8002070:	40010400 	.word	0x40010400
 8002074:	20000080 	.word	0x20000080

08002078 <EXTI9_5_IRQHandler>:

void EXTI9_5_IRQHandler(void){
 8002078:	b580      	push	{r7, lr}
 800207a:	af00      	add	r7, sp, #0
	if(EXTI->PR & (1<<5)) {EXTI->PR |= (1<<5); GP_IRQ_Callback[5]();  }
 800207c:	4b26      	ldr	r3, [pc, #152]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 800207e:	695b      	ldr	r3, [r3, #20]
 8002080:	f003 0320 	and.w	r3, r3, #32
 8002084:	2b00      	cmp	r3, #0
 8002086:	d008      	beq.n	800209a <EXTI9_5_IRQHandler+0x22>
 8002088:	4b23      	ldr	r3, [pc, #140]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 800208a:	695b      	ldr	r3, [r3, #20]
 800208c:	4a22      	ldr	r2, [pc, #136]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 800208e:	f043 0320 	orr.w	r3, r3, #32
 8002092:	6153      	str	r3, [r2, #20]
 8002094:	4b21      	ldr	r3, [pc, #132]	; (800211c <EXTI9_5_IRQHandler+0xa4>)
 8002096:	695b      	ldr	r3, [r3, #20]
 8002098:	4798      	blx	r3
	if(EXTI->PR & (1<<6)) {EXTI->PR |= (1<<6); GP_IRQ_Callback[6]();  }
 800209a:	4b1f      	ldr	r3, [pc, #124]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 800209c:	695b      	ldr	r3, [r3, #20]
 800209e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80020a2:	2b00      	cmp	r3, #0
 80020a4:	d008      	beq.n	80020b8 <EXTI9_5_IRQHandler+0x40>
 80020a6:	4b1c      	ldr	r3, [pc, #112]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020a8:	695b      	ldr	r3, [r3, #20]
 80020aa:	4a1b      	ldr	r2, [pc, #108]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80020b0:	6153      	str	r3, [r2, #20]
 80020b2:	4b1a      	ldr	r3, [pc, #104]	; (800211c <EXTI9_5_IRQHandler+0xa4>)
 80020b4:	699b      	ldr	r3, [r3, #24]
 80020b6:	4798      	blx	r3
	if(EXTI->PR & (1<<7)) {EXTI->PR |= (1<<7); GP_IRQ_Callback[7]();  }
 80020b8:	4b17      	ldr	r3, [pc, #92]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020ba:	695b      	ldr	r3, [r3, #20]
 80020bc:	f003 0380 	and.w	r3, r3, #128	; 0x80
 80020c0:	2b00      	cmp	r3, #0
 80020c2:	d008      	beq.n	80020d6 <EXTI9_5_IRQHandler+0x5e>
 80020c4:	4b14      	ldr	r3, [pc, #80]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020c6:	695b      	ldr	r3, [r3, #20]
 80020c8:	4a13      	ldr	r2, [pc, #76]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020ca:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80020ce:	6153      	str	r3, [r2, #20]
 80020d0:	4b12      	ldr	r3, [pc, #72]	; (800211c <EXTI9_5_IRQHandler+0xa4>)
 80020d2:	69db      	ldr	r3, [r3, #28]
 80020d4:	4798      	blx	r3
	if(EXTI->PR & (1<<8)) {EXTI->PR |= (1<<8); GP_IRQ_Callback[8]();  }
 80020d6:	4b10      	ldr	r3, [pc, #64]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020d8:	695b      	ldr	r3, [r3, #20]
 80020da:	f403 7380 	and.w	r3, r3, #256	; 0x100
 80020de:	2b00      	cmp	r3, #0
 80020e0:	d008      	beq.n	80020f4 <EXTI9_5_IRQHandler+0x7c>
 80020e2:	4b0d      	ldr	r3, [pc, #52]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020e4:	695b      	ldr	r3, [r3, #20]
 80020e6:	4a0c      	ldr	r2, [pc, #48]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020e8:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80020ec:	6153      	str	r3, [r2, #20]
 80020ee:	4b0b      	ldr	r3, [pc, #44]	; (800211c <EXTI9_5_IRQHandler+0xa4>)
 80020f0:	6a1b      	ldr	r3, [r3, #32]
 80020f2:	4798      	blx	r3
	if(EXTI->PR & (1<<9)) {EXTI->PR |= (1<<9); GP_IRQ_Callback[9]();  }
 80020f4:	4b08      	ldr	r3, [pc, #32]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 80020f6:	695b      	ldr	r3, [r3, #20]
 80020f8:	f403 7300 	and.w	r3, r3, #512	; 0x200
 80020fc:	2b00      	cmp	r3, #0
 80020fe:	d008      	beq.n	8002112 <EXTI9_5_IRQHandler+0x9a>
 8002100:	4b05      	ldr	r3, [pc, #20]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 8002102:	695b      	ldr	r3, [r3, #20]
 8002104:	4a04      	ldr	r2, [pc, #16]	; (8002118 <EXTI9_5_IRQHandler+0xa0>)
 8002106:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 800210a:	6153      	str	r3, [r2, #20]
 800210c:	4b03      	ldr	r3, [pc, #12]	; (800211c <EXTI9_5_IRQHandler+0xa4>)
 800210e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002110:	4798      	blx	r3
}
 8002112:	bf00      	nop
 8002114:	bd80      	pop	{r7, pc}
 8002116:	bf00      	nop
 8002118:	40010400 	.word	0x40010400
 800211c:	20000080 	.word	0x20000080

08002120 <EXTI15_10_IRQHandler>:

void EXTI15_10_IRQHandler(void){
 8002120:	b580      	push	{r7, lr}
 8002122:	af00      	add	r7, sp, #0
	if(EXTI->PR & (1<<10)) {EXTI->PR |= (1<<10); GP_IRQ_Callback[10]();  }
 8002124:	4b2d      	ldr	r3, [pc, #180]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002126:	695b      	ldr	r3, [r3, #20]
 8002128:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800212c:	2b00      	cmp	r3, #0
 800212e:	d008      	beq.n	8002142 <EXTI15_10_IRQHandler+0x22>
 8002130:	4b2a      	ldr	r3, [pc, #168]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002132:	695b      	ldr	r3, [r3, #20]
 8002134:	4a29      	ldr	r2, [pc, #164]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002136:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800213a:	6153      	str	r3, [r2, #20]
 800213c:	4b28      	ldr	r3, [pc, #160]	; (80021e0 <EXTI15_10_IRQHandler+0xc0>)
 800213e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002140:	4798      	blx	r3
	if(EXTI->PR & (1<<11)) {EXTI->PR |= (1<<11); GP_IRQ_Callback[11]();  }
 8002142:	4b26      	ldr	r3, [pc, #152]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002144:	695b      	ldr	r3, [r3, #20]
 8002146:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800214a:	2b00      	cmp	r3, #0
 800214c:	d008      	beq.n	8002160 <EXTI15_10_IRQHandler+0x40>
 800214e:	4b23      	ldr	r3, [pc, #140]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002150:	695b      	ldr	r3, [r3, #20]
 8002152:	4a22      	ldr	r2, [pc, #136]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002154:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002158:	6153      	str	r3, [r2, #20]
 800215a:	4b21      	ldr	r3, [pc, #132]	; (80021e0 <EXTI15_10_IRQHandler+0xc0>)
 800215c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800215e:	4798      	blx	r3
	if(EXTI->PR & (1<<12)) {EXTI->PR |= (1<<12); GP_IRQ_Callback[12]();  }
 8002160:	4b1e      	ldr	r3, [pc, #120]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002162:	695b      	ldr	r3, [r3, #20]
 8002164:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8002168:	2b00      	cmp	r3, #0
 800216a:	d008      	beq.n	800217e <EXTI15_10_IRQHandler+0x5e>
 800216c:	4b1b      	ldr	r3, [pc, #108]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 800216e:	695b      	ldr	r3, [r3, #20]
 8002170:	4a1a      	ldr	r2, [pc, #104]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002172:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8002176:	6153      	str	r3, [r2, #20]
 8002178:	4b19      	ldr	r3, [pc, #100]	; (80021e0 <EXTI15_10_IRQHandler+0xc0>)
 800217a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800217c:	4798      	blx	r3
	if(EXTI->PR & (1<<13)) {EXTI->PR |= (1<<13); GP_IRQ_Callback[13]();  }
 800217e:	4b17      	ldr	r3, [pc, #92]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002180:	695b      	ldr	r3, [r3, #20]
 8002182:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8002186:	2b00      	cmp	r3, #0
 8002188:	d008      	beq.n	800219c <EXTI15_10_IRQHandler+0x7c>
 800218a:	4b14      	ldr	r3, [pc, #80]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 800218c:	695b      	ldr	r3, [r3, #20]
 800218e:	4a13      	ldr	r2, [pc, #76]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 8002190:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8002194:	6153      	str	r3, [r2, #20]
 8002196:	4b12      	ldr	r3, [pc, #72]	; (80021e0 <EXTI15_10_IRQHandler+0xc0>)
 8002198:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 800219a:	4798      	blx	r3
	if(EXTI->PR & (1<<14)) {EXTI->PR |= (1<<14); GP_IRQ_Callback[14]();  }
 800219c:	4b0f      	ldr	r3, [pc, #60]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 800219e:	695b      	ldr	r3, [r3, #20]
 80021a0:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80021a4:	2b00      	cmp	r3, #0
 80021a6:	d008      	beq.n	80021ba <EXTI15_10_IRQHandler+0x9a>
 80021a8:	4b0c      	ldr	r3, [pc, #48]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 80021aa:	695b      	ldr	r3, [r3, #20]
 80021ac:	4a0b      	ldr	r2, [pc, #44]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 80021ae:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 80021b2:	6153      	str	r3, [r2, #20]
 80021b4:	4b0a      	ldr	r3, [pc, #40]	; (80021e0 <EXTI15_10_IRQHandler+0xc0>)
 80021b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 80021b8:	4798      	blx	r3
	if(EXTI->PR & (1<<15)) {EXTI->PR |= (1<<15); GP_IRQ_Callback[15]();  }
 80021ba:	4b08      	ldr	r3, [pc, #32]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 80021bc:	695b      	ldr	r3, [r3, #20]
 80021be:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 80021c2:	2b00      	cmp	r3, #0
 80021c4:	d008      	beq.n	80021d8 <EXTI15_10_IRQHandler+0xb8>
 80021c6:	4b05      	ldr	r3, [pc, #20]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 80021c8:	695b      	ldr	r3, [r3, #20]
 80021ca:	4a04      	ldr	r2, [pc, #16]	; (80021dc <EXTI15_10_IRQHandler+0xbc>)
 80021cc:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 80021d0:	6153      	str	r3, [r2, #20]
 80021d2:	4b03      	ldr	r3, [pc, #12]	; (80021e0 <EXTI15_10_IRQHandler+0xc0>)
 80021d4:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 80021d6:	4798      	blx	r3

}
 80021d8:	bf00      	nop
 80021da:	bd80      	pop	{r7, pc}
 80021dc:	40010400 	.word	0x40010400
 80021e0:	20000080 	.word	0x20000080

080021e4 <MCAL_RCC_Peripherals_enable>:
 * @param[out] 	-none
 * @retval		-none
 * Note			-none
 */
void MCAL_RCC_Peripherals_enable(RCC_Buses_t bus , uint16_t peripheral , uint8_t status)
{
 80021e4:	b480      	push	{r7}
 80021e6:	b083      	sub	sp, #12
 80021e8:	af00      	add	r7, sp, #0
 80021ea:	4603      	mov	r3, r0
 80021ec:	71fb      	strb	r3, [r7, #7]
 80021ee:	460b      	mov	r3, r1
 80021f0:	80bb      	strh	r3, [r7, #4]
 80021f2:	4613      	mov	r3, r2
 80021f4:	71bb      	strb	r3, [r7, #6]
	switch(bus)
 80021f6:	79fb      	ldrb	r3, [r7, #7]
 80021f8:	2b01      	cmp	r3, #1
 80021fa:	d01a      	beq.n	8002232 <MCAL_RCC_Peripherals_enable+0x4e>
 80021fc:	2b02      	cmp	r3, #2
 80021fe:	d02e      	beq.n	800225e <MCAL_RCC_Peripherals_enable+0x7a>
 8002200:	2b00      	cmp	r3, #0
 8002202:	d000      	beq.n	8002206 <MCAL_RCC_Peripherals_enable+0x22>
		RCC->APB2ENR |=  (status << peripheral);
	}
	break ;
	}

}
 8002204:	e041      	b.n	800228a <MCAL_RCC_Peripherals_enable+0xa6>
		RCC->AHBENR &=~ (status << peripheral);
 8002206:	4b23      	ldr	r3, [pc, #140]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002208:	695b      	ldr	r3, [r3, #20]
 800220a:	79b9      	ldrb	r1, [r7, #6]
 800220c:	88ba      	ldrh	r2, [r7, #4]
 800220e:	fa01 f202 	lsl.w	r2, r1, r2
 8002212:	43d2      	mvns	r2, r2
 8002214:	4611      	mov	r1, r2
 8002216:	4a1f      	ldr	r2, [pc, #124]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002218:	400b      	ands	r3, r1
 800221a:	6153      	str	r3, [r2, #20]
		RCC->AHBENR |=  (status << peripheral);
 800221c:	4b1d      	ldr	r3, [pc, #116]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 800221e:	695b      	ldr	r3, [r3, #20]
 8002220:	79b9      	ldrb	r1, [r7, #6]
 8002222:	88ba      	ldrh	r2, [r7, #4]
 8002224:	fa01 f202 	lsl.w	r2, r1, r2
 8002228:	4611      	mov	r1, r2
 800222a:	4a1a      	ldr	r2, [pc, #104]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 800222c:	430b      	orrs	r3, r1
 800222e:	6153      	str	r3, [r2, #20]
	break ;
 8002230:	e02b      	b.n	800228a <MCAL_RCC_Peripherals_enable+0xa6>
		RCC->APB1ENR &=~ (status << peripheral);
 8002232:	4b18      	ldr	r3, [pc, #96]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002234:	69db      	ldr	r3, [r3, #28]
 8002236:	79b9      	ldrb	r1, [r7, #6]
 8002238:	88ba      	ldrh	r2, [r7, #4]
 800223a:	fa01 f202 	lsl.w	r2, r1, r2
 800223e:	43d2      	mvns	r2, r2
 8002240:	4611      	mov	r1, r2
 8002242:	4a14      	ldr	r2, [pc, #80]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002244:	400b      	ands	r3, r1
 8002246:	61d3      	str	r3, [r2, #28]
		RCC->APB1ENR |=  (status << peripheral);
 8002248:	4b12      	ldr	r3, [pc, #72]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 800224a:	69db      	ldr	r3, [r3, #28]
 800224c:	79b9      	ldrb	r1, [r7, #6]
 800224e:	88ba      	ldrh	r2, [r7, #4]
 8002250:	fa01 f202 	lsl.w	r2, r1, r2
 8002254:	4611      	mov	r1, r2
 8002256:	4a0f      	ldr	r2, [pc, #60]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002258:	430b      	orrs	r3, r1
 800225a:	61d3      	str	r3, [r2, #28]
	break ;
 800225c:	e015      	b.n	800228a <MCAL_RCC_Peripherals_enable+0xa6>
		RCC->APB2ENR &=~ (status << peripheral);
 800225e:	4b0d      	ldr	r3, [pc, #52]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002260:	699b      	ldr	r3, [r3, #24]
 8002262:	79b9      	ldrb	r1, [r7, #6]
 8002264:	88ba      	ldrh	r2, [r7, #4]
 8002266:	fa01 f202 	lsl.w	r2, r1, r2
 800226a:	43d2      	mvns	r2, r2
 800226c:	4611      	mov	r1, r2
 800226e:	4a09      	ldr	r2, [pc, #36]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002270:	400b      	ands	r3, r1
 8002272:	6193      	str	r3, [r2, #24]
		RCC->APB2ENR |=  (status << peripheral);
 8002274:	4b07      	ldr	r3, [pc, #28]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002276:	699b      	ldr	r3, [r3, #24]
 8002278:	79b9      	ldrb	r1, [r7, #6]
 800227a:	88ba      	ldrh	r2, [r7, #4]
 800227c:	fa01 f202 	lsl.w	r2, r1, r2
 8002280:	4611      	mov	r1, r2
 8002282:	4a04      	ldr	r2, [pc, #16]	; (8002294 <MCAL_RCC_Peripherals_enable+0xb0>)
 8002284:	430b      	orrs	r3, r1
 8002286:	6193      	str	r3, [r2, #24]
	break ;
 8002288:	bf00      	nop
}
 800228a:	bf00      	nop
 800228c:	370c      	adds	r7, #12
 800228e:	46bd      	mov	sp, r7
 8002290:	bc80      	pop	{r7}
 8002292:	4770      	bx	lr
 8002294:	40021000 	.word	0x40021000

08002298 <MCAL_RCC_GetSYS_CLCKFreq>:
 * @param[out] 	-none
 * @retval		-none
 * Note			-none
 */
void MCAL_RCC_GetSYS_CLCKFreq(RCC_speed_t RCC_Speed)
{
 8002298:	b480      	push	{r7}
 800229a:	b083      	sub	sp, #12
 800229c:	af00      	add	r7, sp, #0
 800229e:	4603      	mov	r3, r0
 80022a0:	71fb      	strb	r3, [r7, #7]
	switch(RCC_Speed)
 80022a2:	79fb      	ldrb	r3, [r7, #7]
 80022a4:	2b01      	cmp	r3, #1
 80022a6:	d03c      	beq.n	8002322 <MCAL_RCC_GetSYS_CLCKFreq+0x8a>
 80022a8:	2b02      	cmp	r3, #2
 80022aa:	d00f      	beq.n	80022cc <MCAL_RCC_GetSYS_CLCKFreq+0x34>
 80022ac:	2b00      	cmp	r3, #0
 80022ae:	d000      	beq.n	80022b2 <MCAL_RCC_GetSYS_CLCKFreq+0x1a>

	}
	break;
	}

}
 80022b0:	e06e      	b.n	8002390 <MCAL_RCC_GetSYS_CLCKFreq+0xf8>
		RCC->CR |= (1 << 0);
 80022b2:	4b3a      	ldr	r3, [pc, #232]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022b4:	681b      	ldr	r3, [r3, #0]
 80022b6:	4a39      	ldr	r2, [pc, #228]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022b8:	f043 0301 	orr.w	r3, r3, #1
 80022bc:	6013      	str	r3, [r2, #0]
		RCC->CFGR &=~ (0b11 << 0);
 80022be:	4b37      	ldr	r3, [pc, #220]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022c0:	685b      	ldr	r3, [r3, #4]
 80022c2:	4a36      	ldr	r2, [pc, #216]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022c4:	f023 0303 	bic.w	r3, r3, #3
 80022c8:	6053      	str	r3, [r2, #4]
	break;
 80022ca:	e061      	b.n	8002390 <MCAL_RCC_GetSYS_CLCKFreq+0xf8>
		RCC->CR |= (1 << 0);
 80022cc:	4b33      	ldr	r3, [pc, #204]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022ce:	681b      	ldr	r3, [r3, #0]
 80022d0:	4a32      	ldr	r2, [pc, #200]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022d2:	f043 0301 	orr.w	r3, r3, #1
 80022d6:	6013      	str	r3, [r2, #0]
		RCC->CFGR &=~ (1 << 16);
 80022d8:	4b30      	ldr	r3, [pc, #192]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022da:	685b      	ldr	r3, [r3, #4]
 80022dc:	4a2f      	ldr	r2, [pc, #188]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022de:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80022e2:	6053      	str	r3, [r2, #4]
		RCC->CFGR &=~ (0b1111 << 18);
 80022e4:	4b2d      	ldr	r3, [pc, #180]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022e6:	685b      	ldr	r3, [r3, #4]
 80022e8:	4a2c      	ldr	r2, [pc, #176]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022ea:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 80022ee:	6053      	str	r3, [r2, #4]
		RCC->CFGR |= (0b0111 << 18);
 80022f0:	4b2a      	ldr	r3, [pc, #168]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022f2:	685b      	ldr	r3, [r3, #4]
 80022f4:	4a29      	ldr	r2, [pc, #164]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022f6:	f443 13e0 	orr.w	r3, r3, #1835008	; 0x1c0000
 80022fa:	6053      	str	r3, [r2, #4]
		RCC->CR |= (1 << 24);
 80022fc:	4b27      	ldr	r3, [pc, #156]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 80022fe:	681b      	ldr	r3, [r3, #0]
 8002300:	4a26      	ldr	r2, [pc, #152]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002302:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002306:	6013      	str	r3, [r2, #0]
		RCC->CFGR &=~ (0b11 << 0);
 8002308:	4b24      	ldr	r3, [pc, #144]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 800230a:	685b      	ldr	r3, [r3, #4]
 800230c:	4a23      	ldr	r2, [pc, #140]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 800230e:	f023 0303 	bic.w	r3, r3, #3
 8002312:	6053      	str	r3, [r2, #4]
		RCC->CFGR |=  (0b10 << 0);
 8002314:	4b21      	ldr	r3, [pc, #132]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002316:	685b      	ldr	r3, [r3, #4]
 8002318:	4a20      	ldr	r2, [pc, #128]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 800231a:	f043 0302 	orr.w	r3, r3, #2
 800231e:	6053      	str	r3, [r2, #4]
	break;
 8002320:	e036      	b.n	8002390 <MCAL_RCC_GetSYS_CLCKFreq+0xf8>
		RCC->CR |= (1 << 16);
 8002322:	4b1e      	ldr	r3, [pc, #120]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002324:	681b      	ldr	r3, [r3, #0]
 8002326:	4a1d      	ldr	r2, [pc, #116]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002328:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800232c:	6013      	str	r3, [r2, #0]
		RCC->CFGR &=~ (1 << 17);
 800232e:	4b1b      	ldr	r3, [pc, #108]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002330:	685b      	ldr	r3, [r3, #4]
 8002332:	4a1a      	ldr	r2, [pc, #104]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002334:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8002338:	6053      	str	r3, [r2, #4]
		RCC->CFGR &=~ (1 << 16);
 800233a:	4b18      	ldr	r3, [pc, #96]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 800233c:	685b      	ldr	r3, [r3, #4]
 800233e:	4a17      	ldr	r2, [pc, #92]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002340:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002344:	6053      	str	r3, [r2, #4]
		RCC->CFGR |=  (1 << 16);
 8002346:	4b15      	ldr	r3, [pc, #84]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002348:	685b      	ldr	r3, [r3, #4]
 800234a:	4a14      	ldr	r2, [pc, #80]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 800234c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002350:	6053      	str	r3, [r2, #4]
		RCC->CFGR &=~ (0b1111 << 18);
 8002352:	4b12      	ldr	r3, [pc, #72]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002354:	685b      	ldr	r3, [r3, #4]
 8002356:	4a11      	ldr	r2, [pc, #68]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002358:	f423 1370 	bic.w	r3, r3, #3932160	; 0x3c0000
 800235c:	6053      	str	r3, [r2, #4]
		RCC->CFGR |= (0010 << 18);
 800235e:	4b0f      	ldr	r3, [pc, #60]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002360:	685b      	ldr	r3, [r3, #4]
 8002362:	4a0e      	ldr	r2, [pc, #56]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002364:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 8002368:	6053      	str	r3, [r2, #4]
		RCC->CR |= (1 << 24);
 800236a:	4b0c      	ldr	r3, [pc, #48]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 800236c:	681b      	ldr	r3, [r3, #0]
 800236e:	4a0b      	ldr	r2, [pc, #44]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002370:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8002374:	6013      	str	r3, [r2, #0]
		RCC->CFGR &=~ (0b11 << 0);
 8002376:	4b09      	ldr	r3, [pc, #36]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002378:	685b      	ldr	r3, [r3, #4]
 800237a:	4a08      	ldr	r2, [pc, #32]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 800237c:	f023 0303 	bic.w	r3, r3, #3
 8002380:	6053      	str	r3, [r2, #4]
		RCC->CFGR |=  (0b10 << 0);
 8002382:	4b06      	ldr	r3, [pc, #24]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002384:	685b      	ldr	r3, [r3, #4]
 8002386:	4a05      	ldr	r2, [pc, #20]	; (800239c <MCAL_RCC_GetSYS_CLCKFreq+0x104>)
 8002388:	f043 0302 	orr.w	r3, r3, #2
 800238c:	6053      	str	r3, [r2, #4]
	break;
 800238e:	bf00      	nop
}
 8002390:	bf00      	nop
 8002392:	370c      	adds	r7, #12
 8002394:	46bd      	mov	sp, r7
 8002396:	bc80      	pop	{r7}
 8002398:	4770      	bx	lr
 800239a:	bf00      	nop
 800239c:	40021000 	.word	0x40021000

080023a0 <MCAL_RCC_GetHCLKFreq>:
 * @param[out] 	-none
 * @retval		-none
 * Note			-none
 */
uint32_t MCAL_RCC_GetHCLKFreq(void)
{
 80023a0:	b480      	push	{r7}
 80023a2:	af00      	add	r7, sp, #0
	 *1100: SYSCLK divided by 64
	 *1101: SYSCLK divided by 128
	 *1110: SYSCLK divided by 256
	 *1111: SYSCLK divided by 512
	 */
	return RCC->CFGR &=~  (0b1111 << 4)   ;
 80023a4:	4b04      	ldr	r3, [pc, #16]	; (80023b8 <MCAL_RCC_GetHCLKFreq+0x18>)
 80023a6:	685b      	ldr	r3, [r3, #4]
 80023a8:	4a03      	ldr	r2, [pc, #12]	; (80023b8 <MCAL_RCC_GetHCLKFreq+0x18>)
 80023aa:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80023ae:	6053      	str	r3, [r2, #4]
}
 80023b0:	4618      	mov	r0, r3
 80023b2:	46bd      	mov	sp, r7
 80023b4:	bc80      	pop	{r7}
 80023b6:	4770      	bx	lr
 80023b8:	40021000 	.word	0x40021000

080023bc <MCAL_RCC_GetPCLK1Freq>:
 * @param[out] 	-none
 * @retval		-none
 * Note			-none
 */
uint32_t MCAL_RCC_GetPCLK1Freq(void)
{
 80023bc:	b480      	push	{r7}
 80023be:	af00      	add	r7, sp, #0
	 *101: HCLK divided by 4
	 *110: HCLK divided by 8
	 *111: HCLK divided by 16
	 */

	return RCC->CFGR  &=~ (0b111 << 8)   ;
 80023c0:	4b04      	ldr	r3, [pc, #16]	; (80023d4 <MCAL_RCC_GetPCLK1Freq+0x18>)
 80023c2:	685b      	ldr	r3, [r3, #4]
 80023c4:	4a03      	ldr	r2, [pc, #12]	; (80023d4 <MCAL_RCC_GetPCLK1Freq+0x18>)
 80023c6:	f423 63e0 	bic.w	r3, r3, #1792	; 0x700
 80023ca:	6053      	str	r3, [r2, #4]
}
 80023cc:	4618      	mov	r0, r3
 80023ce:	46bd      	mov	sp, r7
 80023d0:	bc80      	pop	{r7}
 80023d2:	4770      	bx	lr
 80023d4:	40021000 	.word	0x40021000

080023d8 <MCAL_RCC_GetPCLK2Freq>:
 * @param[out] 	-none
 * @retval		-none
 * Note			-none
 */
uint32_t MCAL_RCC_GetPCLK2Freq(void)
{
 80023d8:	b480      	push	{r7}
 80023da:	af00      	add	r7, sp, #0
	 *100: HCLK divided by 2
	 *101: HCLK divided by 4
	 *110: HCLK divided by 8
	 *111: HCLK divided by 16
	 */
	return RCC->CFGR &=~  (0b111 << 11)   ;
 80023dc:	4b04      	ldr	r3, [pc, #16]	; (80023f0 <MCAL_RCC_GetPCLK2Freq+0x18>)
 80023de:	685b      	ldr	r3, [r3, #4]
 80023e0:	4a03      	ldr	r2, [pc, #12]	; (80023f0 <MCAL_RCC_GetPCLK2Freq+0x18>)
 80023e2:	f423 5360 	bic.w	r3, r3, #14336	; 0x3800
 80023e6:	6053      	str	r3, [r2, #4]
}
 80023e8:	4618      	mov	r0, r3
 80023ea:	46bd      	mov	sp, r7
 80023ec:	bc80      	pop	{r7}
 80023ee:	4770      	bx	lr
 80023f0:	40021000 	.word	0x40021000

080023f4 <MCAL_PWM_Init>:
float TIM_Crr ;

//===============================================================================================

void MCAL_PWM_Init(PWM_Modes_t mode ,TIMER_channels_t channel , double duty_cycle , uint32_t freq,uint32_t TIM_PSC)
{
 80023f4:	b5b0      	push	{r4, r5, r7, lr}
 80023f6:	b084      	sub	sp, #16
 80023f8:	af00      	add	r7, sp, #0
 80023fa:	e9c7 2300 	strd	r2, r3, [r7]
 80023fe:	4603      	mov	r3, r0
 8002400:	73fb      	strb	r3, [r7, #15]
 8002402:	460b      	mov	r3, r1
 8002404:	73bb      	strb	r3, [r7, #14]

	//counter disabled
	TIM3->CR1 &=~ (1 << 0);
 8002406:	4ba4      	ldr	r3, [pc, #656]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002408:	681b      	ldr	r3, [r3, #0]
 800240a:	4aa3      	ldr	r2, [pc, #652]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800240c:	f023 0301 	bic.w	r3, r3, #1
 8002410:	6013      	str	r3, [r2, #0]
	TIM_Arr = (1000000 / freq );
 8002412:	4aa2      	ldr	r2, [pc, #648]	; (800269c <MCAL_PWM_Init+0x2a8>)
 8002414:	6a3b      	ldr	r3, [r7, #32]
 8002416:	fbb2 f3f3 	udiv	r3, r2, r3
 800241a:	4aa1      	ldr	r2, [pc, #644]	; (80026a0 <MCAL_PWM_Init+0x2ac>)
 800241c:	6013      	str	r3, [r2, #0]
	TIM_Crr = ((duty_cycle /100) * (float)TIM_Arr );
 800241e:	f04f 0200 	mov.w	r2, #0
 8002422:	4ba0      	ldr	r3, [pc, #640]	; (80026a4 <MCAL_PWM_Init+0x2b0>)
 8002424:	e9d7 0100 	ldrd	r0, r1, [r7]
 8002428:	f7fe f988 	bl	800073c <__aeabi_ddiv>
 800242c:	4603      	mov	r3, r0
 800242e:	460c      	mov	r4, r1
 8002430:	4625      	mov	r5, r4
 8002432:	461c      	mov	r4, r3
 8002434:	4b9a      	ldr	r3, [pc, #616]	; (80026a0 <MCAL_PWM_Init+0x2ac>)
 8002436:	681b      	ldr	r3, [r3, #0]
 8002438:	4618      	mov	r0, r3
 800243a:	f7fe fb8d 	bl	8000b58 <__aeabi_ui2f>
 800243e:	4603      	mov	r3, r0
 8002440:	4618      	mov	r0, r3
 8002442:	f7fd fff9 	bl	8000438 <__aeabi_f2d>
 8002446:	4602      	mov	r2, r0
 8002448:	460b      	mov	r3, r1
 800244a:	4620      	mov	r0, r4
 800244c:	4629      	mov	r1, r5
 800244e:	f7fe f84b 	bl	80004e8 <__aeabi_dmul>
 8002452:	4603      	mov	r3, r0
 8002454:	460c      	mov	r4, r1
 8002456:	4618      	mov	r0, r3
 8002458:	4621      	mov	r1, r4
 800245a:	f7fe fa77 	bl	800094c <__aeabi_d2f>
 800245e:	4602      	mov	r2, r0
 8002460:	4b91      	ldr	r3, [pc, #580]	; (80026a8 <MCAL_PWM_Init+0x2b4>)
 8002462:	601a      	str	r2, [r3, #0]

	//Timer clock enable
	MCAL_RCC_Peripherals_enable(APB1, RCC_TIM3, Enable);
 8002464:	2201      	movs	r2, #1
 8002466:	2101      	movs	r1, #1
 8002468:	2001      	movs	r0, #1
 800246a:	f7ff febb 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
	MCAL_RCC_Peripherals_enable(APB2, RCC_GPIOA, Enable);
 800246e:	2201      	movs	r2, #1
 8002470:	2102      	movs	r1, #2
 8002472:	2002      	movs	r0, #2
 8002474:	f7ff feb6 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
	MCAL_RCC_Peripherals_enable(APB2, RCC_GPIOB, Enable);
 8002478:	2201      	movs	r2, #1
 800247a:	2103      	movs	r1, #3
 800247c:	2002      	movs	r0, #2
 800247e:	f7ff feb1 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
	MCAL_RCC_Peripherals_enable(APB2, RCC_AFIO, Enable);
 8002482:	2201      	movs	r2, #1
 8002484:	2100      	movs	r1, #0
 8002486:	2002      	movs	r0, #2
 8002488:	f7ff feac 	bl	80021e4 <MCAL_RCC_Peripherals_enable>

	switch (channel)
 800248c:	7bbb      	ldrb	r3, [r7, #14]
 800248e:	2b03      	cmp	r3, #3
 8002490:	f200 8132 	bhi.w	80026f8 <MCAL_PWM_Init+0x304>
 8002494:	a201      	add	r2, pc, #4	; (adr r2, 800249c <MCAL_PWM_Init+0xa8>)
 8002496:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800249a:	bf00      	nop
 800249c:	080024ad 	.word	0x080024ad
 80024a0:	08002539 	.word	0x08002539
 80024a4:	080025c5 	.word	0x080025c5
 80024a8:	08002651 	.word	0x08002651
	{
	case CH1 :
	{
		//GPIO config
		MCAL_GPIO_INIT(GPIOA, PIN_6,Output_AF_PP_Mode_Speed50MHZ);
 80024ac:	220b      	movs	r2, #11
 80024ae:	2106      	movs	r1, #6
 80024b0:	487e      	ldr	r0, [pc, #504]	; (80026ac <MCAL_PWM_Init+0x2b8>)
 80024b2:	f7ff f81b 	bl	80014ec <MCAL_GPIO_INIT>

		//timer 3 CH1 setup
		TIM3->CCMR1 &=~ (0b11 << 0);
 80024b6:	4b78      	ldr	r3, [pc, #480]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024b8:	699b      	ldr	r3, [r3, #24]
 80024ba:	4a77      	ldr	r2, [pc, #476]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024bc:	f023 0303 	bic.w	r3, r3, #3
 80024c0:	6193      	str	r3, [r2, #24]
		TIM3->CCMR1 |= (1 << 3);
 80024c2:	4b75      	ldr	r3, [pc, #468]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024c4:	699b      	ldr	r3, [r3, #24]
 80024c6:	4a74      	ldr	r2, [pc, #464]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024c8:	f043 0308 	orr.w	r3, r3, #8
 80024cc:	6193      	str	r3, [r2, #24]
		TIM3->CCER |= (1 << 0);
 80024ce:	4b72      	ldr	r3, [pc, #456]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024d0:	6a1b      	ldr	r3, [r3, #32]
 80024d2:	4a71      	ldr	r2, [pc, #452]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024d4:	f043 0301 	orr.w	r3, r3, #1
 80024d8:	6213      	str	r3, [r2, #32]
		switch (mode)
 80024da:	7bfb      	ldrb	r3, [r7, #15]
 80024dc:	2b00      	cmp	r3, #0
 80024de:	d002      	beq.n	80024e6 <MCAL_PWM_Init+0xf2>
 80024e0:	2b01      	cmp	r3, #1
 80024e2:	d007      	beq.n	80024f4 <MCAL_PWM_Init+0x100>
 80024e4:	e00d      	b.n	8002502 <MCAL_PWM_Init+0x10e>
		{
		case PWM_MODE1 :
		{
			TIM3->CCMR1 |= (0b110<<4);
 80024e6:	4b6c      	ldr	r3, [pc, #432]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024e8:	699b      	ldr	r3, [r3, #24]
 80024ea:	4a6b      	ldr	r2, [pc, #428]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024ec:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 80024f0:	6193      	str	r3, [r2, #24]
			break;
 80024f2:	e006      	b.n	8002502 <MCAL_PWM_Init+0x10e>
		}
		case PWM_MODE2 :
		{
			TIM3->CCMR1 |= (0b111<<4);
 80024f4:	4b68      	ldr	r3, [pc, #416]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024f6:	699b      	ldr	r3, [r3, #24]
 80024f8:	4a67      	ldr	r2, [pc, #412]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80024fa:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 80024fe:	6193      	str	r3, [r2, #24]
			break;
 8002500:	bf00      	nop
		}
		}
		TIM3->CCR1 =  TIM_Crr ;
 8002502:	4b69      	ldr	r3, [pc, #420]	; (80026a8 <MCAL_PWM_Init+0x2b4>)
 8002504:	681b      	ldr	r3, [r3, #0]
 8002506:	4c64      	ldr	r4, [pc, #400]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002508:	4618      	mov	r0, r3
 800250a:	f7fe fccd 	bl	8000ea8 <__aeabi_f2uiz>
 800250e:	4603      	mov	r3, r0
 8002510:	6363      	str	r3, [r4, #52]	; 0x34
		TIM3->DIER |= (0b11 << 0);
 8002512:	4b61      	ldr	r3, [pc, #388]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002514:	68db      	ldr	r3, [r3, #12]
 8002516:	4a60      	ldr	r2, [pc, #384]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002518:	f043 0303 	orr.w	r3, r3, #3
 800251c:	60d3      	str	r3, [r2, #12]
		TIM3->EGR |= (1 << 1);
 800251e:	4b5e      	ldr	r3, [pc, #376]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002520:	695b      	ldr	r3, [r3, #20]
 8002522:	4a5d      	ldr	r2, [pc, #372]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002524:	f043 0302 	orr.w	r3, r3, #2
 8002528:	6153      	str	r3, [r2, #20]
		TIM3->CCER &=~ (1 << 1);
 800252a:	4b5b      	ldr	r3, [pc, #364]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800252c:	6a1b      	ldr	r3, [r3, #32]
 800252e:	4a5a      	ldr	r2, [pc, #360]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002530:	f023 0302 	bic.w	r3, r3, #2
 8002534:	6213      	str	r3, [r2, #32]
		break;
 8002536:	e0df      	b.n	80026f8 <MCAL_PWM_Init+0x304>

	}
	case CH2 :
	{
		//GPIO config
		MCAL_GPIO_INIT(GPIOA, PIN_7,Output_AF_PP_Mode_Speed50MHZ);
 8002538:	220b      	movs	r2, #11
 800253a:	2107      	movs	r1, #7
 800253c:	485b      	ldr	r0, [pc, #364]	; (80026ac <MCAL_PWM_Init+0x2b8>)
 800253e:	f7fe ffd5 	bl	80014ec <MCAL_GPIO_INIT>

		//timer 3 CH2 setup
		TIM3->CCMR1 &=~ (0b11 << 8);
 8002542:	4b55      	ldr	r3, [pc, #340]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002544:	699b      	ldr	r3, [r3, #24]
 8002546:	4a54      	ldr	r2, [pc, #336]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002548:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800254c:	6193      	str	r3, [r2, #24]
		TIM3->CCMR1 |= (1 << 11);
 800254e:	4b52      	ldr	r3, [pc, #328]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002550:	699b      	ldr	r3, [r3, #24]
 8002552:	4a51      	ldr	r2, [pc, #324]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002554:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002558:	6193      	str	r3, [r2, #24]
		TIM3->CCER |= (1 << 4);
 800255a:	4b4f      	ldr	r3, [pc, #316]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800255c:	6a1b      	ldr	r3, [r3, #32]
 800255e:	4a4e      	ldr	r2, [pc, #312]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002560:	f043 0310 	orr.w	r3, r3, #16
 8002564:	6213      	str	r3, [r2, #32]
		switch (mode)
 8002566:	7bfb      	ldrb	r3, [r7, #15]
 8002568:	2b00      	cmp	r3, #0
 800256a:	d002      	beq.n	8002572 <MCAL_PWM_Init+0x17e>
 800256c:	2b01      	cmp	r3, #1
 800256e:	d007      	beq.n	8002580 <MCAL_PWM_Init+0x18c>
 8002570:	e00d      	b.n	800258e <MCAL_PWM_Init+0x19a>
		{
		case PWM_MODE1 :
		{
			TIM3->CCMR1 |= (0b110<<12);
 8002572:	4b49      	ldr	r3, [pc, #292]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002574:	699b      	ldr	r3, [r3, #24]
 8002576:	4a48      	ldr	r2, [pc, #288]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002578:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
 800257c:	6193      	str	r3, [r2, #24]
			break;
 800257e:	e006      	b.n	800258e <MCAL_PWM_Init+0x19a>
		}
		case PWM_MODE2 :
		{
			TIM3->CCMR1 |= (0b111<<12);
 8002580:	4b45      	ldr	r3, [pc, #276]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002582:	699b      	ldr	r3, [r3, #24]
 8002584:	4a44      	ldr	r2, [pc, #272]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002586:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 800258a:	6193      	str	r3, [r2, #24]
			break;
 800258c:	bf00      	nop
		}
		}

		TIM3->CCR2 = TIM_Crr ;
 800258e:	4b46      	ldr	r3, [pc, #280]	; (80026a8 <MCAL_PWM_Init+0x2b4>)
 8002590:	681b      	ldr	r3, [r3, #0]
 8002592:	4c41      	ldr	r4, [pc, #260]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002594:	4618      	mov	r0, r3
 8002596:	f7fe fc87 	bl	8000ea8 <__aeabi_f2uiz>
 800259a:	4603      	mov	r3, r0
 800259c:	63a3      	str	r3, [r4, #56]	; 0x38
		TIM3->DIER |= (0b101 << 0);
 800259e:	4b3e      	ldr	r3, [pc, #248]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025a0:	68db      	ldr	r3, [r3, #12]
 80025a2:	4a3d      	ldr	r2, [pc, #244]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025a4:	f043 0305 	orr.w	r3, r3, #5
 80025a8:	60d3      	str	r3, [r2, #12]
		TIM3->EGR |= (1 << 2);
 80025aa:	4b3b      	ldr	r3, [pc, #236]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025ac:	695b      	ldr	r3, [r3, #20]
 80025ae:	4a3a      	ldr	r2, [pc, #232]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025b0:	f043 0304 	orr.w	r3, r3, #4
 80025b4:	6153      	str	r3, [r2, #20]
		TIM3->CCER &=~ (1 << 5);
 80025b6:	4b38      	ldr	r3, [pc, #224]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025b8:	6a1b      	ldr	r3, [r3, #32]
 80025ba:	4a37      	ldr	r2, [pc, #220]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025bc:	f023 0320 	bic.w	r3, r3, #32
 80025c0:	6213      	str	r3, [r2, #32]
		break;
 80025c2:	e099      	b.n	80026f8 <MCAL_PWM_Init+0x304>
	}
	case CH3 :
	{

		//GPIO config
		MCAL_GPIO_INIT(GPIOB, PIN_0,Output_AF_PP_Mode_Speed50MHZ);
 80025c4:	220b      	movs	r2, #11
 80025c6:	2100      	movs	r1, #0
 80025c8:	4839      	ldr	r0, [pc, #228]	; (80026b0 <MCAL_PWM_Init+0x2bc>)
 80025ca:	f7fe ff8f 	bl	80014ec <MCAL_GPIO_INIT>

		//timer 3 CH3 setup
		TIM3->CCMR2 &=~ (0b11 << 0);
 80025ce:	4b32      	ldr	r3, [pc, #200]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025d0:	69db      	ldr	r3, [r3, #28]
 80025d2:	4a31      	ldr	r2, [pc, #196]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025d4:	f023 0303 	bic.w	r3, r3, #3
 80025d8:	61d3      	str	r3, [r2, #28]
		TIM3->CCMR2 |= (1 << 3);
 80025da:	4b2f      	ldr	r3, [pc, #188]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025dc:	69db      	ldr	r3, [r3, #28]
 80025de:	4a2e      	ldr	r2, [pc, #184]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025e0:	f043 0308 	orr.w	r3, r3, #8
 80025e4:	61d3      	str	r3, [r2, #28]
		TIM3->CCER |= (1 << 8);
 80025e6:	4b2c      	ldr	r3, [pc, #176]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025e8:	6a1b      	ldr	r3, [r3, #32]
 80025ea:	4a2b      	ldr	r2, [pc, #172]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 80025ec:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80025f0:	6213      	str	r3, [r2, #32]
		switch (mode)
 80025f2:	7bfb      	ldrb	r3, [r7, #15]
 80025f4:	2b00      	cmp	r3, #0
 80025f6:	d002      	beq.n	80025fe <MCAL_PWM_Init+0x20a>
 80025f8:	2b01      	cmp	r3, #1
 80025fa:	d007      	beq.n	800260c <MCAL_PWM_Init+0x218>
 80025fc:	e00d      	b.n	800261a <MCAL_PWM_Init+0x226>
		{
		case PWM_MODE1 :
		{
			TIM3->CCMR2 |= (0b110<<4);
 80025fe:	4b26      	ldr	r3, [pc, #152]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002600:	69db      	ldr	r3, [r3, #28]
 8002602:	4a25      	ldr	r2, [pc, #148]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002604:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 8002608:	61d3      	str	r3, [r2, #28]
			break;
 800260a:	e006      	b.n	800261a <MCAL_PWM_Init+0x226>
		}
		case PWM_MODE2 :
		{
			TIM3->CCMR2 |= (0b111<<4);
 800260c:	4b22      	ldr	r3, [pc, #136]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800260e:	69db      	ldr	r3, [r3, #28]
 8002610:	4a21      	ldr	r2, [pc, #132]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002612:	f043 0370 	orr.w	r3, r3, #112	; 0x70
 8002616:	61d3      	str	r3, [r2, #28]
			break;
 8002618:	bf00      	nop
		}
		}
		TIM3->CCR3 = TIM_Crr ;
 800261a:	4b23      	ldr	r3, [pc, #140]	; (80026a8 <MCAL_PWM_Init+0x2b4>)
 800261c:	681b      	ldr	r3, [r3, #0]
 800261e:	4c1e      	ldr	r4, [pc, #120]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002620:	4618      	mov	r0, r3
 8002622:	f7fe fc41 	bl	8000ea8 <__aeabi_f2uiz>
 8002626:	4603      	mov	r3, r0
 8002628:	63e3      	str	r3, [r4, #60]	; 0x3c
		TIM3->DIER |= (0b1001 << 0);
 800262a:	4b1b      	ldr	r3, [pc, #108]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800262c:	68db      	ldr	r3, [r3, #12]
 800262e:	4a1a      	ldr	r2, [pc, #104]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002630:	f043 0309 	orr.w	r3, r3, #9
 8002634:	60d3      	str	r3, [r2, #12]
		TIM3->EGR |= (1 << 3);
 8002636:	4b18      	ldr	r3, [pc, #96]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002638:	695b      	ldr	r3, [r3, #20]
 800263a:	4a17      	ldr	r2, [pc, #92]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800263c:	f043 0308 	orr.w	r3, r3, #8
 8002640:	6153      	str	r3, [r2, #20]
		TIM3->CCER &=~ (1 << 9);
 8002642:	4b15      	ldr	r3, [pc, #84]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002644:	6a1b      	ldr	r3, [r3, #32]
 8002646:	4a14      	ldr	r2, [pc, #80]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002648:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800264c:	6213      	str	r3, [r2, #32]
		break;
 800264e:	e053      	b.n	80026f8 <MCAL_PWM_Init+0x304>

	}
	case CH4 :
	{
		//GPIO config
		MCAL_GPIO_INIT(GPIOB, PIN_1,Output_AF_PP_Mode_Speed50MHZ);
 8002650:	220b      	movs	r2, #11
 8002652:	2101      	movs	r1, #1
 8002654:	4816      	ldr	r0, [pc, #88]	; (80026b0 <MCAL_PWM_Init+0x2bc>)
 8002656:	f7fe ff49 	bl	80014ec <MCAL_GPIO_INIT>

		//timer 4 CH2 setup
		TIM3->CCMR2 &=~ (0b11 << 8);
 800265a:	4b0f      	ldr	r3, [pc, #60]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800265c:	69db      	ldr	r3, [r3, #28]
 800265e:	4a0e      	ldr	r2, [pc, #56]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002660:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 8002664:	61d3      	str	r3, [r2, #28]
		TIM3->CCMR2 |= (1 << 11);
 8002666:	4b0c      	ldr	r3, [pc, #48]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002668:	69db      	ldr	r3, [r3, #28]
 800266a:	4a0b      	ldr	r2, [pc, #44]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800266c:	f443 6300 	orr.w	r3, r3, #2048	; 0x800
 8002670:	61d3      	str	r3, [r2, #28]
		TIM3->CCER |= (1 << 12);
 8002672:	4b09      	ldr	r3, [pc, #36]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002674:	6a1b      	ldr	r3, [r3, #32]
 8002676:	4a08      	ldr	r2, [pc, #32]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002678:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 800267c:	6213      	str	r3, [r2, #32]
		switch (mode)
 800267e:	7bfb      	ldrb	r3, [r7, #15]
 8002680:	2b00      	cmp	r3, #0
 8002682:	d002      	beq.n	800268a <MCAL_PWM_Init+0x296>
 8002684:	2b01      	cmp	r3, #1
 8002686:	d015      	beq.n	80026b4 <MCAL_PWM_Init+0x2c0>
 8002688:	e01b      	b.n	80026c2 <MCAL_PWM_Init+0x2ce>
		{
		case PWM_MODE1 :
		{
			TIM3->CCMR2 |= (0b110<<12);
 800268a:	4b03      	ldr	r3, [pc, #12]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 800268c:	69db      	ldr	r3, [r3, #28]
 800268e:	4a02      	ldr	r2, [pc, #8]	; (8002698 <MCAL_PWM_Init+0x2a4>)
 8002690:	f443 43c0 	orr.w	r3, r3, #24576	; 0x6000
 8002694:	61d3      	str	r3, [r2, #28]
			break;
 8002696:	e014      	b.n	80026c2 <MCAL_PWM_Init+0x2ce>
 8002698:	40000400 	.word	0x40000400
 800269c:	000f4240 	.word	0x000f4240
 80026a0:	200000c0 	.word	0x200000c0
 80026a4:	40590000 	.word	0x40590000
 80026a8:	200000bc 	.word	0x200000bc
 80026ac:	40010800 	.word	0x40010800
 80026b0:	40010c00 	.word	0x40010c00
		}
		case PWM_MODE2 :
		{
			TIM3->CCMR2 |= (0b111<<12);
 80026b4:	4b1f      	ldr	r3, [pc, #124]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026b6:	69db      	ldr	r3, [r3, #28]
 80026b8:	4a1e      	ldr	r2, [pc, #120]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026ba:	f443 43e0 	orr.w	r3, r3, #28672	; 0x7000
 80026be:	61d3      	str	r3, [r2, #28]
			break;
 80026c0:	bf00      	nop
		}
		}

		TIM3->CCR4 = TIM_Crr ;
 80026c2:	4b1d      	ldr	r3, [pc, #116]	; (8002738 <MCAL_PWM_Init+0x344>)
 80026c4:	681b      	ldr	r3, [r3, #0]
 80026c6:	4c1b      	ldr	r4, [pc, #108]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026c8:	4618      	mov	r0, r3
 80026ca:	f7fe fbed 	bl	8000ea8 <__aeabi_f2uiz>
 80026ce:	4603      	mov	r3, r0
 80026d0:	6423      	str	r3, [r4, #64]	; 0x40
		TIM3->DIER |= (0b10001 << 0);
 80026d2:	4b18      	ldr	r3, [pc, #96]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026d4:	68db      	ldr	r3, [r3, #12]
 80026d6:	4a17      	ldr	r2, [pc, #92]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026d8:	f043 0311 	orr.w	r3, r3, #17
 80026dc:	60d3      	str	r3, [r2, #12]
		TIM3->EGR |= (1 << 4);
 80026de:	4b15      	ldr	r3, [pc, #84]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026e0:	695b      	ldr	r3, [r3, #20]
 80026e2:	4a14      	ldr	r2, [pc, #80]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026e4:	f043 0310 	orr.w	r3, r3, #16
 80026e8:	6153      	str	r3, [r2, #20]
		TIM3->CCER &=~ (1 << 13);
 80026ea:	4b12      	ldr	r3, [pc, #72]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026ec:	6a1b      	ldr	r3, [r3, #32]
 80026ee:	4a11      	ldr	r2, [pc, #68]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026f0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 80026f4:	6213      	str	r3, [r2, #32]
		break;
 80026f6:	bf00      	nop

	}
	}

	TIM3->CR1 |= (1 << 7);
 80026f8:	4b0e      	ldr	r3, [pc, #56]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026fa:	681b      	ldr	r3, [r3, #0]
 80026fc:	4a0d      	ldr	r2, [pc, #52]	; (8002734 <MCAL_PWM_Init+0x340>)
 80026fe:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8002702:	6013      	str	r3, [r2, #0]
	TIM3->ARR = TIM_Arr ;
 8002704:	4a0b      	ldr	r2, [pc, #44]	; (8002734 <MCAL_PWM_Init+0x340>)
 8002706:	4b0d      	ldr	r3, [pc, #52]	; (800273c <MCAL_PWM_Init+0x348>)
 8002708:	681b      	ldr	r3, [r3, #0]
 800270a:	62d3      	str	r3, [r2, #44]	; 0x2c
	TIM3->PSC = TIM_PSC ;
 800270c:	4a09      	ldr	r2, [pc, #36]	; (8002734 <MCAL_PWM_Init+0x340>)
 800270e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002710:	6293      	str	r3, [r2, #40]	; 0x28
	TIM3->EGR |= (1 << 0);
 8002712:	4b08      	ldr	r3, [pc, #32]	; (8002734 <MCAL_PWM_Init+0x340>)
 8002714:	695b      	ldr	r3, [r3, #20]
 8002716:	4a07      	ldr	r2, [pc, #28]	; (8002734 <MCAL_PWM_Init+0x340>)
 8002718:	f043 0301 	orr.w	r3, r3, #1
 800271c:	6153      	str	r3, [r2, #20]
	TIM3->CR1 |=(1<<0);//enable the timer
 800271e:	4b05      	ldr	r3, [pc, #20]	; (8002734 <MCAL_PWM_Init+0x340>)
 8002720:	681b      	ldr	r3, [r3, #0]
 8002722:	4a04      	ldr	r2, [pc, #16]	; (8002734 <MCAL_PWM_Init+0x340>)
 8002724:	f043 0301 	orr.w	r3, r3, #1
 8002728:	6013      	str	r3, [r2, #0]
}
 800272a:	bf00      	nop
 800272c:	3710      	adds	r7, #16
 800272e:	46bd      	mov	sp, r7
 8002730:	bdb0      	pop	{r4, r5, r7, pc}
 8002732:	bf00      	nop
 8002734:	40000400 	.word	0x40000400
 8002738:	200000bc 	.word	0x200000bc
 800273c:	200000c0 	.word	0x200000c0

08002740 <delay>:
//=======================================================================================
void delay(uint16_t time,uint8_t U,uint32_t clk){
 8002740:	b580      	push	{r7, lr}
 8002742:	b088      	sub	sp, #32
 8002744:	af00      	add	r7, sp, #0
 8002746:	4603      	mov	r3, r0
 8002748:	603a      	str	r2, [r7, #0]
 800274a:	80fb      	strh	r3, [r7, #6]
 800274c:	460b      	mov	r3, r1
 800274e:	717b      	strb	r3, [r7, #5]

	MCAL_RCC_Peripherals_enable(APB1, RCC_TIM2, Enable);
 8002750:	2201      	movs	r2, #1
 8002752:	2100      	movs	r1, #0
 8002754:	2001      	movs	r0, #1
 8002756:	f7ff fd45 	bl	80021e4 <MCAL_RCC_Peripherals_enable>

	delay_TIMER->CR1 &=~(1<<0);//timer off
 800275a:	4b4c      	ldr	r3, [pc, #304]	; (800288c <delay+0x14c>)
 800275c:	681b      	ldr	r3, [r3, #0]
 800275e:	681a      	ldr	r2, [r3, #0]
 8002760:	4b4a      	ldr	r3, [pc, #296]	; (800288c <delay+0x14c>)
 8002762:	681b      	ldr	r3, [r3, #0]
 8002764:	f022 0201 	bic.w	r2, r2, #1
 8002768:	601a      	str	r2, [r3, #0]
	///TIMERS_typeDef* TIMERx=TIM2;
	char user_flage=1;
 800276a:	2301      	movs	r3, #1
 800276c:	77fb      	strb	r3, [r7, #31]
	uint32_t user_top=0;
 800276e:	2300      	movs	r3, #0
 8002770:	61bb      	str	r3, [r7, #24]
	uint32_t user_pre=1;
 8002772:	2301      	movs	r3, #1
 8002774:	617b      	str	r3, [r7, #20]
	uint32_t unit =1000;
 8002776:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800277a:	613b      	str	r3, [r7, #16]
	uint8_t  increase=2;
 800277c:	2302      	movs	r3, #2
 800277e:	73fb      	strb	r3, [r7, #15]

	if (U == 0){
 8002780:	797b      	ldrb	r3, [r7, #5]
 8002782:	2b00      	cmp	r3, #0
 8002784:	d10d      	bne.n	80027a2 <delay+0x62>
		unit = 1000;
 8002786:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800278a:	613b      	str	r3, [r7, #16]
		if (time > 3000)increase = 100;
 800278c:	88fb      	ldrh	r3, [r7, #6]
 800278e:	f640 32b8 	movw	r2, #3000	; 0xbb8
 8002792:	4293      	cmp	r3, r2
 8002794:	d902      	bls.n	800279c <delay+0x5c>
 8002796:	2364      	movs	r3, #100	; 0x64
 8002798:	73fb      	strb	r3, [r7, #15]
 800279a:	e030      	b.n	80027fe <delay+0xbe>
		else increase = 10;
 800279c:	230a      	movs	r3, #10
 800279e:	73fb      	strb	r3, [r7, #15]
 80027a0:	e02d      	b.n	80027fe <delay+0xbe>
	}
	else {
		unit = 1000000;
 80027a2:	4b3b      	ldr	r3, [pc, #236]	; (8002890 <delay+0x150>)
 80027a4:	613b      	str	r3, [r7, #16]
		if (time > 3000)increase = 10;
 80027a6:	88fb      	ldrh	r3, [r7, #6]
 80027a8:	f640 32b8 	movw	r2, #3000	; 0xbb8
 80027ac:	4293      	cmp	r3, r2
 80027ae:	d902      	bls.n	80027b6 <delay+0x76>
 80027b0:	230a      	movs	r3, #10
 80027b2:	73fb      	strb	r3, [r7, #15]
 80027b4:	e023      	b.n	80027fe <delay+0xbe>
		else increase = 5;
 80027b6:	2305      	movs	r3, #5
 80027b8:	73fb      	strb	r3, [r7, #15]
	}

	while(user_flage==1){
 80027ba:	e020      	b.n	80027fe <delay+0xbe>
		user_top = (clk/unit*time)/( user_pre );
 80027bc:	683a      	ldr	r2, [r7, #0]
 80027be:	693b      	ldr	r3, [r7, #16]
 80027c0:	fbb2 f3f3 	udiv	r3, r2, r3
 80027c4:	88fa      	ldrh	r2, [r7, #6]
 80027c6:	fb02 f203 	mul.w	r2, r2, r3
 80027ca:	697b      	ldr	r3, [r7, #20]
 80027cc:	fbb2 f3f3 	udiv	r3, r2, r3
 80027d0:	61bb      	str	r3, [r7, #24]
		if(user_top>=32000){
 80027d2:	69bb      	ldr	r3, [r7, #24]
 80027d4:	f5b3 4ffa 	cmp.w	r3, #32000	; 0x7d00
 80027d8:	d30f      	bcc.n	80027fa <delay+0xba>

			if(user_pre>65530){
 80027da:	697b      	ldr	r3, [r7, #20]
 80027dc:	f64f 72fa 	movw	r2, #65530	; 0xfffa
 80027e0:	4293      	cmp	r3, r2
 80027e2:	d905      	bls.n	80027f0 <delay+0xb0>
				user_pre=65530;
 80027e4:	f64f 73fa 	movw	r3, #65530	; 0xfffa
 80027e8:	617b      	str	r3, [r7, #20]
				user_flage=0;
 80027ea:	2300      	movs	r3, #0
 80027ec:	77fb      	strb	r3, [r7, #31]
 80027ee:	e006      	b.n	80027fe <delay+0xbe>
			}
			else user_pre+=increase;
 80027f0:	7bfb      	ldrb	r3, [r7, #15]
 80027f2:	697a      	ldr	r2, [r7, #20]
 80027f4:	4413      	add	r3, r2
 80027f6:	617b      	str	r3, [r7, #20]
 80027f8:	e001      	b.n	80027fe <delay+0xbe>

		}
		else{
			user_flage=0;
 80027fa:	2300      	movs	r3, #0
 80027fc:	77fb      	strb	r3, [r7, #31]
	while(user_flage==1){
 80027fe:	7ffb      	ldrb	r3, [r7, #31]
 8002800:	2b01      	cmp	r3, #1
 8002802:	d0db      	beq.n	80027bc <delay+0x7c>
		}
	}


	delay_TIMER->CR1 &=~(1<<0);//timer off
 8002804:	4b21      	ldr	r3, [pc, #132]	; (800288c <delay+0x14c>)
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	681a      	ldr	r2, [r3, #0]
 800280a:	4b20      	ldr	r3, [pc, #128]	; (800288c <delay+0x14c>)
 800280c:	681b      	ldr	r3, [r3, #0]
 800280e:	f022 0201 	bic.w	r2, r2, #1
 8002812:	601a      	str	r2, [r3, #0]

	delay_TIMER->CR1  |=(1<<2);//Only counter overflow/underflow generates an update
 8002814:	4b1d      	ldr	r3, [pc, #116]	; (800288c <delay+0x14c>)
 8002816:	681b      	ldr	r3, [r3, #0]
 8002818:	681a      	ldr	r2, [r3, #0]
 800281a:	4b1c      	ldr	r3, [pc, #112]	; (800288c <delay+0x14c>)
 800281c:	681b      	ldr	r3, [r3, #0]
 800281e:	f042 0204 	orr.w	r2, r2, #4
 8002822:	601a      	str	r2, [r3, #0]

	delay_TIMER->DIER |=(1<<0);//Update interrupt enabled
 8002824:	4b19      	ldr	r3, [pc, #100]	; (800288c <delay+0x14c>)
 8002826:	681b      	ldr	r3, [r3, #0]
 8002828:	68da      	ldr	r2, [r3, #12]
 800282a:	4b18      	ldr	r3, [pc, #96]	; (800288c <delay+0x14c>)
 800282c:	681b      	ldr	r3, [r3, #0]
 800282e:	f042 0201 	orr.w	r2, r2, #1
 8002832:	60da      	str	r2, [r3, #12]



	delay_TIMER->ARR=user_top;//frec peak value
 8002834:	4b15      	ldr	r3, [pc, #84]	; (800288c <delay+0x14c>)
 8002836:	681b      	ldr	r3, [r3, #0]
 8002838:	69ba      	ldr	r2, [r7, #24]
 800283a:	62da      	str	r2, [r3, #44]	; 0x2c

	delay_TIMER->PSC=(user_pre-1);//prescaller
 800283c:	4b13      	ldr	r3, [pc, #76]	; (800288c <delay+0x14c>)
 800283e:	681b      	ldr	r3, [r3, #0]
 8002840:	697a      	ldr	r2, [r7, #20]
 8002842:	3a01      	subs	r2, #1
 8002844:	629a      	str	r2, [r3, #40]	; 0x28

	delay_TIMER->EGR |=(1<<0);//1: Re-initialize the counter and generates an update of the registers. Note that the prescaler
 8002846:	4b11      	ldr	r3, [pc, #68]	; (800288c <delay+0x14c>)
 8002848:	681b      	ldr	r3, [r3, #0]
 800284a:	695a      	ldr	r2, [r3, #20]
 800284c:	4b0f      	ldr	r3, [pc, #60]	; (800288c <delay+0x14c>)
 800284e:	681b      	ldr	r3, [r3, #0]
 8002850:	f042 0201 	orr.w	r2, r2, #1
 8002854:	615a      	str	r2, [r3, #20]

	delay_TIMER->CR1 |=(1<<0);//enable the timer
 8002856:	4b0d      	ldr	r3, [pc, #52]	; (800288c <delay+0x14c>)
 8002858:	681b      	ldr	r3, [r3, #0]
 800285a:	681a      	ldr	r2, [r3, #0]
 800285c:	4b0b      	ldr	r3, [pc, #44]	; (800288c <delay+0x14c>)
 800285e:	681b      	ldr	r3, [r3, #0]
 8002860:	f042 0201 	orr.w	r2, r2, #1
 8002864:	601a      	str	r2, [r3, #0]



	delay_flag=1;
 8002866:	4b0b      	ldr	r3, [pc, #44]	; (8002894 <delay+0x154>)
 8002868:	2201      	movs	r2, #1
 800286a:	701a      	strb	r2, [r3, #0]
	NVIC_TIM2_global_interrupt_Enable;
 800286c:	4b0a      	ldr	r3, [pc, #40]	; (8002898 <delay+0x158>)
 800286e:	681b      	ldr	r3, [r3, #0]
 8002870:	4a09      	ldr	r2, [pc, #36]	; (8002898 <delay+0x158>)
 8002872:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8002876:	6013      	str	r3, [r2, #0]
	while(delay_flag){
 8002878:	bf00      	nop
 800287a:	4b06      	ldr	r3, [pc, #24]	; (8002894 <delay+0x154>)
 800287c:	781b      	ldrb	r3, [r3, #0]
 800287e:	2b00      	cmp	r3, #0
 8002880:	d1fb      	bne.n	800287a <delay+0x13a>

	}
}
 8002882:	bf00      	nop
 8002884:	3720      	adds	r7, #32
 8002886:	46bd      	mov	sp, r7
 8002888:	bd80      	pop	{r7, pc}
 800288a:	bf00      	nop
 800288c:	20000004 	.word	0x20000004
 8002890:	000f4240 	.word	0x000f4240
 8002894:	20000000 	.word	0x20000000
 8002898:	e000e100 	.word	0xe000e100

0800289c <TIME_CALCULATION>:

//======================================================================================================

uint32_t TIME_CALCULATION(uint32_t clk,uint8_t TIMER_ST){
 800289c:	b580      	push	{r7, lr}
 800289e:	b084      	sub	sp, #16
 80028a0:	af00      	add	r7, sp, #0
 80028a2:	6078      	str	r0, [r7, #4]
 80028a4:	460b      	mov	r3, r1
 80028a6:	70fb      	strb	r3, [r7, #3]
	if(TIMER_ST==TIMER_START){
 80028a8:	78fb      	ldrb	r3, [r7, #3]
 80028aa:	2b01      	cmp	r3, #1
 80028ac:	d131      	bne.n	8002912 <TIME_CALCULATION+0x76>
		MCAL_RCC_Peripherals_enable(APB1, RCC_TIM4, Enable);
 80028ae:	2201      	movs	r2, #1
 80028b0:	2102      	movs	r1, #2
 80028b2:	2001      	movs	r0, #1
 80028b4:	f7ff fc96 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
		TIM4->CR1 &=~(1<<0);//stop
 80028b8:	4b2b      	ldr	r3, [pc, #172]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028ba:	681b      	ldr	r3, [r3, #0]
 80028bc:	4a2a      	ldr	r2, [pc, #168]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028be:	f023 0301 	bic.w	r3, r3, #1
 80028c2:	6013      	str	r3, [r2, #0]

		TIM4->CR1  |=(1<<2);
 80028c4:	4b28      	ldr	r3, [pc, #160]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	4a27      	ldr	r2, [pc, #156]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028ca:	f043 0304 	orr.w	r3, r3, #4
 80028ce:	6013      	str	r3, [r2, #0]

		TIM4->DIER |=(1<<0);//Update interrupt enable
 80028d0:	4b25      	ldr	r3, [pc, #148]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028d2:	68db      	ldr	r3, [r3, #12]
 80028d4:	4a24      	ldr	r2, [pc, #144]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028d6:	f043 0301 	orr.w	r3, r3, #1
 80028da:	60d3      	str	r3, [r2, #12]

		TIM4->ARR=64000;//peak value 8ms of freq=8000000hz
 80028dc:	4b22      	ldr	r3, [pc, #136]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028de:	f44f 427a 	mov.w	r2, #64000	; 0xfa00
 80028e2:	62da      	str	r2, [r3, #44]	; 0x2c

		TIM4->PSC=0;//prescaller
 80028e4:	4b20      	ldr	r3, [pc, #128]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028e6:	2200      	movs	r2, #0
 80028e8:	629a      	str	r2, [r3, #40]	; 0x28

		TIM4->EGR |=(1<<0);//Bit 0 UG: Update generation
 80028ea:	4b1f      	ldr	r3, [pc, #124]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028ec:	695b      	ldr	r3, [r3, #20]
 80028ee:	4a1e      	ldr	r2, [pc, #120]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028f0:	f043 0301 	orr.w	r3, r3, #1
 80028f4:	6153      	str	r3, [r2, #20]

		TIM4->CR1 |=(1<<0);//enable the timer
 80028f6:	4b1c      	ldr	r3, [pc, #112]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028f8:	681b      	ldr	r3, [r3, #0]
 80028fa:	4a1b      	ldr	r2, [pc, #108]	; (8002968 <TIME_CALCULATION+0xcc>)
 80028fc:	f043 0301 	orr.w	r3, r3, #1
 8002900:	6013      	str	r3, [r2, #0]
		NVIC_TIM4_global_interrupt_Enable;
 8002902:	4b1a      	ldr	r3, [pc, #104]	; (800296c <TIME_CALCULATION+0xd0>)
 8002904:	681b      	ldr	r3, [r3, #0]
 8002906:	4a19      	ldr	r2, [pc, #100]	; (800296c <TIME_CALCULATION+0xd0>)
 8002908:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800290c:	6013      	str	r3, [r2, #0]
		return 1;
 800290e:	2301      	movs	r3, #1
 8002910:	e025      	b.n	800295e <TIME_CALCULATION+0xc2>
	}
	else {
		TIM4->CR1 &=~(1<<0);//stop
 8002912:	4b15      	ldr	r3, [pc, #84]	; (8002968 <TIME_CALCULATION+0xcc>)
 8002914:	681b      	ldr	r3, [r3, #0]
 8002916:	4a14      	ldr	r2, [pc, #80]	; (8002968 <TIME_CALCULATION+0xcc>)
 8002918:	f023 0301 	bic.w	r3, r3, #1
 800291c:	6013      	str	r3, [r2, #0]
		timer_ticks=TIM4->CNT;
 800291e:	4b12      	ldr	r3, [pc, #72]	; (8002968 <TIME_CALCULATION+0xcc>)
 8002920:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002922:	b29a      	uxth	r2, r3
 8002924:	4b12      	ldr	r3, [pc, #72]	; (8002970 <TIME_CALCULATION+0xd4>)
 8002926:	801a      	strh	r2, [r3, #0]
		uint32_t X=((timer_ticks+(overflowtims*64000))/(clk/1000000));
 8002928:	4b11      	ldr	r3, [pc, #68]	; (8002970 <TIME_CALCULATION+0xd4>)
 800292a:	881b      	ldrh	r3, [r3, #0]
 800292c:	461a      	mov	r2, r3
 800292e:	4b11      	ldr	r3, [pc, #68]	; (8002974 <TIME_CALCULATION+0xd8>)
 8002930:	881b      	ldrh	r3, [r3, #0]
 8002932:	4619      	mov	r1, r3
 8002934:	f44f 437a 	mov.w	r3, #64000	; 0xfa00
 8002938:	fb03 f301 	mul.w	r3, r3, r1
 800293c:	4413      	add	r3, r2
 800293e:	4619      	mov	r1, r3
 8002940:	687b      	ldr	r3, [r7, #4]
 8002942:	4a0d      	ldr	r2, [pc, #52]	; (8002978 <TIME_CALCULATION+0xdc>)
 8002944:	fba2 2303 	umull	r2, r3, r2, r3
 8002948:	0c9b      	lsrs	r3, r3, #18
 800294a:	fbb1 f3f3 	udiv	r3, r1, r3
 800294e:	60fb      	str	r3, [r7, #12]
		overflowtims=0;
 8002950:	4b08      	ldr	r3, [pc, #32]	; (8002974 <TIME_CALCULATION+0xd8>)
 8002952:	2200      	movs	r2, #0
 8002954:	801a      	strh	r2, [r3, #0]
		timer_ticks=0;
 8002956:	4b06      	ldr	r3, [pc, #24]	; (8002970 <TIME_CALCULATION+0xd4>)
 8002958:	2200      	movs	r2, #0
 800295a:	801a      	strh	r2, [r3, #0]
		return X;
 800295c:	68fb      	ldr	r3, [r7, #12]
	}
}
 800295e:	4618      	mov	r0, r3
 8002960:	3710      	adds	r7, #16
 8002962:	46bd      	mov	sp, r7
 8002964:	bd80      	pop	{r7, pc}
 8002966:	bf00      	nop
 8002968:	40000800 	.word	0x40000800
 800296c:	e000e100 	.word	0xe000e100
 8002970:	2000002c 	.word	0x2000002c
 8002974:	20000028 	.word	0x20000028
 8002978:	431bde83 	.word	0x431bde83

0800297c <TIM2_IRQHandler>:
}


//========<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<  ISR  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>

void TIM2_IRQHandler(){
 800297c:	b480      	push	{r7}
 800297e:	af00      	add	r7, sp, #0
	delay_TIMER->SR &=~(1<<0);//Bit 0 UIF: Update interrupt flag
 8002980:	4b0b      	ldr	r3, [pc, #44]	; (80029b0 <TIM2_IRQHandler+0x34>)
 8002982:	681b      	ldr	r3, [r3, #0]
 8002984:	691a      	ldr	r2, [r3, #16]
 8002986:	4b0a      	ldr	r3, [pc, #40]	; (80029b0 <TIM2_IRQHandler+0x34>)
 8002988:	681b      	ldr	r3, [r3, #0]
 800298a:	f022 0201 	bic.w	r2, r2, #1
 800298e:	611a      	str	r2, [r3, #16]
	delay_flag=0;
 8002990:	4b08      	ldr	r3, [pc, #32]	; (80029b4 <TIM2_IRQHandler+0x38>)
 8002992:	2200      	movs	r2, #0
 8002994:	701a      	strb	r2, [r3, #0]
	//NVIC_TIM2_global_interrupt_Disable;
	delay_TIMER->CR1 &=~(1<<0);//timer off
 8002996:	4b06      	ldr	r3, [pc, #24]	; (80029b0 <TIM2_IRQHandler+0x34>)
 8002998:	681b      	ldr	r3, [r3, #0]
 800299a:	681a      	ldr	r2, [r3, #0]
 800299c:	4b04      	ldr	r3, [pc, #16]	; (80029b0 <TIM2_IRQHandler+0x34>)
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	f022 0201 	bic.w	r2, r2, #1
 80029a4:	601a      	str	r2, [r3, #0]

}
 80029a6:	bf00      	nop
 80029a8:	46bd      	mov	sp, r7
 80029aa:	bc80      	pop	{r7}
 80029ac:	4770      	bx	lr
 80029ae:	bf00      	nop
 80029b0:	20000004 	.word	0x20000004
 80029b4:	20000000 	.word	0x20000000

080029b8 <TIM3_IRQHandler>:

void TIM3_IRQHandler(){
 80029b8:	b480      	push	{r7}
 80029ba:	af00      	add	r7, sp, #0
	TIM3->SR &=~(1<<0);
 80029bc:	4b07      	ldr	r3, [pc, #28]	; (80029dc <TIM3_IRQHandler+0x24>)
 80029be:	691b      	ldr	r3, [r3, #16]
 80029c0:	4a06      	ldr	r2, [pc, #24]	; (80029dc <TIM3_IRQHandler+0x24>)
 80029c2:	f023 0301 	bic.w	r3, r3, #1
 80029c6:	6113      	str	r3, [r2, #16]
	overflowtims1++;
 80029c8:	4b05      	ldr	r3, [pc, #20]	; (80029e0 <TIM3_IRQHandler+0x28>)
 80029ca:	881b      	ldrh	r3, [r3, #0]
 80029cc:	3301      	adds	r3, #1
 80029ce:	b29a      	uxth	r2, r3
 80029d0:	4b03      	ldr	r3, [pc, #12]	; (80029e0 <TIM3_IRQHandler+0x28>)
 80029d2:	801a      	strh	r2, [r3, #0]
}
 80029d4:	bf00      	nop
 80029d6:	46bd      	mov	sp, r7
 80029d8:	bc80      	pop	{r7}
 80029da:	4770      	bx	lr
 80029dc:	40000400 	.word	0x40000400
 80029e0:	2000002a 	.word	0x2000002a

080029e4 <TIM4_IRQHandler>:

void TIM4_IRQHandler(){
 80029e4:	b480      	push	{r7}
 80029e6:	af00      	add	r7, sp, #0
	TIM4->SR &=~(1<<0);
 80029e8:	4b07      	ldr	r3, [pc, #28]	; (8002a08 <TIM4_IRQHandler+0x24>)
 80029ea:	691b      	ldr	r3, [r3, #16]
 80029ec:	4a06      	ldr	r2, [pc, #24]	; (8002a08 <TIM4_IRQHandler+0x24>)
 80029ee:	f023 0301 	bic.w	r3, r3, #1
 80029f2:	6113      	str	r3, [r2, #16]
	overflowtims++;
 80029f4:	4b05      	ldr	r3, [pc, #20]	; (8002a0c <TIM4_IRQHandler+0x28>)
 80029f6:	881b      	ldrh	r3, [r3, #0]
 80029f8:	3301      	adds	r3, #1
 80029fa:	b29a      	uxth	r2, r3
 80029fc:	4b03      	ldr	r3, [pc, #12]	; (8002a0c <TIM4_IRQHandler+0x28>)
 80029fe:	801a      	strh	r2, [r3, #0]
}
 8002a00:	bf00      	nop
 8002a02:	46bd      	mov	sp, r7
 8002a04:	bc80      	pop	{r7}
 8002a06:	4770      	bx	lr
 8002a08:	40000800 	.word	0x40000800
 8002a0c:	20000028 	.word	0x20000028

08002a10 <USART1_IRQHandler>:
}


//ISR
void USART1_IRQHandler (void)
{
 8002a10:	b580      	push	{r7, lr}
 8002a12:	b082      	sub	sp, #8
 8002a14:	af00      	add	r7, sp, #0
	USART_Config* config1;
	config1->P_IRQ_CALLBACK () ;
 8002a16:	687b      	ldr	r3, [r7, #4]
 8002a18:	691b      	ldr	r3, [r3, #16]
 8002a1a:	4798      	blx	r3

}
 8002a1c:	bf00      	nop
 8002a1e:	3708      	adds	r7, #8
 8002a20:	46bd      	mov	sp, r7
 8002a22:	bd80      	pop	{r7, pc}

08002a24 <USART2_IRQHandler>:

void USART2_IRQHandler (void)
{
 8002a24:	b580      	push	{r7, lr}
 8002a26:	b082      	sub	sp, #8
 8002a28:	af00      	add	r7, sp, #0
	USART_Config* config;
	config->P_IRQ_CALLBACK () ;
 8002a2a:	687b      	ldr	r3, [r7, #4]
 8002a2c:	691b      	ldr	r3, [r3, #16]
 8002a2e:	4798      	blx	r3

}
 8002a30:	bf00      	nop
 8002a32:	3708      	adds	r7, #8
 8002a34:	46bd      	mov	sp, r7
 8002a36:	bd80      	pop	{r7, pc}

08002a38 <USART3_IRQHandler>:
void USART3_IRQHandler (void)
{
 8002a38:	b580      	push	{r7, lr}
 8002a3a:	b082      	sub	sp, #8
 8002a3c:	af00      	add	r7, sp, #0
	USART_Config* config;
	config->P_IRQ_CALLBACK () ;
 8002a3e:	687b      	ldr	r3, [r7, #4]
 8002a40:	691b      	ldr	r3, [r3, #16]
 8002a42:	4798      	blx	r3
}
 8002a44:	bf00      	nop
 8002a46:	3708      	adds	r7, #8
 8002a48:	46bd      	mov	sp, r7
 8002a4a:	bd80      	pop	{r7, pc}

08002a4c <RCC_INIT>:
/******************************
 * Generic Functions
 *****************************/

void RCC_INIT(void)
{
 8002a4c:	b580      	push	{r7, lr}
 8002a4e:	af00      	add	r7, sp, #0
	MCAL_RCC_GetSYS_CLCKFreq(RCC_8MHZ);
 8002a50:	2000      	movs	r0, #0
 8002a52:	f7ff fc21 	bl	8002298 <MCAL_RCC_GetSYS_CLCKFreq>
	MCAL_RCC_GetHCLKFreq();
 8002a56:	f7ff fca3 	bl	80023a0 <MCAL_RCC_GetHCLKFreq>
	MCAL_RCC_GetPCLK1Freq();
 8002a5a:	f7ff fcaf 	bl	80023bc <MCAL_RCC_GetPCLK1Freq>
	MCAL_RCC_GetPCLK2Freq();
 8002a5e:	f7ff fcbb 	bl	80023d8 <MCAL_RCC_GetPCLK2Freq>
	MCAL_RCC_Peripherals_enable(APB2, RCC_GPIOA, Enable);
 8002a62:	2201      	movs	r2, #1
 8002a64:	2102      	movs	r1, #2
 8002a66:	2002      	movs	r0, #2
 8002a68:	f7ff fbbc 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
	MCAL_RCC_Peripherals_enable(APB2, RCC_GPIOB, Enable);
 8002a6c:	2201      	movs	r2, #1
 8002a6e:	2103      	movs	r1, #3
 8002a70:	2002      	movs	r0, #2
 8002a72:	f7ff fbb7 	bl	80021e4 <MCAL_RCC_Peripherals_enable>
}
 8002a76:	bf00      	nop
 8002a78:	bd80      	pop	{r7, pc}

08002a7a <HW_INIT>:


void HW_INIT()
{
 8002a7a:	b580      	push	{r7, lr}
 8002a7c:	af00      	add	r7, sp, #0
	//DC Motor Initialization
	HAL_MOTOR_Init();
 8002a7e:	f7fe fa33 	bl	8000ee8 <HAL_MOTOR_Init>

	//Ultrasonic Sensors Initialization
	HAL_ULTRASONIC_INIT(ULT1);
 8002a82:	2000      	movs	r0, #0
 8002a84:	f7fe fbe8 	bl	8001258 <HAL_ULTRASONIC_INIT>
	HAL_ULTRASONIC_INIT(ULT2);
 8002a88:	2001      	movs	r0, #1
 8002a8a:	f7fe fbe5 	bl	8001258 <HAL_ULTRASONIC_INIT>
	HAL_ULTRASONIC_INIT(ULT3);
 8002a8e:	2002      	movs	r0, #2
 8002a90:	f7fe fbe2 	bl	8001258 <HAL_ULTRASONIC_INIT>
	HAL_ULTRASONIC_INIT(ULT4);
 8002a94:	2003      	movs	r0, #3
 8002a96:	f7fe fbdf 	bl	8001258 <HAL_ULTRASONIC_INIT>

}
 8002a9a:	bf00      	nop
 8002a9c:	bd80      	pop	{r7, pc}
	...

08002aa0 <CALCULATION_COUNTER>:
 * @param [in] 	- none
 * @retval 		- none
 * Note			- none
 */
uint32_t CALCULATION_COUNTER (uint32_t distance ,float speed )
{
 8002aa0:	b590      	push	{r4, r7, lr}
 8002aa2:	b085      	sub	sp, #20
 8002aa4:	af00      	add	r7, sp, #0
 8002aa6:	6078      	str	r0, [r7, #4]
 8002aa8:	6039      	str	r1, [r7, #0]
	uint32_t counter;
	counter=((distance/speed)*1000)/40.01;
 8002aaa:	6878      	ldr	r0, [r7, #4]
 8002aac:	f7fe f854 	bl	8000b58 <__aeabi_ui2f>
 8002ab0:	4603      	mov	r3, r0
 8002ab2:	6839      	ldr	r1, [r7, #0]
 8002ab4:	4618      	mov	r0, r3
 8002ab6:	f7fe f95b 	bl	8000d70 <__aeabi_fdiv>
 8002aba:	4603      	mov	r3, r0
 8002abc:	490e      	ldr	r1, [pc, #56]	; (8002af8 <CALCULATION_COUNTER+0x58>)
 8002abe:	4618      	mov	r0, r3
 8002ac0:	f7fe f8a2 	bl	8000c08 <__aeabi_fmul>
 8002ac4:	4603      	mov	r3, r0
 8002ac6:	4618      	mov	r0, r3
 8002ac8:	f7fd fcb6 	bl	8000438 <__aeabi_f2d>
 8002acc:	a308      	add	r3, pc, #32	; (adr r3, 8002af0 <CALCULATION_COUNTER+0x50>)
 8002ace:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002ad2:	f7fd fe33 	bl	800073c <__aeabi_ddiv>
 8002ad6:	4603      	mov	r3, r0
 8002ad8:	460c      	mov	r4, r1
 8002ada:	4618      	mov	r0, r3
 8002adc:	4621      	mov	r1, r4
 8002ade:	f7fd ff15 	bl	800090c <__aeabi_d2uiz>
 8002ae2:	4603      	mov	r3, r0
 8002ae4:	60fb      	str	r3, [r7, #12]
	return counter;
 8002ae6:	68fb      	ldr	r3, [r7, #12]

}
 8002ae8:	4618      	mov	r0, r3
 8002aea:	3714      	adds	r7, #20
 8002aec:	46bd      	mov	sp, r7
 8002aee:	bd90      	pop	{r4, r7, pc}
 8002af0:	ae147ae1 	.word	0xae147ae1
 8002af4:	40440147 	.word	0x40440147
 8002af8:	447a0000 	.word	0x447a0000

08002afc <main>:
//=============================================================================================

//===================================================================================

int main(void)
{
 8002afc:	b580      	push	{r7, lr}
 8002afe:	af00      	add	r7, sp, #0
	/*MCU Peripherals and HW Components Initialization*/
	RCC_INIT();
 8002b00:	f7ff ffa4 	bl	8002a4c <RCC_INIT>
	HW_INIT();
 8002b04:	f7ff ffb9 	bl	8002a7a <HW_INIT>

	PARALLEL_COUNTER=(CALCULATION_COUNTER(PARALLEL_PARKING_LENGTH, CAR_SPEED)/2);
 8002b08:	490d      	ldr	r1, [pc, #52]	; (8002b40 <main+0x44>)
 8002b0a:	2019      	movs	r0, #25
 8002b0c:	f7ff ffc8 	bl	8002aa0 <CALCULATION_COUNTER>
 8002b10:	4603      	mov	r3, r0
 8002b12:	085b      	lsrs	r3, r3, #1
 8002b14:	4a0b      	ldr	r2, [pc, #44]	; (8002b44 <main+0x48>)
 8002b16:	6013      	str	r3, [r2, #0]
	PERPENDICULAR_COUNTER=(CALCULATION_COUNTER(PERPINDECULAR_PARKING_LENGTH, CAR_SPEED)/2);
 8002b18:	4909      	ldr	r1, [pc, #36]	; (8002b40 <main+0x44>)
 8002b1a:	200c      	movs	r0, #12
 8002b1c:	f7ff ffc0 	bl	8002aa0 <CALCULATION_COUNTER>
 8002b20:	4603      	mov	r3, r0
 8002b22:	085b      	lsrs	r3, r3, #1
 8002b24:	4a08      	ldr	r2, [pc, #32]	; (8002b48 <main+0x4c>)
 8002b26:	6013      	str	r3, [r2, #0]

	while(1)
	{


		STATE1();
 8002b28:	f000 f812 	bl	8002b50 <STATE1>
		STATE2();
 8002b2c:	f000 f83a 	bl	8002ba4 <STATE2>
		if(STATE == 3)
 8002b30:	4b06      	ldr	r3, [pc, #24]	; (8002b4c <main+0x50>)
 8002b32:	781b      	ldrb	r3, [r3, #0]
 8002b34:	2b03      	cmp	r3, #3
 8002b36:	d1f7      	bne.n	8002b28 <main+0x2c>
		{
			STATE3();
 8002b38:	f000 f88c 	bl	8002c54 <STATE3>
		STATE1();
 8002b3c:	e7f4      	b.n	8002b28 <main+0x2c>
 8002b3e:	bf00      	nop
 8002b40:	41173333 	.word	0x41173333
 8002b44:	2000003c 	.word	0x2000003c
 8002b48:	20000038 	.word	0x20000038
 8002b4c:	2000002e 	.word	0x2000002e

08002b50 <STATE1>:
 * @param [in] 	- none
 * @retval 		- none
 * Note			- none
 */
void STATE1(void)
{
 8002b50:	b580      	push	{r7, lr}
 8002b52:	af00      	add	r7, sp, #0
	//Start Moving and Searching
	HAL_MOTOR_Motion(FORWARD);
 8002b54:	2000      	movs	r0, #0
 8002b56:	f7fe f9d7 	bl	8000f08 <HAL_MOTOR_Motion>
	HAL_Servo_Set_Angle(90, clk);
 8002b5a:	4a0e      	ldr	r2, [pc, #56]	; (8002b94 <STATE1+0x44>)
 8002b5c:	f04f 0000 	mov.w	r0, #0
 8002b60:	490d      	ldr	r1, [pc, #52]	; (8002b98 <STATE1+0x48>)
 8002b62:	f7fe fa05 	bl	8000f70 <HAL_Servo_Set_Angle>
	MCAL_GPIO_WRITEPIN(GPIOA, PIN_12, 1);
 8002b66:	2201      	movs	r2, #1
 8002b68:	210c      	movs	r1, #12
 8002b6a:	480c      	ldr	r0, [pc, #48]	; (8002b9c <STATE1+0x4c>)
 8002b6c:	f7fe fd9a 	bl	80016a4 <MCAL_GPIO_WRITEPIN>

	//Check if any obstacle in front of the car
	dist3=HAL_ULTRASONIC_GET_DISTANCE(ULT1);
 8002b70:	2000      	movs	r0, #0
 8002b72:	f7fe fbc5 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002b76:	4602      	mov	r2, r0
 8002b78:	4b09      	ldr	r3, [pc, #36]	; (8002ba0 <STATE1+0x50>)
 8002b7a:	601a      	str	r2, [r3, #0]
	if (dist3 <= ULTRA1_DISTANCE)
 8002b7c:	4b08      	ldr	r3, [pc, #32]	; (8002ba0 <STATE1+0x50>)
 8002b7e:	681b      	ldr	r3, [r3, #0]
 8002b80:	2b05      	cmp	r3, #5
 8002b82:	d801      	bhi.n	8002b88 <STATE1+0x38>
	{
		AVOID_FRONT_OBSTACLES();
 8002b84:	f000 f8d6 	bl	8002d34 <AVOID_FRONT_OBSTACLES>
	}

	//Start moving again
	HAL_MOTOR_Motion(FORWARD);
 8002b88:	2000      	movs	r0, #0
 8002b8a:	f7fe f9bd 	bl	8000f08 <HAL_MOTOR_Motion>

}
 8002b8e:	bf00      	nop
 8002b90:	bd80      	pop	{r7, pc}
 8002b92:	bf00      	nop
 8002b94:	007a1200 	.word	0x007a1200
 8002b98:	40568000 	.word	0x40568000
 8002b9c:	40010800 	.word	0x40010800
 8002ba0:	200000c4 	.word	0x200000c4

08002ba4 <STATE2>:
 * @param [in] 	- none
 * @retval 		- none
 * Note			- none
 */
void STATE2(void)
{
 8002ba4:	b580      	push	{r7, lr}
 8002ba6:	af00      	add	r7, sp, #0
	//Update the distance of ULT2
	dist1=HAL_ULTRASONIC_GET_DISTANCE(ULT2);
 8002ba8:	2001      	movs	r0, #1
 8002baa:	f7fe fba9 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002bae:	4602      	mov	r2, r0
 8002bb0:	4b21      	ldr	r3, [pc, #132]	; (8002c38 <STATE2+0x94>)
 8002bb2:	601a      	str	r2, [r3, #0]

	//Check for empty spot
	if(dist1>=PARALLEL_PARKING_WIDTH)
 8002bb4:	4b20      	ldr	r3, [pc, #128]	; (8002c38 <STATE2+0x94>)
 8002bb6:	681b      	ldr	r3, [r3, #0]
 8002bb8:	2b18      	cmp	r3, #24
 8002bba:	d93b      	bls.n	8002c34 <STATE2+0x90>
	{
		while(dist1>=PARALLEL_PARKING_WIDTH ) // update the distance
 8002bbc:	e033      	b.n	8002c26 <STATE2+0x82>
		{
			dist3=HAL_ULTRASONIC_GET_DISTANCE(ULT1);
 8002bbe:	2000      	movs	r0, #0
 8002bc0:	f7fe fb9e 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002bc4:	4602      	mov	r2, r0
 8002bc6:	4b1d      	ldr	r3, [pc, #116]	; (8002c3c <STATE2+0x98>)
 8002bc8:	601a      	str	r2, [r3, #0]

			//Check if any obstacle in front of the car
			if (dist3<=ULTRA1_DISTANCE)
 8002bca:	4b1c      	ldr	r3, [pc, #112]	; (8002c3c <STATE2+0x98>)
 8002bcc:	681b      	ldr	r3, [r3, #0]
 8002bce:	2b05      	cmp	r3, #5
 8002bd0:	d801      	bhi.n	8002bd6 <STATE2+0x32>
			{
				AVOID_FRONT_OBSTACLES();
 8002bd2:	f000 f8af 	bl	8002d34 <AVOID_FRONT_OBSTACLES>
			}

			HAL_MOTOR_Motion(FORWARD);
 8002bd6:	2000      	movs	r0, #0
 8002bd8:	f7fe f996 	bl	8000f08 <HAL_MOTOR_Motion>

			if((dist1>=PERPINDECULAR_PARKING_WIDTH))
 8002bdc:	4b16      	ldr	r3, [pc, #88]	; (8002c38 <STATE2+0x94>)
 8002bde:	681b      	ldr	r3, [r3, #0]
 8002be0:	2b32      	cmp	r3, #50	; 0x32
 8002be2:	d904      	bls.n	8002bee <STATE2+0x4a>
			{
				total_steps_perpendicular++;
 8002be4:	4b16      	ldr	r3, [pc, #88]	; (8002c40 <STATE2+0x9c>)
 8002be6:	681b      	ldr	r3, [r3, #0]
 8002be8:	3301      	adds	r3, #1
 8002bea:	4a15      	ldr	r2, [pc, #84]	; (8002c40 <STATE2+0x9c>)
 8002bec:	6013      	str	r3, [r2, #0]
			}

			dist1=HAL_ULTRASONIC_GET_DISTANCE(ULT2);
 8002bee:	2001      	movs	r0, #1
 8002bf0:	f7fe fb86 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002bf4:	4602      	mov	r2, r0
 8002bf6:	4b10      	ldr	r3, [pc, #64]	; (8002c38 <STATE2+0x94>)
 8002bf8:	601a      	str	r2, [r3, #0]
			total_steps_parallel++;
 8002bfa:	4b12      	ldr	r3, [pc, #72]	; (8002c44 <STATE2+0xa0>)
 8002bfc:	681b      	ldr	r3, [r3, #0]
 8002bfe:	3301      	adds	r3, #1
 8002c00:	4a10      	ldr	r2, [pc, #64]	; (8002c44 <STATE2+0xa0>)
 8002c02:	6013      	str	r3, [r2, #0]

			//if their is no more obstacles or the car is parking in a free space, it will parking without a feedback from ultrasonic sensor
			dist1=HAL_ULTRASONIC_GET_DISTANCE(ULT2);
 8002c04:	2001      	movs	r0, #1
 8002c06:	f7fe fb7b 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002c0a:	4602      	mov	r2, r0
 8002c0c:	4b0a      	ldr	r3, [pc, #40]	; (8002c38 <STATE2+0x94>)
 8002c0e:	601a      	str	r2, [r3, #0]
			delay(10, U_ms, clk);
 8002c10:	4a0d      	ldr	r2, [pc, #52]	; (8002c48 <STATE2+0xa4>)
 8002c12:	2100      	movs	r1, #0
 8002c14:	200a      	movs	r0, #10
 8002c16:	f7ff fd93 	bl	8002740 <delay>
			dist2=HAL_ULTRASONIC_GET_DISTANCE(ULT3);
 8002c1a:	2002      	movs	r0, #2
 8002c1c:	f7fe fb70 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002c20:	4602      	mov	r2, r0
 8002c22:	4b0a      	ldr	r3, [pc, #40]	; (8002c4c <STATE2+0xa8>)
 8002c24:	601a      	str	r2, [r3, #0]
		while(dist1>=PARALLEL_PARKING_WIDTH ) // update the distance
 8002c26:	4b04      	ldr	r3, [pc, #16]	; (8002c38 <STATE2+0x94>)
 8002c28:	681b      	ldr	r3, [r3, #0]
 8002c2a:	2b18      	cmp	r3, #24
 8002c2c:	d8c7      	bhi.n	8002bbe <STATE2+0x1a>
			//
			//				}
			//			}

		}
		STATE = 3;
 8002c2e:	4b08      	ldr	r3, [pc, #32]	; (8002c50 <STATE2+0xac>)
 8002c30:	2203      	movs	r2, #3
 8002c32:	701a      	strb	r2, [r3, #0]
	}

}
 8002c34:	bf00      	nop
 8002c36:	bd80      	pop	{r7, pc}
 8002c38:	200000cc 	.word	0x200000cc
 8002c3c:	200000c4 	.word	0x200000c4
 8002c40:	20000034 	.word	0x20000034
 8002c44:	20000030 	.word	0x20000030
 8002c48:	007a1200 	.word	0x007a1200
 8002c4c:	200000c8 	.word	0x200000c8
 8002c50:	2000002e 	.word	0x2000002e

08002c54 <STATE3>:
 * @param [in] 	- none
 * @retval 		- none
 * Note			- none
 */
void STATE3(void)
{
 8002c54:	b580      	push	{r7, lr}
 8002c56:	af00      	add	r7, sp, #0

	if(STATE == 3)
 8002c58:	4b2f      	ldr	r3, [pc, #188]	; (8002d18 <STATE3+0xc4>)
 8002c5a:	781b      	ldrb	r3, [r3, #0]
 8002c5c:	2b03      	cmp	r3, #3
 8002c5e:	d159      	bne.n	8002d14 <STATE3+0xc0>
	{

		HAL_MOTOR_Motion(FORWARD);
 8002c60:	2000      	movs	r0, #0
 8002c62:	f7fe f951 	bl	8000f08 <HAL_MOTOR_Motion>
		dist2=HAL_ULTRASONIC_GET_DISTANCE(ULT3);
 8002c66:	2002      	movs	r0, #2
 8002c68:	f7fe fb4a 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002c6c:	4602      	mov	r2, r0
 8002c6e:	4b2b      	ldr	r3, [pc, #172]	; (8002d1c <STATE3+0xc8>)
 8002c70:	601a      	str	r2, [r3, #0]

		while(dist2>=PARALLEL_PARKING_WIDTH) // update the distance
 8002c72:	e008      	b.n	8002c86 <STATE3+0x32>
		{
			dist2=HAL_ULTRASONIC_GET_DISTANCE(ULT3);
 8002c74:	2002      	movs	r0, #2
 8002c76:	f7fe fb43 	bl	8001300 <HAL_ULTRASONIC_GET_DISTANCE>
 8002c7a:	4602      	mov	r2, r0
 8002c7c:	4b27      	ldr	r3, [pc, #156]	; (8002d1c <STATE3+0xc8>)
 8002c7e:	601a      	str	r2, [r3, #0]
			HAL_MOTOR_Motion(FORWARD);
 8002c80:	2000      	movs	r0, #0
 8002c82:	f7fe f941 	bl	8000f08 <HAL_MOTOR_Motion>
		while(dist2>=PARALLEL_PARKING_WIDTH) // update the distance
 8002c86:	4b25      	ldr	r3, [pc, #148]	; (8002d1c <STATE3+0xc8>)
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	2b18      	cmp	r3, #24
 8002c8c:	d8f2      	bhi.n	8002c74 <STATE3+0x20>
			//

			//
		}

		if( total_steps_parallel >=PARALLEL_COUNTER )
 8002c8e:	4b24      	ldr	r3, [pc, #144]	; (8002d20 <STATE3+0xcc>)
 8002c90:	681a      	ldr	r2, [r3, #0]
 8002c92:	4b24      	ldr	r3, [pc, #144]	; (8002d24 <STATE3+0xd0>)
 8002c94:	681b      	ldr	r3, [r3, #0]
 8002c96:	429a      	cmp	r2, r3
 8002c98:	d31b      	bcc.n	8002cd2 <STATE3+0x7e>
		{

			HAL_MOTOR_Motion(STOP);
 8002c9a:	2002      	movs	r0, #2
 8002c9c:	f7fe f934 	bl	8000f08 <HAL_MOTOR_Motion>
			delay(250, U_ms, clk);
 8002ca0:	4a21      	ldr	r2, [pc, #132]	; (8002d28 <STATE3+0xd4>)
 8002ca2:	2100      	movs	r1, #0
 8002ca4:	20fa      	movs	r0, #250	; 0xfa
 8002ca6:	f7ff fd4b 	bl	8002740 <delay>
			PARALLEL_PATH_PLANNING();
 8002caa:	f000 f849 	bl	8002d40 <PARALLEL_PATH_PLANNING>
			HAL_MOTOR_Motion(STOP);
 8002cae:	2002      	movs	r0, #2
 8002cb0:	f7fe f92a 	bl	8000f08 <HAL_MOTOR_Motion>
			delay(5000, U_ms, clk);
 8002cb4:	4a1c      	ldr	r2, [pc, #112]	; (8002d28 <STATE3+0xd4>)
 8002cb6:	2100      	movs	r1, #0
 8002cb8:	f241 3088 	movw	r0, #5000	; 0x1388
 8002cbc:	f7ff fd40 	bl	8002740 <delay>
			UN_PARKING_PARALLEL_PATH_PLANNING();
 8002cc0:	f000 f8da 	bl	8002e78 <UN_PARKING_PARALLEL_PATH_PLANNING>
			delay(5000, U_ms, clk);
 8002cc4:	4a18      	ldr	r2, [pc, #96]	; (8002d28 <STATE3+0xd4>)
 8002cc6:	2100      	movs	r1, #0
 8002cc8:	f241 3088 	movw	r0, #5000	; 0x1388
 8002ccc:	f7ff fd38 	bl	8002740 <delay>
			delay(5000, U_ms, clk);

		}
	}

}
 8002cd0:	e020      	b.n	8002d14 <STATE3+0xc0>
		else if (total_steps_perpendicular >=  PERPENDICULAR_COUNTER)
 8002cd2:	4b16      	ldr	r3, [pc, #88]	; (8002d2c <STATE3+0xd8>)
 8002cd4:	681a      	ldr	r2, [r3, #0]
 8002cd6:	4b16      	ldr	r3, [pc, #88]	; (8002d30 <STATE3+0xdc>)
 8002cd8:	681b      	ldr	r3, [r3, #0]
 8002cda:	429a      	cmp	r2, r3
 8002cdc:	d31a      	bcc.n	8002d14 <STATE3+0xc0>
			HAL_MOTOR_Motion(STOP);
 8002cde:	2002      	movs	r0, #2
 8002ce0:	f7fe f912 	bl	8000f08 <HAL_MOTOR_Motion>
			delay(250, U_ms, clk);
 8002ce4:	4a10      	ldr	r2, [pc, #64]	; (8002d28 <STATE3+0xd4>)
 8002ce6:	2100      	movs	r1, #0
 8002ce8:	20fa      	movs	r0, #250	; 0xfa
 8002cea:	f7ff fd29 	bl	8002740 <delay>
			PERPENDICULAR_PATH_PLANNING();
 8002cee:	f000 f961 	bl	8002fb4 <PERPENDICULAR_PATH_PLANNING>
			HAL_MOTOR_Motion(STOP);
 8002cf2:	2002      	movs	r0, #2
 8002cf4:	f7fe f908 	bl	8000f08 <HAL_MOTOR_Motion>
			delay(5000, U_ms, clk);
 8002cf8:	4a0b      	ldr	r2, [pc, #44]	; (8002d28 <STATE3+0xd4>)
 8002cfa:	2100      	movs	r1, #0
 8002cfc:	f241 3088 	movw	r0, #5000	; 0x1388
 8002d00:	f7ff fd1e 	bl	8002740 <delay>
			UN_PARKING_PERPENDICULAR_PATH_PLANNING();
 8002d04:	f000 f9a8 	bl	8003058 <UN_PARKING_PERPENDICULAR_PATH_PLANNING>
			delay(5000, U_ms, clk);
 8002d08:	4a07      	ldr	r2, [pc, #28]	; (8002d28 <STATE3+0xd4>)
 8002d0a:	2100      	movs	r1, #0
 8002d0c:	f241 3088 	movw	r0, #5000	; 0x1388
 8002d10:	f7ff fd16 	bl	8002740 <delay>
}
 8002d14:	bf00      	nop
 8002d16:	bd80      	pop	{r7, pc}
 8002d18:	2000002e 	.word	0x2000002e
 8002d1c:	200000c8 	.word	0x200000c8
 8002d20:	20000030 	.word	0x20000030
 8002d24:	2000003c 	.word	0x2000003c
 8002d28:	007a1200 	.word	0x007a1200
 8002d2c:	20000034 	.word	0x20000034
 8002d30:	20000038 	.word	0x20000038

08002d34 <AVOID_FRONT_OBSTACLES>:
 * @param [in] 	- none
 * @retval 		- none
 * Note			- none
 */
void AVOID_FRONT_OBSTACLES(void)
{
 8002d34:	b480      	push	{r7}
 8002d36:	af00      	add	r7, sp, #0
	//
	//		dist3=HAL_ULTRASONIC_GET_DISTANCE(ULT1);

	//	}

}
 8002d38:	bf00      	nop
 8002d3a:	46bd      	mov	sp, r7
 8002d3c:	bc80      	pop	{r7}
 8002d3e:	4770      	bx	lr

08002d40 <PARALLEL_PATH_PLANNING>:
 * @param [in] 	- none
 * @retval 		- none
 * Note			- none
 */
void PARALLEL_PATH_PLANNING(void)
{
 8002d40:	b580      	push	{r7, lr}
 8002d42:	af00      	add	r7, sp, #0
	/**********************
	 * Start point
	 *********************/
	// Stop the car with the end of the obstacle
	HAL_MOTOR_Motion(STOP);
 8002d44:	2002      	movs	r0, #2
 8002d46:	f7fe f8df 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(200, U_ms, CLK);
 8002d4a:	4a47      	ldr	r2, [pc, #284]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002d4c:	2100      	movs	r1, #0
 8002d4e:	20c8      	movs	r0, #200	; 0xc8
 8002d50:	f7ff fcf6 	bl	8002740 <delay>
	HAL_MOTOR_Motion(FORWARD);
 8002d54:	2000      	movs	r0, #0
 8002d56:	f7fe f8d7 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_START_POS_TIME, U_ms, CLK);
 8002d5a:	4a43      	ldr	r2, [pc, #268]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002d5c:	2100      	movs	r1, #0
 8002d5e:	f240 5046 	movw	r0, #1350	; 0x546
 8002d62:	f7ff fced 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002d66:	2002      	movs	r0, #2
 8002d68:	f7fe f8ce 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002d6c:	4a3e      	ldr	r2, [pc, #248]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002d6e:	2100      	movs	r1, #0
 8002d70:	20fa      	movs	r0, #250	; 0xfa
 8002d72:	f7ff fce5 	bl	8002740 <delay>

	/**********************
	 * First maneuver
	 *********************/
	// First arc mode
	HAL_Servo_Set_Angle(PARALLEL_ARC_STEERING_ANGLE1, CLK);
 8002d76:	4a3c      	ldr	r2, [pc, #240]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002d78:	f04f 0000 	mov.w	r0, #0
 8002d7c:	493b      	ldr	r1, [pc, #236]	; (8002e6c <PARALLEL_PATH_PLANNING+0x12c>)
 8002d7e:	f7fe f8f7 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002d82:	4a39      	ldr	r2, [pc, #228]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002d84:	2100      	movs	r1, #0
 8002d86:	20fa      	movs	r0, #250	; 0xfa
 8002d88:	f7ff fcda 	bl	8002740 <delay>
	HAL_MOTOR_Motion(REVERSE);
 8002d8c:	2001      	movs	r0, #1
 8002d8e:	f7fe f8bb 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_ARC1_TIME, U_ms, CLK);
 8002d92:	4a35      	ldr	r2, [pc, #212]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002d94:	2100      	movs	r1, #0
 8002d96:	f640 2028 	movw	r0, #2600	; 0xa28
 8002d9a:	f7ff fcd1 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002d9e:	2002      	movs	r0, #2
 8002da0:	f7fe f8b2 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002da4:	4a30      	ldr	r2, [pc, #192]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002da6:	2100      	movs	r1, #0
 8002da8:	20fa      	movs	r0, #250	; 0xfa
 8002daa:	f7ff fcc9 	bl	8002740 <delay>

	// Straight line mode
	HAL_Servo_Set_Angle(PARALLEL_LINE_STEERING_ANGLE, CLK);
 8002dae:	4a2e      	ldr	r2, [pc, #184]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002db0:	f04f 0000 	mov.w	r0, #0
 8002db4:	492e      	ldr	r1, [pc, #184]	; (8002e70 <PARALLEL_PATH_PLANNING+0x130>)
 8002db6:	f7fe f8db 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002dba:	4a2b      	ldr	r2, [pc, #172]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002dbc:	2100      	movs	r1, #0
 8002dbe:	20fa      	movs	r0, #250	; 0xfa
 8002dc0:	f7ff fcbe 	bl	8002740 <delay>
	HAL_MOTOR_Motion(REVERSE);
 8002dc4:	2001      	movs	r0, #1
 8002dc6:	f7fe f89f 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_LINE_TIME, U_ms, CLK);
 8002dca:	4a27      	ldr	r2, [pc, #156]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002dcc:	2100      	movs	r1, #0
 8002dce:	f640 2028 	movw	r0, #2600	; 0xa28
 8002dd2:	f7ff fcb5 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002dd6:	2002      	movs	r0, #2
 8002dd8:	f7fe f896 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002ddc:	4a22      	ldr	r2, [pc, #136]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002dde:	2100      	movs	r1, #0
 8002de0:	20fa      	movs	r0, #250	; 0xfa
 8002de2:	f7ff fcad 	bl	8002740 <delay>

	// Second arc mode
	HAL_Servo_Set_Angle(PARALLEL_ARC_STEERING_ANGLE3, CLK);
 8002de6:	4a20      	ldr	r2, [pc, #128]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002de8:	a11d      	add	r1, pc, #116	; (adr r1, 8002e60 <PARALLEL_PATH_PLANNING+0x120>)
 8002dea:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002dee:	f7fe f8bf 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002df2:	4a1d      	ldr	r2, [pc, #116]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002df4:	2100      	movs	r1, #0
 8002df6:	20fa      	movs	r0, #250	; 0xfa
 8002df8:	f7ff fca2 	bl	8002740 <delay>
	HAL_MOTOR_Motion(REVERSE);
 8002dfc:	2001      	movs	r0, #1
 8002dfe:	f7fe f883 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_ARC2_TIME, U_ms, CLK);
 8002e02:	4a19      	ldr	r2, [pc, #100]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002e04:	2100      	movs	r1, #0
 8002e06:	f44f 602f 	mov.w	r0, #2800	; 0xaf0
 8002e0a:	f7ff fc99 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002e0e:	2002      	movs	r0, #2
 8002e10:	f7fe f87a 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002e14:	4a14      	ldr	r2, [pc, #80]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002e16:	2100      	movs	r1, #0
 8002e18:	20fa      	movs	r0, #250	; 0xfa
 8002e1a:	f7ff fc91 	bl	8002740 <delay>
	HAL_Servo_Set_Angle(90, CLK);
 8002e1e:	4a12      	ldr	r2, [pc, #72]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002e20:	f04f 0000 	mov.w	r0, #0
 8002e24:	4912      	ldr	r1, [pc, #72]	; (8002e70 <PARALLEL_PATH_PLANNING+0x130>)
 8002e26:	f7fe f8a3 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002e2a:	4a0f      	ldr	r2, [pc, #60]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002e2c:	2100      	movs	r1, #0
 8002e2e:	20fa      	movs	r0, #250	; 0xfa
 8002e30:	f7ff fc86 	bl	8002740 <delay>
	/**********************
	 * Second maneuver
	 *********************/
	// Made the car stop in the middle of its parking space
	// Front distance = 8cm, move 4cm
	HAL_MOTOR_Motion(FORWARD);
 8002e34:	2000      	movs	r0, #0
 8002e36:	f7fe f867 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(500, U_ms, CLK);
 8002e3a:	4a0b      	ldr	r2, [pc, #44]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002e3c:	2100      	movs	r1, #0
 8002e3e:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002e42:	f7ff fc7d 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002e46:	2002      	movs	r0, #2
 8002e48:	f7fe f85e 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(10000, U_ms, CLK);
 8002e4c:	4a06      	ldr	r2, [pc, #24]	; (8002e68 <PARALLEL_PATH_PLANNING+0x128>)
 8002e4e:	2100      	movs	r1, #0
 8002e50:	f242 7010 	movw	r0, #10000	; 0x2710
 8002e54:	f7ff fc74 	bl	8002740 <delay>

}
 8002e58:	bf00      	nop
 8002e5a:	bd80      	pop	{r7, pc}
 8002e5c:	f3af 8000 	nop.w
 8002e60:	00000000 	.word	0x00000000
 8002e64:	4060e000 	.word	0x4060e000
 8002e68:	007a1200 	.word	0x007a1200
 8002e6c:	40468000 	.word	0x40468000
 8002e70:	40568000 	.word	0x40568000
 8002e74:	00000000 	.word	0x00000000

08002e78 <UN_PARKING_PARALLEL_PATH_PLANNING>:
void UN_PARKING_PARALLEL_PATH_PLANNING(void)
{
 8002e78:	b580      	push	{r7, lr}
 8002e7a:	af00      	add	r7, sp, #0
	/**********************
	 * Second maneuver
	 *********************/
	// Made the car stop in the middle of its parking space
	// Front distance = 8cm, move 4cm
	HAL_MOTOR_Motion(REVERSE);
 8002e7c:	2001      	movs	r0, #1
 8002e7e:	f7fe f843 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(500, U_ms, CLK);
 8002e82:	4a49      	ldr	r2, [pc, #292]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002e84:	2100      	movs	r1, #0
 8002e86:	f44f 70fa 	mov.w	r0, #500	; 0x1f4
 8002e8a:	f7ff fc59 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002e8e:	2002      	movs	r0, #2
 8002e90:	f7fe f83a 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002e94:	4a44      	ldr	r2, [pc, #272]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002e96:	2100      	movs	r1, #0
 8002e98:	20fa      	movs	r0, #250	; 0xfa
 8002e9a:	f7ff fc51 	bl	8002740 <delay>


	// Second arc mode
	HAL_Servo_Set_Angle(PARALLEL_ARC_STEERING_ANGLE3, CLK);
 8002e9e:	4a42      	ldr	r2, [pc, #264]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002ea0:	a13f      	add	r1, pc, #252	; (adr r1, 8002fa0 <UN_PARKING_PARALLEL_PATH_PLANNING+0x128>)
 8002ea2:	e9d1 0100 	ldrd	r0, r1, [r1]
 8002ea6:	f7fe f863 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002eaa:	4a3f      	ldr	r2, [pc, #252]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002eac:	2100      	movs	r1, #0
 8002eae:	20fa      	movs	r0, #250	; 0xfa
 8002eb0:	f7ff fc46 	bl	8002740 <delay>
	HAL_MOTOR_Motion(FORWARD);
 8002eb4:	2000      	movs	r0, #0
 8002eb6:	f7fe f827 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_ARC2_TIME, U_ms, CLK);
 8002eba:	4a3b      	ldr	r2, [pc, #236]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002ebc:	2100      	movs	r1, #0
 8002ebe:	f44f 602f 	mov.w	r0, #2800	; 0xaf0
 8002ec2:	f7ff fc3d 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002ec6:	2002      	movs	r0, #2
 8002ec8:	f7fe f81e 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002ecc:	4a36      	ldr	r2, [pc, #216]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002ece:	2100      	movs	r1, #0
 8002ed0:	20fa      	movs	r0, #250	; 0xfa
 8002ed2:	f7ff fc35 	bl	8002740 <delay>
	HAL_Servo_Set_Angle(90, CLK);
 8002ed6:	4a34      	ldr	r2, [pc, #208]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002ed8:	f04f 0000 	mov.w	r0, #0
 8002edc:	4933      	ldr	r1, [pc, #204]	; (8002fac <UN_PARKING_PARALLEL_PATH_PLANNING+0x134>)
 8002ede:	f7fe f847 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002ee2:	4a31      	ldr	r2, [pc, #196]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002ee4:	2100      	movs	r1, #0
 8002ee6:	20fa      	movs	r0, #250	; 0xfa
 8002ee8:	f7ff fc2a 	bl	8002740 <delay>

	// Straight line mode
	HAL_Servo_Set_Angle(PARALLEL_LINE_STEERING_ANGLE, CLK);
 8002eec:	4a2e      	ldr	r2, [pc, #184]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002eee:	f04f 0000 	mov.w	r0, #0
 8002ef2:	492e      	ldr	r1, [pc, #184]	; (8002fac <UN_PARKING_PARALLEL_PATH_PLANNING+0x134>)
 8002ef4:	f7fe f83c 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002ef8:	4a2b      	ldr	r2, [pc, #172]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002efa:	2100      	movs	r1, #0
 8002efc:	20fa      	movs	r0, #250	; 0xfa
 8002efe:	f7ff fc1f 	bl	8002740 <delay>
	HAL_MOTOR_Motion(FORWARD);
 8002f02:	2000      	movs	r0, #0
 8002f04:	f7fe f800 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_LINE_TIME, U_ms, CLK);
 8002f08:	4a27      	ldr	r2, [pc, #156]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f0a:	2100      	movs	r1, #0
 8002f0c:	f640 2028 	movw	r0, #2600	; 0xa28
 8002f10:	f7ff fc16 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002f14:	2002      	movs	r0, #2
 8002f16:	f7fd fff7 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002f1a:	4a23      	ldr	r2, [pc, #140]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f1c:	2100      	movs	r1, #0
 8002f1e:	20fa      	movs	r0, #250	; 0xfa
 8002f20:	f7ff fc0e 	bl	8002740 <delay>

	/**********************
	 * First maneuver
	 *********************/
	// First arc mode
	HAL_Servo_Set_Angle(PARALLEL_ARC_STEERING_ANGLE1, CLK);
 8002f24:	4a20      	ldr	r2, [pc, #128]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f26:	f04f 0000 	mov.w	r0, #0
 8002f2a:	4921      	ldr	r1, [pc, #132]	; (8002fb0 <UN_PARKING_PARALLEL_PATH_PLANNING+0x138>)
 8002f2c:	f7fe f820 	bl	8000f70 <HAL_Servo_Set_Angle>
	delay(250, U_ms, CLK);
 8002f30:	4a1d      	ldr	r2, [pc, #116]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f32:	2100      	movs	r1, #0
 8002f34:	20fa      	movs	r0, #250	; 0xfa
 8002f36:	f7ff fc03 	bl	8002740 <delay>
	HAL_MOTOR_Motion(FORWARD);
 8002f3a:	2000      	movs	r0, #0
 8002f3c:	f7fd ffe4 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_ARC1_TIME, U_ms, CLK);
 8002f40:	4a19      	ldr	r2, [pc, #100]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f42:	2100      	movs	r1, #0
 8002f44:	f640 2028 	movw	r0, #2600	; 0xa28
 8002f48:	f7ff fbfa 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002f4c:	2002      	movs	r0, #2
 8002f4e:	f7fd ffdb 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002f52:	4a15      	ldr	r2, [pc, #84]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f54:	2100      	movs	r1, #0
 8002f56:	20fa      	movs	r0, #250	; 0xfa
 8002f58:	f7ff fbf2 	bl	8002740 <delay>

	/**********************
	 * Start point
	 *********************/
	// Stop the car with the end of the obstacle
	HAL_Servo_Set_Angle(90, CLK);
 8002f5c:	4a12      	ldr	r2, [pc, #72]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f5e:	f04f 0000 	mov.w	r0, #0
 8002f62:	4912      	ldr	r1, [pc, #72]	; (8002fac <UN_PARKING_PARALLEL_PATH_PLANNING+0x134>)
 8002f64:	f7fe f804 	bl	8000f70 <HAL_Servo_Set_Angle>
	HAL_MOTOR_Motion(STOP);
 8002f68:	2002      	movs	r0, #2
 8002f6a:	f7fd ffcd 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(200, U_ms, CLK);
 8002f6e:	4a0e      	ldr	r2, [pc, #56]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f70:	2100      	movs	r1, #0
 8002f72:	20c8      	movs	r0, #200	; 0xc8
 8002f74:	f7ff fbe4 	bl	8002740 <delay>
	HAL_MOTOR_Motion(FORWARD);
 8002f78:	2000      	movs	r0, #0
 8002f7a:	f7fd ffc5 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PARALLEL_START_POS_TIME, U_ms, CLK);
 8002f7e:	4a0a      	ldr	r2, [pc, #40]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f80:	2100      	movs	r1, #0
 8002f82:	f240 5046 	movw	r0, #1350	; 0x546
 8002f86:	f7ff fbdb 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002f8a:	2002      	movs	r0, #2
 8002f8c:	f7fd ffbc 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002f90:	4a05      	ldr	r2, [pc, #20]	; (8002fa8 <UN_PARKING_PARALLEL_PATH_PLANNING+0x130>)
 8002f92:	2100      	movs	r1, #0
 8002f94:	20fa      	movs	r0, #250	; 0xfa
 8002f96:	f7ff fbd3 	bl	8002740 <delay>



}
 8002f9a:	bf00      	nop
 8002f9c:	bd80      	pop	{r7, pc}
 8002f9e:	bf00      	nop
 8002fa0:	00000000 	.word	0x00000000
 8002fa4:	4060e000 	.word	0x4060e000
 8002fa8:	007a1200 	.word	0x007a1200
 8002fac:	40568000 	.word	0x40568000
 8002fb0:	40468000 	.word	0x40468000

08002fb4 <PERPENDICULAR_PATH_PLANNING>:
 * @param [in] 	- none
 * @retval 		- none
 * Note			- none
 */
void PERPENDICULAR_PATH_PLANNING(void)
{
 8002fb4:	b580      	push	{r7, lr}
 8002fb6:	af00      	add	r7, sp, #0
	/**********************
	 * Start point
	 *********************/
	// Stop the car with the end of the obstacle
	HAL_MOTOR_Motion(STOP);
 8002fb8:	2002      	movs	r0, #2
 8002fba:	f7fd ffa5 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(200, U_ms, CLK);
 8002fbe:	4a23      	ldr	r2, [pc, #140]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 8002fc0:	2100      	movs	r1, #0
 8002fc2:	20c8      	movs	r0, #200	; 0xc8
 8002fc4:	f7ff fbbc 	bl	8002740 <delay>
	HAL_MOTOR_Motion(FORWARD);
 8002fc8:	2000      	movs	r0, #0
 8002fca:	f7fd ff9d 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PERPINDECULAR_START_POS_TIME, U_ms, CLK);
 8002fce:	4a1f      	ldr	r2, [pc, #124]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 8002fd0:	2100      	movs	r1, #0
 8002fd2:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8002fd6:	f7ff fbb3 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8002fda:	2002      	movs	r0, #2
 8002fdc:	f7fd ff94 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8002fe0:	4a1a      	ldr	r2, [pc, #104]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 8002fe2:	2100      	movs	r1, #0
 8002fe4:	20fa      	movs	r0, #250	; 0xfa
 8002fe6:	f7ff fbab 	bl	8002740 <delay>

	//second arc mode
	HAL_Servo_Set_Angle(PERPINDECULAR_ARC_STEERING_ANGLE1, clk);
 8002fea:	4a18      	ldr	r2, [pc, #96]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 8002fec:	f04f 0000 	mov.w	r0, #0
 8002ff0:	4917      	ldr	r1, [pc, #92]	; (8003050 <PERPENDICULAR_PATH_PLANNING+0x9c>)
 8002ff2:	f7fd ffbd 	bl	8000f70 <HAL_Servo_Set_Angle>
	HAL_MOTOR_Motion(REVERSE);
 8002ff6:	2001      	movs	r0, #1
 8002ff8:	f7fd ff86 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PERPINDECULAR_ARC_TIME, U_ms, clk);
 8002ffc:	4a13      	ldr	r2, [pc, #76]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 8002ffe:	2100      	movs	r1, #0
 8003000:	f44f 50e1 	mov.w	r0, #7200	; 0x1c20
 8003004:	f7ff fb9c 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8003008:	2002      	movs	r0, #2
 800300a:	f7fd ff7d 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, clk);
 800300e:	4a0f      	ldr	r2, [pc, #60]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 8003010:	2100      	movs	r1, #0
 8003012:	20fa      	movs	r0, #250	; 0xfa
 8003014:	f7ff fb94 	bl	8002740 <delay>

	//straight line mode
	HAL_Servo_Set_Angle(PERPINDECULAR_LINE_STEERING_ANGLE, clk);
 8003018:	4a0c      	ldr	r2, [pc, #48]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 800301a:	f04f 0000 	mov.w	r0, #0
 800301e:	490d      	ldr	r1, [pc, #52]	; (8003054 <PERPENDICULAR_PATH_PLANNING+0xa0>)
 8003020:	f7fd ffa6 	bl	8000f70 <HAL_Servo_Set_Angle>
	HAL_MOTOR_Motion(REVERSE);
 8003024:	2001      	movs	r0, #1
 8003026:	f7fd ff6f 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PERPINDECULAR_LINE__TIME, U_ms, clk);
 800302a:	4a08      	ldr	r2, [pc, #32]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 800302c:	2100      	movs	r1, #0
 800302e:	f240 5014 	movw	r0, #1300	; 0x514
 8003032:	f7ff fb85 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 8003036:	2002      	movs	r0, #2
 8003038:	f7fd ff66 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(2000, U_ms, CLK);
 800303c:	4a03      	ldr	r2, [pc, #12]	; (800304c <PERPENDICULAR_PATH_PLANNING+0x98>)
 800303e:	2100      	movs	r1, #0
 8003040:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 8003044:	f7ff fb7c 	bl	8002740 <delay>




}
 8003048:	bf00      	nop
 800304a:	bd80      	pop	{r7, pc}
 800304c:	007a1200 	.word	0x007a1200
 8003050:	40468000 	.word	0x40468000
 8003054:	40568000 	.word	0x40568000

08003058 <UN_PARKING_PERPENDICULAR_PATH_PLANNING>:

void UN_PARKING_PERPENDICULAR_PATH_PLANNING(void)
{
 8003058:	b580      	push	{r7, lr}
 800305a:	af00      	add	r7, sp, #0
	//straight line mode
	HAL_Servo_Set_Angle(PERPINDECULAR_LINE_STEERING_ANGLE, clk);
 800305c:	4a27      	ldr	r2, [pc, #156]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 800305e:	f04f 0000 	mov.w	r0, #0
 8003062:	4927      	ldr	r1, [pc, #156]	; (8003100 <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa8>)
 8003064:	f7fd ff84 	bl	8000f70 <HAL_Servo_Set_Angle>
	HAL_MOTOR_Motion(FORWARD);
 8003068:	2000      	movs	r0, #0
 800306a:	f7fd ff4d 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PERPINDECULAR_LINE__TIME, U_ms, clk);
 800306e:	4a23      	ldr	r2, [pc, #140]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 8003070:	2100      	movs	r1, #0
 8003072:	f240 5014 	movw	r0, #1300	; 0x514
 8003076:	f7ff fb63 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 800307a:	2002      	movs	r0, #2
 800307c:	f7fd ff44 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, CLK);
 8003080:	4a1e      	ldr	r2, [pc, #120]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 8003082:	2100      	movs	r1, #0
 8003084:	20fa      	movs	r0, #250	; 0xfa
 8003086:	f7ff fb5b 	bl	8002740 <delay>

	//second arc mode
	HAL_Servo_Set_Angle(PERPINDECULAR_ARC_STEERING_ANGLE1, clk);
 800308a:	4a1c      	ldr	r2, [pc, #112]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 800308c:	f04f 0000 	mov.w	r0, #0
 8003090:	491c      	ldr	r1, [pc, #112]	; (8003104 <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xac>)
 8003092:	f7fd ff6d 	bl	8000f70 <HAL_Servo_Set_Angle>
	HAL_MOTOR_Motion(FORWARD);
 8003096:	2000      	movs	r0, #0
 8003098:	f7fd ff36 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PERPINDECULAR_ARC_TIME, U_ms, clk);
 800309c:	4a17      	ldr	r2, [pc, #92]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 800309e:	2100      	movs	r1, #0
 80030a0:	f44f 50e1 	mov.w	r0, #7200	; 0x1c20
 80030a4:	f7ff fb4c 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 80030a8:	2002      	movs	r0, #2
 80030aa:	f7fd ff2d 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(250, U_ms, clk);
 80030ae:	4a13      	ldr	r2, [pc, #76]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 80030b0:	2100      	movs	r1, #0
 80030b2:	20fa      	movs	r0, #250	; 0xfa
 80030b4:	f7ff fb44 	bl	8002740 <delay>

	/**********************
	 * Start point
	 *********************/
	// Stop the car with the end of the obstacle
	HAL_Servo_Set_Angle(90, clk);
 80030b8:	4a10      	ldr	r2, [pc, #64]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 80030ba:	f04f 0000 	mov.w	r0, #0
 80030be:	4910      	ldr	r1, [pc, #64]	; (8003100 <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa8>)
 80030c0:	f7fd ff56 	bl	8000f70 <HAL_Servo_Set_Angle>
	HAL_MOTOR_Motion(STOP);
 80030c4:	2002      	movs	r0, #2
 80030c6:	f7fd ff1f 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(200, U_ms, CLK);
 80030ca:	4a0c      	ldr	r2, [pc, #48]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 80030cc:	2100      	movs	r1, #0
 80030ce:	20c8      	movs	r0, #200	; 0xc8
 80030d0:	f7ff fb36 	bl	8002740 <delay>
	HAL_MOTOR_Motion(FORWARD);
 80030d4:	2000      	movs	r0, #0
 80030d6:	f7fd ff17 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(PERPINDECULAR_START_POS_TIME, U_ms, CLK);
 80030da:	4a08      	ldr	r2, [pc, #32]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 80030dc:	2100      	movs	r1, #0
 80030de:	f44f 60fa 	mov.w	r0, #2000	; 0x7d0
 80030e2:	f7ff fb2d 	bl	8002740 <delay>
	HAL_MOTOR_Motion(STOP);
 80030e6:	2002      	movs	r0, #2
 80030e8:	f7fd ff0e 	bl	8000f08 <HAL_MOTOR_Motion>
	delay(5000, U_ms, CLK);
 80030ec:	4a03      	ldr	r2, [pc, #12]	; (80030fc <UN_PARKING_PERPENDICULAR_PATH_PLANNING+0xa4>)
 80030ee:	2100      	movs	r1, #0
 80030f0:	f241 3088 	movw	r0, #5000	; 0x1388
 80030f4:	f7ff fb24 	bl	8002740 <delay>

}
 80030f8:	bf00      	nop
 80030fa:	bd80      	pop	{r7, pc}
 80030fc:	007a1200 	.word	0x007a1200
 8003100:	40568000 	.word	0x40568000
 8003104:	40468000 	.word	0x40468000

08003108 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8003108:	480d      	ldr	r0, [pc, #52]	; (8003140 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 800310a:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 800310c:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 8003110:	480c      	ldr	r0, [pc, #48]	; (8003144 <LoopForever+0x6>)
  ldr r1, =_edata
 8003112:	490d      	ldr	r1, [pc, #52]	; (8003148 <LoopForever+0xa>)
  ldr r2, =_sidata
 8003114:	4a0d      	ldr	r2, [pc, #52]	; (800314c <LoopForever+0xe>)
  movs r3, #0
 8003116:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8003118:	e002      	b.n	8003120 <LoopCopyDataInit>

0800311a <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 800311a:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 800311c:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800311e:	3304      	adds	r3, #4

08003120 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8003120:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 8003122:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8003124:	d3f9      	bcc.n	800311a <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8003126:	4a0a      	ldr	r2, [pc, #40]	; (8003150 <LoopForever+0x12>)
  ldr r4, =_ebss
 8003128:	4c0a      	ldr	r4, [pc, #40]	; (8003154 <LoopForever+0x16>)
  movs r3, #0
 800312a:	2300      	movs	r3, #0
  b LoopFillZerobss
 800312c:	e001      	b.n	8003132 <LoopFillZerobss>

0800312e <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800312e:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8003130:	3204      	adds	r2, #4

08003132 <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 8003132:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8003134:	d3fb      	bcc.n	800312e <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8003136:	f000 f811 	bl	800315c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 800313a:	f7ff fcdf 	bl	8002afc <main>

0800313e <LoopForever>:

LoopForever:
    b LoopForever
 800313e:	e7fe      	b.n	800313e <LoopForever>
  ldr   r0, =_estack
 8003140:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 8003144:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8003148:	20000008 	.word	0x20000008
  ldr r2, =_sidata
 800314c:	080031c4 	.word	0x080031c4
  ldr r2, =_sbss
 8003150:	20000008 	.word	0x20000008
  ldr r4, =_ebss
 8003154:	200000d0 	.word	0x200000d0

08003158 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8003158:	e7fe      	b.n	8003158 <ADC1_2_IRQHandler>
	...

0800315c <__libc_init_array>:
 800315c:	b570      	push	{r4, r5, r6, lr}
 800315e:	2500      	movs	r5, #0
 8003160:	4e0c      	ldr	r6, [pc, #48]	; (8003194 <__libc_init_array+0x38>)
 8003162:	4c0d      	ldr	r4, [pc, #52]	; (8003198 <__libc_init_array+0x3c>)
 8003164:	1ba4      	subs	r4, r4, r6
 8003166:	10a4      	asrs	r4, r4, #2
 8003168:	42a5      	cmp	r5, r4
 800316a:	d109      	bne.n	8003180 <__libc_init_array+0x24>
 800316c:	f000 f81a 	bl	80031a4 <_init>
 8003170:	2500      	movs	r5, #0
 8003172:	4e0a      	ldr	r6, [pc, #40]	; (800319c <__libc_init_array+0x40>)
 8003174:	4c0a      	ldr	r4, [pc, #40]	; (80031a0 <__libc_init_array+0x44>)
 8003176:	1ba4      	subs	r4, r4, r6
 8003178:	10a4      	asrs	r4, r4, #2
 800317a:	42a5      	cmp	r5, r4
 800317c:	d105      	bne.n	800318a <__libc_init_array+0x2e>
 800317e:	bd70      	pop	{r4, r5, r6, pc}
 8003180:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8003184:	4798      	blx	r3
 8003186:	3501      	adds	r5, #1
 8003188:	e7ee      	b.n	8003168 <__libc_init_array+0xc>
 800318a:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 800318e:	4798      	blx	r3
 8003190:	3501      	adds	r5, #1
 8003192:	e7f2      	b.n	800317a <__libc_init_array+0x1e>
 8003194:	080031bc 	.word	0x080031bc
 8003198:	080031bc 	.word	0x080031bc
 800319c:	080031bc 	.word	0x080031bc
 80031a0:	080031c0 	.word	0x080031c0

080031a4 <_init>:
 80031a4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031a6:	bf00      	nop
 80031a8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80031aa:	bc08      	pop	{r3}
 80031ac:	469e      	mov	lr, r3
 80031ae:	4770      	bx	lr

080031b0 <_fini>:
 80031b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80031b2:	bf00      	nop
 80031b4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80031b6:	bc08      	pop	{r3}
 80031b8:	469e      	mov	lr, r3
 80031ba:	4770      	bx	lr
